{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"","title":"Home"},{"location":"index-legacy/","text":"EnCare C\u00f3digo da Disciplina : FGA0208 N\u00famero do Grupo : 02 Alunos Matr\u00edcula Aluno 18/0033743 Jo\u00e3o Pedro Silva de Carvalho 18/0027239 Renato Britto Ara\u00fajo 18/0033646 Jo\u00e3o Lu\u00eds Baraky 18/0029177 Wagner Martins da Cunha 16/0124581 Hugo Arag\u00e3o de Oliveira 16/0016169 N\u00edcalo Ribeiro Dourado Ara\u00fajo 17/0144259 Gustavo Nogueira Rodrigues Sobre Ser\u00e1 um projeto que tem como objetivo facilitar a busca por procedimentos est\u00e9ticos n\u00e3o-cirurgicos, como cortes de cabelo, servi\u00e7os de manicure e pedicure, maquiagem, entre outros. Para isso, o nosso projeto tem como proposta oferecer as ofertas dispon\u00edveis na regi\u00e3o, de acordo com o servi\u00e7o desejado e com a localiza\u00e7\u00e3o do usu\u00e1rio. Primeira entrega Screenshots Primeira Entrega <<DSW(Base)>> V\u00eddeo(s) Primeira Entrega <<DSW(Base)>> M\u00f3dulo Projeto N\u00e3o Orientado a Abordagens Espec\u00edficas Link: https://youtu.be/OqCiTozAYR8 M\u00f3dulo Processos/Metodologias/Abordagens Link: https://youtu.be/UjFOLxKm9jY Segunda Entrega Screenshots Segunda Entrega <<FOCO: DSW(Modelagem)>> V\u00eddeo(s) Segunda Entrega <<FOCO: DSW(Modelagem)>> Modelagem Est\u00e1tica Link: https://youtu.be/LtufoTmp0eY Modelagem Din\u00e2mica Link: https://youtu.be/Jz1-VP2KhHM Modelagem \u00c1gil Link: https://youtu.be/-za40zMGV-0 Iniciativas Extras Link: https://youtu.be/JcWaGilgkzo Descritivo dos Principais Aspectos T\u00e9cnicos Principal(is) Metodologia(s) Adotada(s) : Scrum Principais Linguagens Utilizadas e/ou Pretendidas : Pretendidas : JavaScript e Python Principais Tecnologias Utilizadas e/ou Pretendidas : A Definir Principal(is) Estilo(s) Arquitetural(is) Adotado(s) : A Definir","title":"EnCare"},{"location":"index-legacy/#encare","text":"C\u00f3digo da Disciplina : FGA0208 N\u00famero do Grupo : 02","title":"EnCare"},{"location":"index-legacy/#alunos","text":"Matr\u00edcula Aluno 18/0033743 Jo\u00e3o Pedro Silva de Carvalho 18/0027239 Renato Britto Ara\u00fajo 18/0033646 Jo\u00e3o Lu\u00eds Baraky 18/0029177 Wagner Martins da Cunha 16/0124581 Hugo Arag\u00e3o de Oliveira 16/0016169 N\u00edcalo Ribeiro Dourado Ara\u00fajo 17/0144259 Gustavo Nogueira Rodrigues","title":"Alunos"},{"location":"index-legacy/#sobre","text":"Ser\u00e1 um projeto que tem como objetivo facilitar a busca por procedimentos est\u00e9ticos n\u00e3o-cirurgicos, como cortes de cabelo, servi\u00e7os de manicure e pedicure, maquiagem, entre outros. Para isso, o nosso projeto tem como proposta oferecer as ofertas dispon\u00edveis na regi\u00e3o, de acordo com o servi\u00e7o desejado e com a localiza\u00e7\u00e3o do usu\u00e1rio.","title":"Sobre"},{"location":"index-legacy/#primeira-entrega","text":"","title":"Primeira entrega"},{"location":"index-legacy/#screenshots-primeira-entrega-dswbase","text":"","title":"Screenshots Primeira Entrega &lt;&lt;DSW(Base)&gt;&gt;"},{"location":"index-legacy/#videos-primeira-entrega-dswbase","text":"","title":"V\u00eddeo(s) Primeira Entrega &lt;&lt;DSW(Base)&gt;&gt;"},{"location":"index-legacy/#modulo-projeto-nao-orientado-a-abordagens-especificas","text":"Link: https://youtu.be/OqCiTozAYR8","title":"M\u00f3dulo Projeto N\u00e3o Orientado a Abordagens Espec\u00edficas"},{"location":"index-legacy/#modulo-processosmetodologiasabordagens","text":"Link: https://youtu.be/UjFOLxKm9jY","title":"M\u00f3dulo Processos/Metodologias/Abordagens"},{"location":"index-legacy/#segunda-entrega","text":"","title":"Segunda Entrega"},{"location":"index-legacy/#screenshots-segunda-entrega-foco-dswmodelagem","text":"","title":"Screenshots Segunda Entrega &lt;&lt;FOCO: DSW(Modelagem)&gt;&gt;"},{"location":"index-legacy/#videos-segunda-entrega-foco-dswmodelagem","text":"","title":"V\u00eddeo(s) Segunda Entrega &lt;&lt;FOCO: DSW(Modelagem)&gt;&gt;"},{"location":"index-legacy/#modelagem-estatica","text":"Link: https://youtu.be/LtufoTmp0eY","title":"Modelagem Est\u00e1tica"},{"location":"index-legacy/#modelagem-dinamica","text":"Link: https://youtu.be/Jz1-VP2KhHM","title":"Modelagem Din\u00e2mica"},{"location":"index-legacy/#modelagem-agil","text":"Link: https://youtu.be/-za40zMGV-0","title":"Modelagem \u00c1gil"},{"location":"index-legacy/#iniciativas-extras","text":"Link: https://youtu.be/JcWaGilgkzo","title":"Iniciativas Extras"},{"location":"index-legacy/#descritivo-dos-principais-aspectos-tecnicos","text":"Principal(is) Metodologia(s) Adotada(s) : Scrum Principais Linguagens Utilizadas e/ou Pretendidas : Pretendidas : JavaScript e Python Principais Tecnologias Utilizadas e/ou Pretendidas : A Definir Principal(is) Estilo(s) Arquitetural(is) Adotado(s) : A Definir","title":"Descritivo dos Principais Aspectos T\u00e9cnicos"},{"location":"Base/bpmn/modelagem_bpmn/","text":"Modelagem BPMN A nota\u00e7\u00e3o BPMN (Business Process Model and Notation) \u00e9 uma representa\u00e7\u00e3o gr\u00e1fica (s\u00e3o \u00edcones), uma linguagem, uma forma de simbolizar o fluxo de um processo, isto \u00e9, de fazer o mapeamento dos processos. Basicamente, \u00e9 uma representa\u00e7\u00e3o visual do fluxo de tarefas que existem no seu processo. A nota\u00e7\u00e3o BPMN permite que voc\u00ea desenhe e conhe\u00e7a todas as tarefas operacionais de um neg\u00f3cio de forma l\u00f3gica, sequencial. \u00c9 poss\u00edvel tamb\u00e9m identificar os pap\u00e9is de cada um, os eventos e todos os demais componentes de um processo. Clique aqui para acessar a vers\u00e3o em PDF Geral Sprint Planning Sprint Review Daily Coleta de Dados Refer\u00eancias CASTRO, Bruna. Nota\u00e7\u00e3o BPMN: O que \u00e9 e quando usar? Guia completo. Blog SML Brasil. Dispon\u00edvel em: https://blog.smlbrasil.com.br/o-que-significa-bpmn/ . Acesso em: 17 de fevereiro de 2021. Versionamento Vers\u00e3o Data Coment\u00e1rios Autor(es) 0.1 17/02/2021 Adi\u00e7\u00e3o da p\u00e1gina Gustavo Nogueira & Renato 0.2 17/02/2021 Adi\u00e7\u00e3o dos diagramas geral, sprint e planning Gustavo Nogueira 0.3 18/02/2021 Adi\u00e7\u00e3o da an\u00e1lise da Coleta de Dados, Daily e Sprint Review Renato Britto Araujo","title":"Modelagem BPMN"},{"location":"Base/bpmn/modelagem_bpmn/#modelagem-bpmn","text":"A nota\u00e7\u00e3o BPMN (Business Process Model and Notation) \u00e9 uma representa\u00e7\u00e3o gr\u00e1fica (s\u00e3o \u00edcones), uma linguagem, uma forma de simbolizar o fluxo de um processo, isto \u00e9, de fazer o mapeamento dos processos. Basicamente, \u00e9 uma representa\u00e7\u00e3o visual do fluxo de tarefas que existem no seu processo. A nota\u00e7\u00e3o BPMN permite que voc\u00ea desenhe e conhe\u00e7a todas as tarefas operacionais de um neg\u00f3cio de forma l\u00f3gica, sequencial. \u00c9 poss\u00edvel tamb\u00e9m identificar os pap\u00e9is de cada um, os eventos e todos os demais componentes de um processo. Clique aqui para acessar a vers\u00e3o em PDF","title":"Modelagem BPMN"},{"location":"Base/bpmn/modelagem_bpmn/#geral","text":"","title":"Geral"},{"location":"Base/bpmn/modelagem_bpmn/#sprint","text":"","title":"Sprint"},{"location":"Base/bpmn/modelagem_bpmn/#planning","text":"","title":"Planning"},{"location":"Base/bpmn/modelagem_bpmn/#sprint-review","text":"","title":"Sprint Review"},{"location":"Base/bpmn/modelagem_bpmn/#daily","text":"","title":"Daily"},{"location":"Base/bpmn/modelagem_bpmn/#coleta-de-dados","text":"","title":"Coleta de Dados"},{"location":"Base/bpmn/modelagem_bpmn/#referencias","text":"CASTRO, Bruna. Nota\u00e7\u00e3o BPMN: O que \u00e9 e quando usar? Guia completo. Blog SML Brasil. Dispon\u00edvel em: https://blog.smlbrasil.com.br/o-que-significa-bpmn/ . Acesso em: 17 de fevereiro de 2021.","title":"Refer\u00eancias"},{"location":"Base/bpmn/modelagem_bpmn/#versionamento","text":"Vers\u00e3o Data Coment\u00e1rios Autor(es) 0.1 17/02/2021 Adi\u00e7\u00e3o da p\u00e1gina Gustavo Nogueira & Renato 0.2 17/02/2021 Adi\u00e7\u00e3o dos diagramas geral, sprint e planning Gustavo Nogueira 0.3 18/02/2021 Adi\u00e7\u00e3o da an\u00e1lise da Coleta de Dados, Daily e Sprint Review Renato Britto Araujo","title":"Versionamento"},{"location":"Base/causa_e_efeito/causa_e_efeito/","text":"Diagrama de Causa e Efeito Trata-se de uma ferramenta da qualidade que ajuda a levantar as causas-ra\u00edzes de um problema, analisando todos os fatores que envolvem a execu\u00e7\u00e3o do processo. O diagrama apresenta a rela\u00e7\u00e3o existente entre o resultado indesejado ou n\u00e3o conforme de um processo (efeito) e os diversos fatores (causas) que podem contribuir para que esse resultado tenha ocorrido. Diagrama Refer\u00eancias BASTIANI, Jeison; MARTINS, Rosemary. Diagrama de Ishikawa. Blog da Qualidade. Dispon\u00edvel em: https://blogdaqualidade.com.br/diagrama-de-ishikawa/ . Acesso em: 17 de fevereiro de 2021. Versionamento Vers\u00e3o Data Coment\u00e1rios Autor(es) 0.1 17/02/2021 Adi\u00e7\u00e3o da p\u00e1gina Gustavo Nogueira 0.2 17/02/2021 Adi\u00e7\u00e3o de ajustes Gustavo Nogueira 0.3 01/03/2021 Melhora terminologia Jo\u00e3o Luis Baraky","title":"Causa e Efeito"},{"location":"Base/causa_e_efeito/causa_e_efeito/#diagrama-de-causa-e-efeito","text":"Trata-se de uma ferramenta da qualidade que ajuda a levantar as causas-ra\u00edzes de um problema, analisando todos os fatores que envolvem a execu\u00e7\u00e3o do processo. O diagrama apresenta a rela\u00e7\u00e3o existente entre o resultado indesejado ou n\u00e3o conforme de um processo (efeito) e os diversos fatores (causas) que podem contribuir para que esse resultado tenha ocorrido.","title":"Diagrama de Causa e Efeito"},{"location":"Base/causa_e_efeito/causa_e_efeito/#diagrama","text":"","title":"Diagrama"},{"location":"Base/causa_e_efeito/causa_e_efeito/#referencias","text":"BASTIANI, Jeison; MARTINS, Rosemary. Diagrama de Ishikawa. Blog da Qualidade. Dispon\u00edvel em: https://blogdaqualidade.com.br/diagrama-de-ishikawa/ . Acesso em: 17 de fevereiro de 2021.","title":"Refer\u00eancias"},{"location":"Base/causa_e_efeito/causa_e_efeito/#versionamento","text":"Vers\u00e3o Data Coment\u00e1rios Autor(es) 0.1 17/02/2021 Adi\u00e7\u00e3o da p\u00e1gina Gustavo Nogueira 0.2 17/02/2021 Adi\u00e7\u00e3o de ajustes Gustavo Nogueira 0.3 01/03/2021 Melhora terminologia Jo\u00e3o Luis Baraky","title":"Versionamento"},{"location":"Base/design_sprint/design_sprint/","text":"Desing Sprint Gera\u00e7\u00e3o de ideias Afim de gerar as ideias de como seria a aplica\u00e7\u00e3o, a equipe realizou uma reuni\u00e3o onde usamos a t\u00e9cnica de brainstorming, ap\u00f3s isso cada membro teve que gerar o seu pr\u00f3prio esbo\u00e7o para validar as ideias discutidas. Esbo\u00e7o das ideias Os esbo\u00e7os s\u00e3o representa\u00e7\u00f5es de uma sess\u00e3o de brainstorming realizada pela equipe, de forma ass\u00edncrona, onde todos apresentaram suas ideias de como o Encare deve ser. Os documentos a seguir s\u00e3o feitos em formato livre, sem compromisso com o estilo espec\u00edfico, haja visto que o prop\u00f3sito da atividade era capturar as ideias da equipe de forma crua. Ap\u00f3s o processo dessa captura de ideias, n\u00f3s selecionamos uma delas para guiar o processo de prototipagem do projeto Encare. A decis\u00e3o est\u00e1 descritaabaixo dos esbo\u00e7os. Jo\u00e3o Pedro Wagner Martins Renato Britto Jo\u00e3o Baraky Hugo Arag\u00e3o Gustavo Nogueira N\u00edcalo Ribeiro Decis\u00e3o Foi feita de decis\u00e3o de se selecionar o esbo\u00e7o de Jo\u00e3o Baraky, visto que este captura a ess\u00eancia do que o Encare deve ser. Boa parte da ideia ser\u00e1 usada, mas algumas mudan\u00e7as foram feitas para alinhar com o resto do time. Diverg\u00eancias do esbo\u00e7o Foi feita a decis\u00e3o de abandonar o feature representado no esbo\u00e7o selecionado relacionado aos pre\u00e7os de cada estabelecimento. No esbo\u00e7o \u00e9 poss\u00edvel ver um feature semelhante ao iFood, onde os pre\u00e7os de um estabelecimento s\u00e3o representados com cifr\u00f5es ($). A ideia foi abandonada pois se julgou que fosse um dado dif\u00edcil de se procurar, e caso houvesse continuidade nessa ideia, ter\u00edamos que n\u00e3o apenas coletar esses dados manualmente para cada estabelecimento mas tamb\u00e9m usar ju\u00edzos de valor para definir em qual das 5 categorias de pre\u00e7o um dado estabelecimento pertence. Prot\u00f3tipo O prot\u00f3tipo de baixa fidelidade foi produzido a partir dos artefatos gerados, onde pudemos revisar os elementos acordados da aplica\u00e7\u00e3o e geramos a vers\u00e3o final da ideia prototipada. ![Figura1](imagens/encare_feed.png) *Figura 1. Feed inicial* ![Figura2](imagens/encare_filtros.png) *Figura 2. Filtragem de Op\u00e7\u00f5es* ![Figura3](imagens/encare_estabelecimento.png) *Figura 3. Perfil do estabelecimento* Versionamento Data Nome Vers\u00e3o Descri\u00e7\u00e3o 16/02/2021 Jo\u00e3o Pedro Silva de Carvalho 0.1 Adicionando Esbo\u00e7o 17/02/2021 Wagner Martins da Cunha 0.2 Adicionando storyboard 17/02/2021 Renato Britto Araujo 0.3 Adicionando Esbo\u00e7o 17/02/2021 Jo\u00e3o Luis Baraky 0.4 Adicionando Esbo\u00e7o 18/02/2021 Hugo Arag\u00e3o 0.5 Adicionando Esbo\u00e7o 19/02/2021 N\u00edcalo Ribeiro 0.6 Adicionando Esbo\u00e7o 19/02/2021 Gustavo Nogueira 0.7 Adicionando Esbo\u00e7o 19/02/2021 Hugo, Jo\u00e3o Pedro, Renato 0.8 Adicionando Prototipo de Baixa Fidelidade 19/02/2021 Renato Britto Araujo 0.9 Adiciona decis\u00e3o, explica\u00e7\u00e3o das mudan\u00e7as dela, esbo\u00e7o e gera\u00e7\u00e3o de ideias. 19/02/2021 Jo\u00e3o Pedro Silva de Carvalho 1.0 Adiciona gera\u00e7\u00e3o de ideias 27/02/2021 Jo\u00e3o Luis Baraky 1.1 Corrige erros de ortografia e concord\u00e2ncia","title":"Design Sprint"},{"location":"Base/design_sprint/design_sprint/#desing-sprint","text":"","title":"Desing Sprint"},{"location":"Base/design_sprint/design_sprint/#geracao-de-ideias","text":"Afim de gerar as ideias de como seria a aplica\u00e7\u00e3o, a equipe realizou uma reuni\u00e3o onde usamos a t\u00e9cnica de brainstorming, ap\u00f3s isso cada membro teve que gerar o seu pr\u00f3prio esbo\u00e7o para validar as ideias discutidas.","title":"Gera\u00e7\u00e3o de ideias"},{"location":"Base/design_sprint/design_sprint/#esboco-das-ideias","text":"Os esbo\u00e7os s\u00e3o representa\u00e7\u00f5es de uma sess\u00e3o de brainstorming realizada pela equipe, de forma ass\u00edncrona, onde todos apresentaram suas ideias de como o Encare deve ser. Os documentos a seguir s\u00e3o feitos em formato livre, sem compromisso com o estilo espec\u00edfico, haja visto que o prop\u00f3sito da atividade era capturar as ideias da equipe de forma crua. Ap\u00f3s o processo dessa captura de ideias, n\u00f3s selecionamos uma delas para guiar o processo de prototipagem do projeto Encare. A decis\u00e3o est\u00e1 descritaabaixo dos esbo\u00e7os.","title":"Esbo\u00e7o das ideias"},{"location":"Base/design_sprint/design_sprint/#joao-pedro","text":"","title":"Jo\u00e3o Pedro"},{"location":"Base/design_sprint/design_sprint/#wagner-martins","text":"","title":"Wagner Martins"},{"location":"Base/design_sprint/design_sprint/#renato-britto","text":"","title":"Renato Britto"},{"location":"Base/design_sprint/design_sprint/#joao-baraky","text":"","title":"Jo\u00e3o Baraky"},{"location":"Base/design_sprint/design_sprint/#hugo-aragao","text":"","title":"Hugo Arag\u00e3o"},{"location":"Base/design_sprint/design_sprint/#gustavo-nogueira","text":"","title":"Gustavo Nogueira"},{"location":"Base/design_sprint/design_sprint/#nicalo-ribeiro","text":"","title":"N\u00edcalo Ribeiro"},{"location":"Base/design_sprint/design_sprint/#decisao","text":"Foi feita de decis\u00e3o de se selecionar o esbo\u00e7o de Jo\u00e3o Baraky, visto que este captura a ess\u00eancia do que o Encare deve ser. Boa parte da ideia ser\u00e1 usada, mas algumas mudan\u00e7as foram feitas para alinhar com o resto do time.","title":"Decis\u00e3o"},{"location":"Base/design_sprint/design_sprint/#divergencias-do-esboco","text":"Foi feita a decis\u00e3o de abandonar o feature representado no esbo\u00e7o selecionado relacionado aos pre\u00e7os de cada estabelecimento. No esbo\u00e7o \u00e9 poss\u00edvel ver um feature semelhante ao iFood, onde os pre\u00e7os de um estabelecimento s\u00e3o representados com cifr\u00f5es ($). A ideia foi abandonada pois se julgou que fosse um dado dif\u00edcil de se procurar, e caso houvesse continuidade nessa ideia, ter\u00edamos que n\u00e3o apenas coletar esses dados manualmente para cada estabelecimento mas tamb\u00e9m usar ju\u00edzos de valor para definir em qual das 5 categorias de pre\u00e7o um dado estabelecimento pertence.","title":"Diverg\u00eancias do esbo\u00e7o"},{"location":"Base/design_sprint/design_sprint/#prototipo","text":"O prot\u00f3tipo de baixa fidelidade foi produzido a partir dos artefatos gerados, onde pudemos revisar os elementos acordados da aplica\u00e7\u00e3o e geramos a vers\u00e3o final da ideia prototipada. ![Figura1](imagens/encare_feed.png) *Figura 1. Feed inicial* ![Figura2](imagens/encare_filtros.png) *Figura 2. Filtragem de Op\u00e7\u00f5es* ![Figura3](imagens/encare_estabelecimento.png) *Figura 3. Perfil do estabelecimento*","title":"Prot\u00f3tipo"},{"location":"Base/design_sprint/design_sprint/#versionamento","text":"Data Nome Vers\u00e3o Descri\u00e7\u00e3o 16/02/2021 Jo\u00e3o Pedro Silva de Carvalho 0.1 Adicionando Esbo\u00e7o 17/02/2021 Wagner Martins da Cunha 0.2 Adicionando storyboard 17/02/2021 Renato Britto Araujo 0.3 Adicionando Esbo\u00e7o 17/02/2021 Jo\u00e3o Luis Baraky 0.4 Adicionando Esbo\u00e7o 18/02/2021 Hugo Arag\u00e3o 0.5 Adicionando Esbo\u00e7o 19/02/2021 N\u00edcalo Ribeiro 0.6 Adicionando Esbo\u00e7o 19/02/2021 Gustavo Nogueira 0.7 Adicionando Esbo\u00e7o 19/02/2021 Hugo, Jo\u00e3o Pedro, Renato 0.8 Adicionando Prototipo de Baixa Fidelidade 19/02/2021 Renato Britto Araujo 0.9 Adiciona decis\u00e3o, explica\u00e7\u00e3o das mudan\u00e7as dela, esbo\u00e7o e gera\u00e7\u00e3o de ideias. 19/02/2021 Jo\u00e3o Pedro Silva de Carvalho 1.0 Adiciona gera\u00e7\u00e3o de ideias 27/02/2021 Jo\u00e3o Luis Baraky 1.1 Corrige erros de ortografia e concord\u00e2ncia","title":"Versionamento"},{"location":"Base/estimativas/estimativas/","text":"Estimativas de Custo Introdu\u00e7\u00e3o O objetivo deste documento \u00e9 apresentar uma estimativa inicial de esfor\u00e7o e tempo necess\u00e1rios para o desenvolvimento do software Encare. Segundo Fenton e Pfleeger (1997), uma estimativa \u00e9 uma avalia\u00e7\u00e3o de probabilidade. Uma estimativa s\u00f3 \u00e9 \u00fatil se for razoavelmente precisa. N\u00e3o se espera que uma estimativa seja exata, mas que seja precisa o suficiente para que se tenha seguran\u00e7a de fazer julgamentos e tomar decis\u00f5es, considerando os limites do intervalo de confian\u00e7a. De acordo com Hazan (2001), Calvert (1996) e Rezende (1999), as principais raz\u00f5es para se medir software s\u00e3o: formar uma baseline para estimativas; verificar se as metas de produtividade e qualidade est\u00e3o sendo atingidas; avaliar as vantagens do uso de novos m\u00e9todos e ferramentas de engenharia de software; melhorar o relacionamento com o cliente; ajudar na justificativa de pedidos de treinamento e aquisi\u00e7\u00e3o de novas ferramentas; melhorar a ger\u00eancia de contratos de software; reduzir o risco do estabelecimento de um cronograma invi\u00e1vel; melhorar a ger\u00eancia de projetos de desenvolvimento de software. Modelos Algor\u00edtmicos \u00c9 um conjunto de modelos que apresentam um ou mais algoritmos que produzem uma estimativa de custo de software como uma fun\u00e7\u00e3o de um n\u00famero de vari\u00e1veis que s\u00e3o consideradas ser de maior import\u00e2ncia para o custo. Esses modelos podem ser separados a partir de m\u00e9tricas, sendo elas: orientadas ao tamanho: as estimativas de esfor\u00e7o e tempo s\u00e3o calculadas principalmente a partir do n\u00famero de linhas que se estima que o software ter\u00e1; orientadas \u00e0 fun\u00e7\u00e3o: as estimativas s\u00e3o feitas atribuindo-se pontos de funcionalidade a partir da identifica\u00e7\u00e3o de complexidade para diferentes tipos de arquivos, entradas e sa\u00eddas; orientadas a complexidade: as estimativas levam em conta caracter\u00edsticas como a quantidade de operadores e operandos presentes no c\u00f3digo, ou o fluxo de controle de um programa. Para as estimativas iniciais do projeto Encare, utilizamos uma t\u00e9cnica de m\u00e9tricas orientadas ao tamanho, conhecida como COCOMO. COCOMO - COnstructive COst MOdel O Modelo de Custo Construtivo \u00e9 apresentado em uma hierarquia de modelos, sendo eles: COCOMO B\u00e1sico: computa o esfor\u00e7o e o custo de desenvolvimento considerando uma estimativa do tamanho do programa (em LOC - Linhas de C\u00f3digo). COCOMO Intermedi\u00e1rio: computa o esfor\u00e7o e o custo de desenvolvimento considerando uma estimativa do tamanho do programa e um conjunto de direcionadores de custo. COCOMO Detalhado: al\u00e9m das caracter\u00edsticas do COCOMO intermedi\u00e1rio, inclui uma avalia\u00e7\u00e3o do impacto dos direcionadores de custo sobre cada etapa do desenvolvimento. O modelo COCOMO pode ser aplicado em tr\u00eas classes de projetos: Modo Org\u00e2nico: projetos simples, relativamente pequenos, com conjuntos de requisitos n\u00e3o t\u00e3o r\u00edgidos, com equipes pequenas e experientes. Modo Semidestacado: projetos intermedi\u00e1rios (em tamanho e complexidade), com alguns requisitos r\u00edgidos e outros n\u00e3o t\u00e3o r\u00edgidos, com n\u00edveis mistos de experi\u00eancia nas equipes. Modo Embutido: projetos com conjunto r\u00edgido de restri\u00e7\u00f5es operacionais, tanto em hardware, quanto em software. COCOMO Intermedi\u00e1rio Para o c\u00e1lculo dos esfor\u00e7os, utilizamos o COCOMO Intermedi\u00e1rio, uma vez que o modelo considera mais aspectos al\u00e9m de apenas o tamanho do software, de forma a poder aumentar a precis\u00e3o da estimativa. Os requisitos do projeto na fase inicial n\u00e3o apresentam grande rigidez, mas t\u00eam caracter\u00edsticas a se considerar, como as imagens que devem ser corretamente filtradas e os estabelecimentos devem apresentar dados corretos. Considerando tamb\u00e9m as diferen\u00e7as de experi\u00eancia dentro da equipe, o c\u00e1lculo ser\u00e1 aplicado usando o modo semidestacado. O modelo utiliza a seguinte equa\u00e7\u00e3o para estimativa de esfor\u00e7o: E = a x S^b x fae sendo: E : o esfor\u00e7o aplicado (em pessoas-m\u00eas). S : o n\u00famero (estimado) de linhas de c\u00f3digo para o projeto (em milhares). a : um coeficiente fornecido na figura 1. b : um expoente fornecido na figura 1. fae : o Fator de Ajustamento do Esfor\u00e7o O Fator de Ajustamento do esfor\u00e7o \u00e9 calculado multiplicando os atributos dos Direcionadores de custo. Os valores da multiplica\u00e7\u00e3o s\u00e3o escolhidos a partir de valores que devem ser dados entre \"muito baixo\" e \"extremamente elevado\". Esses atributos podem ser visualizados na Figura 2. Figura 1. Coeficientes do COCOMO Intermedi\u00e1rio. Fonte: [2] Figura 2. Direcionadores de custo do COCOMO Intermedi\u00e1rio. Fonte: [2] Para a estimativa de tempo, segue-se a seguinte equa\u00e7\u00e3o: T = c x E^d sendo: T : o tempo de desenvolvimento (em meses cronol\u00f3gicos). E : o esfor\u00e7o aplicado (em pessoas-m\u00eas). c : um coeficiente fornecido na figura 3. d : um expoente fornecido na figura 3. Figura 3. Coeficientes do COCOMO b\u00e1sico. Fonte: [2] C\u00e1lculos das estimativas O fator de ajustamento de esfor\u00e7o foi calculado conforme os seguintes multiplicadores concordados pela equipe: Atributos do produto Confiabilidade exigida do software: 1.15 (Elevado) Tamanho do Banco de Dados: 1.08 (Elevado) Complexidade do produto: 1.00 (Normal) Atributos do hardware Restri\u00e7\u00f5es ao tempo de execu\u00e7\u00e3o: 1.00 (Normal) Restri\u00e7\u00f5es de mem\u00f3ria: 1.00 (Normal) Volatilidade do ambiente de m\u00e1quina virtual: 1.00 (Normal) Tempo de turnaround (tempo para completar o ciclo) exigido: 1.00 (Normal) Atributos de pessoal Capacidade do analista: 1.00 (Normal) Experi\u00eancia em aplica\u00e7\u00f5es: 0.91 (Elevado) Capacidade do programador: 0.86 (Elevado) Experi\u00eancia em m\u00e1quina virtual: 1.00 (Normal) Experi\u00eancia com a linguagem de programa\u00e7\u00e3o: 1.00 (Normal) Atributos de projeto Uso de pr\u00e1ticas modernas de programa\u00e7\u00e3o: 0.91 (Elevado) Uso de ferramentas de software: 1.00 (Normal) Cronograma exigido de desenvolvimento: 1.10 (Muito Elevado) Para a quantidade de linhas em KLOC (linhas de c\u00f3digo em milhares), foram considerados os m\u00f3dulos abaixo, derivados dos requisitos elicitados. Backend API dos estabelecimentos - 200 linhas Script para mandar os dados do google forms para o banco de dados - 20 linhas Frontend Tela do feed de servi\u00e7os - 300 linhas Tela do perfil do estabelecimento - 200 linhas Consumir a API do backend - 50 linhas Consumir a API do Google maps - 50 linhas Embora as linguagens ainda n\u00e3o tenham sido decididas, as estimativas de linhas foram feitas pensando em linguagens nas linguagens python e javascript. Dados os valores de fae = 0.973 e S = 0.82 , temos como resultado da estimativa de esfor\u00e7o: E = 3 * 0.82^1.12 * 0.973 E = 2.33 pessoas-m\u00eas e a estimativa de tempo: T = 2.5 * 2.33^0.35 T = 3.3 meses Refer\u00eancias [1] Documento de estimativas de custo do reposit\u00f3rio A Monitoria . Dispon\u00edvel em: https://2019-2-arquitetura-desenho.github.io/wiki/dinamica_seminario_I/estimativas_de_custo/ [2] Meller, Maristela Corr\u00eaa. Modelos Para Estimar Custos De Software: Estudo Comparativo Com Softwares De Pequeno Porte. 2002. Dispon\u00edvel em: https://repositorio.ufsc.br/xmlui/handle/123456789/82351 Versionamento Nome Vers\u00e3o Data Descri\u00e7\u00e3o Wagner Martins 0.1 16/02/2021 Introdu\u00e7\u00e3o e modelos de estimativa Wagner Martins 0.2 17/02/2021 Realiza\u00e7\u00e3o dos c\u00e1lculos das estimativas Jo\u00e3o Luis Baraky 0.3 27/02/2021 Atualiza\u00e7\u00f5es na est\u00e9tica do documento","title":"Estimativas"},{"location":"Base/estimativas/estimativas/#estimativas-de-custo","text":"","title":"Estimativas de Custo"},{"location":"Base/estimativas/estimativas/#introducao","text":"O objetivo deste documento \u00e9 apresentar uma estimativa inicial de esfor\u00e7o e tempo necess\u00e1rios para o desenvolvimento do software Encare. Segundo Fenton e Pfleeger (1997), uma estimativa \u00e9 uma avalia\u00e7\u00e3o de probabilidade. Uma estimativa s\u00f3 \u00e9 \u00fatil se for razoavelmente precisa. N\u00e3o se espera que uma estimativa seja exata, mas que seja precisa o suficiente para que se tenha seguran\u00e7a de fazer julgamentos e tomar decis\u00f5es, considerando os limites do intervalo de confian\u00e7a. De acordo com Hazan (2001), Calvert (1996) e Rezende (1999), as principais raz\u00f5es para se medir software s\u00e3o: formar uma baseline para estimativas; verificar se as metas de produtividade e qualidade est\u00e3o sendo atingidas; avaliar as vantagens do uso de novos m\u00e9todos e ferramentas de engenharia de software; melhorar o relacionamento com o cliente; ajudar na justificativa de pedidos de treinamento e aquisi\u00e7\u00e3o de novas ferramentas; melhorar a ger\u00eancia de contratos de software; reduzir o risco do estabelecimento de um cronograma invi\u00e1vel; melhorar a ger\u00eancia de projetos de desenvolvimento de software.","title":"Introdu\u00e7\u00e3o"},{"location":"Base/estimativas/estimativas/#modelos-algoritmicos","text":"\u00c9 um conjunto de modelos que apresentam um ou mais algoritmos que produzem uma estimativa de custo de software como uma fun\u00e7\u00e3o de um n\u00famero de vari\u00e1veis que s\u00e3o consideradas ser de maior import\u00e2ncia para o custo. Esses modelos podem ser separados a partir de m\u00e9tricas, sendo elas: orientadas ao tamanho: as estimativas de esfor\u00e7o e tempo s\u00e3o calculadas principalmente a partir do n\u00famero de linhas que se estima que o software ter\u00e1; orientadas \u00e0 fun\u00e7\u00e3o: as estimativas s\u00e3o feitas atribuindo-se pontos de funcionalidade a partir da identifica\u00e7\u00e3o de complexidade para diferentes tipos de arquivos, entradas e sa\u00eddas; orientadas a complexidade: as estimativas levam em conta caracter\u00edsticas como a quantidade de operadores e operandos presentes no c\u00f3digo, ou o fluxo de controle de um programa. Para as estimativas iniciais do projeto Encare, utilizamos uma t\u00e9cnica de m\u00e9tricas orientadas ao tamanho, conhecida como COCOMO.","title":"Modelos Algor\u00edtmicos"},{"location":"Base/estimativas/estimativas/#cocomo-constructive-cost-model","text":"O Modelo de Custo Construtivo \u00e9 apresentado em uma hierarquia de modelos, sendo eles: COCOMO B\u00e1sico: computa o esfor\u00e7o e o custo de desenvolvimento considerando uma estimativa do tamanho do programa (em LOC - Linhas de C\u00f3digo). COCOMO Intermedi\u00e1rio: computa o esfor\u00e7o e o custo de desenvolvimento considerando uma estimativa do tamanho do programa e um conjunto de direcionadores de custo. COCOMO Detalhado: al\u00e9m das caracter\u00edsticas do COCOMO intermedi\u00e1rio, inclui uma avalia\u00e7\u00e3o do impacto dos direcionadores de custo sobre cada etapa do desenvolvimento. O modelo COCOMO pode ser aplicado em tr\u00eas classes de projetos: Modo Org\u00e2nico: projetos simples, relativamente pequenos, com conjuntos de requisitos n\u00e3o t\u00e3o r\u00edgidos, com equipes pequenas e experientes. Modo Semidestacado: projetos intermedi\u00e1rios (em tamanho e complexidade), com alguns requisitos r\u00edgidos e outros n\u00e3o t\u00e3o r\u00edgidos, com n\u00edveis mistos de experi\u00eancia nas equipes. Modo Embutido: projetos com conjunto r\u00edgido de restri\u00e7\u00f5es operacionais, tanto em hardware, quanto em software.","title":"COCOMO - COnstructive COst MOdel"},{"location":"Base/estimativas/estimativas/#cocomo-intermediario","text":"Para o c\u00e1lculo dos esfor\u00e7os, utilizamos o COCOMO Intermedi\u00e1rio, uma vez que o modelo considera mais aspectos al\u00e9m de apenas o tamanho do software, de forma a poder aumentar a precis\u00e3o da estimativa. Os requisitos do projeto na fase inicial n\u00e3o apresentam grande rigidez, mas t\u00eam caracter\u00edsticas a se considerar, como as imagens que devem ser corretamente filtradas e os estabelecimentos devem apresentar dados corretos. Considerando tamb\u00e9m as diferen\u00e7as de experi\u00eancia dentro da equipe, o c\u00e1lculo ser\u00e1 aplicado usando o modo semidestacado. O modelo utiliza a seguinte equa\u00e7\u00e3o para estimativa de esfor\u00e7o: E = a x S^b x fae sendo: E : o esfor\u00e7o aplicado (em pessoas-m\u00eas). S : o n\u00famero (estimado) de linhas de c\u00f3digo para o projeto (em milhares). a : um coeficiente fornecido na figura 1. b : um expoente fornecido na figura 1. fae : o Fator de Ajustamento do Esfor\u00e7o O Fator de Ajustamento do esfor\u00e7o \u00e9 calculado multiplicando os atributos dos Direcionadores de custo. Os valores da multiplica\u00e7\u00e3o s\u00e3o escolhidos a partir de valores que devem ser dados entre \"muito baixo\" e \"extremamente elevado\". Esses atributos podem ser visualizados na Figura 2. Figura 1. Coeficientes do COCOMO Intermedi\u00e1rio. Fonte: [2] Figura 2. Direcionadores de custo do COCOMO Intermedi\u00e1rio. Fonte: [2] Para a estimativa de tempo, segue-se a seguinte equa\u00e7\u00e3o: T = c x E^d sendo: T : o tempo de desenvolvimento (em meses cronol\u00f3gicos). E : o esfor\u00e7o aplicado (em pessoas-m\u00eas). c : um coeficiente fornecido na figura 3. d : um expoente fornecido na figura 3. Figura 3. Coeficientes do COCOMO b\u00e1sico. Fonte: [2]","title":"COCOMO Intermedi\u00e1rio"},{"location":"Base/estimativas/estimativas/#calculos-das-estimativas","text":"O fator de ajustamento de esfor\u00e7o foi calculado conforme os seguintes multiplicadores concordados pela equipe: Atributos do produto Confiabilidade exigida do software: 1.15 (Elevado) Tamanho do Banco de Dados: 1.08 (Elevado) Complexidade do produto: 1.00 (Normal) Atributos do hardware Restri\u00e7\u00f5es ao tempo de execu\u00e7\u00e3o: 1.00 (Normal) Restri\u00e7\u00f5es de mem\u00f3ria: 1.00 (Normal) Volatilidade do ambiente de m\u00e1quina virtual: 1.00 (Normal) Tempo de turnaround (tempo para completar o ciclo) exigido: 1.00 (Normal) Atributos de pessoal Capacidade do analista: 1.00 (Normal) Experi\u00eancia em aplica\u00e7\u00f5es: 0.91 (Elevado) Capacidade do programador: 0.86 (Elevado) Experi\u00eancia em m\u00e1quina virtual: 1.00 (Normal) Experi\u00eancia com a linguagem de programa\u00e7\u00e3o: 1.00 (Normal) Atributos de projeto Uso de pr\u00e1ticas modernas de programa\u00e7\u00e3o: 0.91 (Elevado) Uso de ferramentas de software: 1.00 (Normal) Cronograma exigido de desenvolvimento: 1.10 (Muito Elevado) Para a quantidade de linhas em KLOC (linhas de c\u00f3digo em milhares), foram considerados os m\u00f3dulos abaixo, derivados dos requisitos elicitados. Backend API dos estabelecimentos - 200 linhas Script para mandar os dados do google forms para o banco de dados - 20 linhas Frontend Tela do feed de servi\u00e7os - 300 linhas Tela do perfil do estabelecimento - 200 linhas Consumir a API do backend - 50 linhas Consumir a API do Google maps - 50 linhas Embora as linguagens ainda n\u00e3o tenham sido decididas, as estimativas de linhas foram feitas pensando em linguagens nas linguagens python e javascript. Dados os valores de fae = 0.973 e S = 0.82 , temos como resultado da estimativa de esfor\u00e7o: E = 3 * 0.82^1.12 * 0.973 E = 2.33 pessoas-m\u00eas e a estimativa de tempo: T = 2.5 * 2.33^0.35 T = 3.3 meses","title":"C\u00e1lculos das estimativas"},{"location":"Base/estimativas/estimativas/#referencias","text":"[1] Documento de estimativas de custo do reposit\u00f3rio A Monitoria . Dispon\u00edvel em: https://2019-2-arquitetura-desenho.github.io/wiki/dinamica_seminario_I/estimativas_de_custo/ [2] Meller, Maristela Corr\u00eaa. Modelos Para Estimar Custos De Software: Estudo Comparativo Com Softwares De Pequeno Porte. 2002. Dispon\u00edvel em: https://repositorio.ufsc.br/xmlui/handle/123456789/82351","title":"Refer\u00eancias"},{"location":"Base/estimativas/estimativas/#versionamento","text":"Nome Vers\u00e3o Data Descri\u00e7\u00e3o Wagner Martins 0.1 16/02/2021 Introdu\u00e7\u00e3o e modelos de estimativa Wagner Martins 0.2 17/02/2021 Realiza\u00e7\u00e3o dos c\u00e1lculos das estimativas Jo\u00e3o Luis Baraky 0.3 27/02/2021 Atualiza\u00e7\u00f5es na est\u00e9tica do documento","title":"Versionamento"},{"location":"Base/glossario/glossario/","text":"Gloss\u00e1rio Um gloss\u00e1rio \u00e9 uma lista de termos de um determinado dom\u00ednio de conhecimento com a defini\u00e7\u00e3o destes termos. De um modo geral, um gloss\u00e1rio cont\u00e9m explica\u00e7\u00f5es de conceitos relevantes de um certo campo de estudo ou a\u00e7\u00e3o. Um vocabul\u00e1rio comum \u00e9 um elemento essencial para uma profiss\u00e3o. O L\u00e9xico de Termos de Gerenciamento de Projetos do PMI ( Project Management Institute ) fornece o vocabul\u00e1rio profissional b\u00e1sico que pode ser utilizado uniformemente por organiza\u00e7\u00f5es, gerentes de projeto, de programa e de portf\u00f3lio, e outras partes interessadas. Este gloss\u00e1rio ir\u00e1 incluir terminologias gerais que s\u00e3o referentes a gest\u00e3o de projetos que est\u00e3o presentes no PMBOK 6\u00aa Edi\u00e7\u00e3o [2] , al\u00e9m de terminologias espec\u00edficas relacionadas ao escopo do nosso projeto e metodologias adotadas, como o Scrum [1] . Vale ressaltar que o gloss\u00e1rio do PMBOK 6\u00aa Edi\u00e7\u00e3o [2] \u00e9 mais extenso, e os termos aqui presentes foram selecionados levando em considera\u00e7\u00e3o o contexto do curso. Termo Termo em Ingl\u00eas Descri\u00e7\u00e3o Abordagem de desenvolvimento Development Approach O m\u00e9todo usado para criar e desenvolver o produto , servi\u00e7o ou resultado durante o ciclo de vida do projeto , tal como o m\u00e9todo de previs\u00e3o, iterativo, incremental, \u00e1gil ou um m\u00e9todo h\u00edbrido. A\u00e7\u00e3o corretiva Corrective Action Uma atividade intencional que realinha o desempenho dos trabalhos do projeto com o plano de gerenciamento do projeto . A\u00e7\u00e3o preventiva Preventive Action Uma atividade intencional para garantir que o desempenho futuro do trabalho do projeto esteja alinhado com o plano de gerenciamento do projeto Aceita\u00e7\u00e3o de risco Risk Acceptance Uma estrat\u00e9gia de resposta ao risco em que a equipe do projeto decide reconhecer a exist\u00eancia do risco e n\u00e3o agir, a menos que o risco ocorra Amea\u00e7a Threat Um risco que teria um efeito negativo em um ou mais objetivos do projeto An\u00e1lise de cen\u00e1rio E-se What-If Scenario Analysis O processo de avaliar cen\u00e1rios a fim de predizer seus efeitos nos objetivos do projeto An\u00e1lise de produto Product Analysis Para os projetos que possuem um produto como entrega, \u00e9 uma ferramenta de defini\u00e7\u00e3o do escopo que geralmente implica em fazer perguntas sobre esse produto e criar respostas para descrever o uso, as caracter\u00edsticas e outros aspectos relevantes do que ser\u00e1 fabricado. Antecipa\u00e7\u00e3o Lead A quantidade de tempo que uma atividade sucessora pode ser adiantada em rela\u00e7\u00e3o a uma atividade predecessora Atividade Activity Uma parte distinta e programada do trabalho executado no decorrer do projeto. Atualiza\u00e7\u00e3o Update Uma modifica\u00e7\u00e3o em qualquer entrega, componente de plano de gerenciamento do projeto ou documento do projeto que n\u00e3o est\u00e1 sob controle de mudan\u00e7a formal. Backlog do produto Product Backlog Um artefato Scrum que consiste em uma lista ordenada do trabalho a ser feito para criar, manter e sustentar um produto . Gerenciado pelo Product Owner . Benchmarking Benchmarking Benchmarking envolve a compara\u00e7\u00e3o de produtos , processos e pr\u00e1ticas reais ou planejadas com as de organiza\u00e7\u00f5es similares para identificar as melhores pr\u00e1ticas, gerar ideias para melhorias e fornecer uma base para medir o desempenho. Calend\u00e1rio do projeto Project Calendar Um calend\u00e1rio que identifica os dias \u00fateis e os turnos dispon\u00edveis para a execu\u00e7\u00e3o das atividades agendadas. Ciclo de vida do projeto Project Life Cycle O ciclo de vida do projeto \u00e9 a s\u00e9rie de fases pelas quais um projeto passa, do in\u00edcio \u00e0 conclus\u00e3o. Ele fornece a estrutura b\u00e1sica para o gerenciamento do projeto. Ciclo de vida incremental Incremental Life Cycle Um ciclo de vida do projeto adaptativo no qual a entrega \u00e9 produzida atrav\u00e9s de uma s\u00e9rie de itera\u00e7\u00f5es que sucessivamente adicionam funcionalidade dentro de um prazo predeterminado. A entrega inclui a capacidade necess\u00e1ria e suficiente para ser considerada completa somente ap\u00f3s a itera\u00e7\u00e3o final. Ciclo de vida iterativo Iterative Life Cycle Ciclo de vida do projeto em que o escopo do projeto \u00e9 geralmente determinado no in\u00edcio do ciclo de vida do mesmo, mas as estimativas de tempo e custos s\u00e3o rotineiramente modificadas \u00e0 propor\u00e7\u00e3o que a compreens\u00e3o do produto pela equipe do projeto aumenta. Itera\u00e7\u00f5es desenvolvem o produto atrav\u00e9s de uma s\u00e9rie de ciclos repetidos, enquanto os incrementos sucessivamente acrescentam \u00e0 funcionalidade do produto . Ciclo de vida preditivo Predictive Life Cycle Uma forma de ciclo de vida do projeto na qual o escopo , tempo e custo do projeto s\u00e3o determinados nas fases iniciais do ciclo de vida. Coletar os requisitos Collect Requirements O processo de determinar, documentar e gerenciar as necessidades e requisitos das partes interessadas a fim de atender aos objetivos do projeto. Conhecimento Knowledge Uma combina\u00e7\u00e3o de experi\u00eancias, valores e convic\u00e7\u00f5es, informa\u00e7\u00f5es contextuais, intui\u00e7\u00e3o e insight que as pessoas usam para entender novas experi\u00eancias e informa\u00e7\u00f5es. Controlar a qualidade Control Quality O processo de monitoramento e registro dos resultados da execu\u00e7\u00e3o de atividades de gerenciamento da qualidade para avalia\u00e7\u00e3o de desempenho e garantir que as sa\u00eddas do projeto sejam completas, corretas e atendam as expectativas do cliente. Controlar o cronograma Control Schedule O processo de monitoramento do status do projeto para atualizar o cronograma do projeto e gerenciar mudan\u00e7as na linha de base do cronograma Controlar o escopo Control Scope O processo de monitoramento do andamento do escopo do projeto ou do produto e gerenciamento das mudan\u00e7as feitas na linha de base do escopo . Controlar os recursos Control Resources O processo de garantir que os recursos atribu\u00eddos e alocados ao projeto est\u00e3o dispon\u00edveis conforme planejado, bem como monitorar a utiliza\u00e7\u00e3o planejada versus utiliza\u00e7\u00e3o real de recursos e executar a\u00e7\u00e3o corretiva conforme necess\u00e1rio Controle Control Compara\u00e7\u00e3o entre o desempenho real e o planejado, an\u00e1lise das varia\u00e7\u00f5es, avalia\u00e7\u00e3o das tend\u00eancias para efetuar melhorias no processo, avalia\u00e7\u00e3o das alternativas poss\u00edveis e recomenda\u00e7\u00e3o das a\u00e7\u00f5es corretivas adequadas, conforme necess\u00e1rio. Crit\u00e9rios Criteria Normas, regras ou testes pelos quais uma opini\u00e3o ou decis\u00e3o pode basear-se ou pelos quais um produto , servi\u00e7o, resultado ou processo podem ser avaliados. Crit\u00e9rios de aceita\u00e7\u00e3o Acceptance Criteria Um conjunto de condi\u00e7\u00f5es que precisam ser atendidas antes das entregas serem aceitas. Cronograma de marcos Milestone Schedule Um tipo de cronograma que apresenta marcos com datas planejadas. Cronograma do projeto Project Schedule Um resultado de um modelo de cronograma que demonstra a conex\u00e3o de atividades com suas datas, dura\u00e7\u00f5es, marcos e recursos planjados. Data de t\u00e9rmino Finish Date Um momento associado ao t\u00e9rmino de uma atividade do cronograma. Geralmente usada com uma das seguintes qualifica\u00e7\u00f5es: real, planejada, estimada, agendada, mais cedo, mais tarde, alvo, linha de base ou atual. Decomposi\u00e7\u00e3o Decomposition T\u00e9cnica usada para dividir e subdividir o escopo do projeto e suas entregas em partes menores e mais f\u00e1ceis de gerenciar. Defeito Defect Uma imperfei\u00e7\u00e3o ou defici\u00eancia em um componente do projeto na qual esse componente n\u00e3o atende aos seus requisitos ou especifica\u00e7\u00f5es e precisa ser reparado ou substitu\u00eddo. Defini\u00e7\u00e3o de pronto Definition of Done \u00c9 uma compreens\u00e3o compartilhada das expectativas que o incremento deve cumprir para poder ser liberado na produ\u00e7\u00e3o. Gerenciado pela Equipe de Desenvolvimento . Definir as atividades Define Activities O processo de identifica\u00e7\u00e3o e documenta\u00e7\u00e3o das a\u00e7\u00f5es espec\u00edficas a serem realizadas para produzir as entregas do projeto. Definir o escopo Define Scope O processo de desenvolvimento de uma descri\u00e7\u00e3o detalhada do projeto e do produto . Descri\u00e7\u00e3o do escopo do produto Product Scope Description A descri\u00e7\u00e3o narrativa documentada do escopo do produto . Desenvolver a equipe Develop Team O processo de melhoria de compet\u00eancias, da intera\u00e7\u00e3o da equipe e do ambiente geral da equipe para aprimorar o desempenho do projeto. Desenvolver o cronograma Develop Schedule O processo de an\u00e1lise de sequ\u00eancias de atividades, dura\u00e7\u00f5es, necessidades de recursos e restri\u00e7\u00f5es de cronograma para criar o modelo de cronograma do projeto para execu\u00e7\u00e3o, monitoramento e controle do projeto. Desenvolver o termo de abertura do projeto Develop Project Charter O processo de desenvolver um documento que formalmente autoriza a exist\u00eancia de um projeto e fornece ao gerente do projeto a autoridade necess\u00e1ria para aplicar recursos organizacionais \u00e0s atividades do projeto. Diagrama de causa e efeito Cause and Effect Diagram T\u00e9cnica de decomposi\u00e7\u00e3o que ajuda a investigar um efeito indesej\u00e1vel at\u00e9 a sua causa-raiz. Dicion\u00e1rio da EAP WBS Dictionary Um documento que fornece informa\u00e7\u00f5es detalhadas sobre entregas, atividades e agendamento de cada componente da estrutura anal\u00edtica do projeto. D\u00edvida t\u00e9cnica Technical Debt Sobrecarga normalmente imprevista de manuten\u00e7\u00e3o do produto , muitas vezes causada por decis\u00f5es de projeto aqu\u00e9m do ideal, contribuindo para o custo total de propriedade. Pode existir n\u00e3o intencionalmente no incremento ou introduzido propositalmente para obter valor anteriormente. Documenta\u00e7\u00e3o dos requisitos Requirements Documentation Uma descri\u00e7\u00e3o de como os requisitos individuais atendem \u00e0s necessidades de neg\u00f3cios do projeto. Dura\u00e7\u00e3o Duration O n\u00famero total de per\u00edodos de trabalho necess\u00e1rio para finalizar uma atividade ou um componente da estrutura anal\u00edtica do projeto, expresso em horas, dias ou semanas. Entrega Deliverable Qualquer produto , resultado ou capacidade de realizar um servi\u00e7o, que seja \u00fanico e verific\u00e1vel, produzido para concluir um processo, fase ou projeto. Entregas aceitas Accepted Deliverables Produtos,resultados ou recursos produzidos por um projeto e validados pelo cliente ou patrocinadores do projeto como tendo satisfeito seus crit\u00e9rios de aceita\u00e7\u00e3o. Entregas verificadas Verified Deliverables Entregas do projeto conclu\u00eddas que foram verificadas e confirmadas quanto \u00e0 sua precis\u00e3o pelo processo de Controlar a qualidade . Entrevistas Interviews Uma abordagem formal ou informal para obter informa\u00e7\u00f5es das partes interessadas falando com as mesmas diretamente. Equipe de desenvolvimento Development Team \u00c9 um dos tr\u00eas pap\u00e9is no Scrum . A equipe de desenvolvimento \u00e9 a respons\u00e1vel pelo desenvolvimento da Sprint , trabalhando nas Tarefas de cada Hist\u00f3ria para a finaliza\u00e7\u00e3o dos trabalhos. Equipe de gerenciamento do projeto Project Management Team Os membros da equipe do projeto que est\u00e3o diretamente envolvidos nas atividades de gerenciamento do projeto. Equipe do projeto Project Team Um grupo de indiv\u00edduos que apoia o gerente do projeto na execu\u00e7\u00e3o do trabalho do projeto para alcan\u00e7ar seus objetivos. Escopo Scope A soma dos produtos , servi\u00e7os e resultados a serem fornecidos como um projeto. Escopo do produto Product Scope As caracter\u00edsticas e fun\u00e7\u00f5es que descrevem um produto , servi\u00e7o ou resultado . Escopo do projeto Project Scope O trabalho que deve ser realizado para entregar um produto , servi\u00e7o ou resultado com as caracter\u00edsticas e fun\u00e7\u00f5es especificadas. Especifica\u00e7\u00e3o Specification Uma declara\u00e7\u00e3o espec\u00edfica das necessidades a serem atendidas e as caracter\u00edsticas essenciais que s\u00e3o exigidas. Estimar as dura\u00e7\u00f5es das atividades Estimate Activity Durations O processo de estimativa do n\u00famero de per\u00edodos de trabalho que ser\u00e3o necess\u00e1rios para terminar atividades espec\u00edficas com os recursos estimados. Estimar os custos Estimate Costs O processo de desenvolver uma aproxima\u00e7\u00e3o dos recursos monet\u00e1rios necess\u00e1rios para terminar o trabalho do projeto. Estimar os recursos das atividades Estimate Activity Resources O processo de estimar recursos da equipe e o tipo e as quantidades de materiais, equipamentos e suprimentos necess\u00e1rios para realizar o trabalho do projeto. Fase do projeto Project Phase Um conjunto de atividades do projeto relacionadas de maneira l\u00f3gica que culmina na conclus\u00e3o de uma ou mais entregas Ferramenta Tool Alguma coisa tang\u00edvel, como um modelo ou um programa de software, usada na execu\u00e7\u00e3o de uma atividade para produzir um produto ou resultado . Fluxograma Flowchart A representa\u00e7\u00e3o em formato de diagrama das entradas, a\u00e7\u00f5es do processo e sa\u00eddas de um ou mais processos em um sistema. Gerenciamento de projetos Project Management A aplica\u00e7\u00e3o de conhecimentos , habilidades, ferramentas e t\u00e9cnicas \u00e0s atividades do projeto a fim de atender aos seus requisitos. Gerenciamento do cronograma do projeto Project Schedule Management O gerenciamento do cronograma do projeto inclui os processos necess\u00e1rios para gerenciar o t\u00e9rmino pontual do projeto. Gerenciamento do escopo do projeto Project Scope Management O gerenciamento do escopo do projeto inclui os processos necess\u00e1rios para assegurar que o projeto inclua todo o trabalho, e apenas o necess\u00e1rio, para que termine com sucesso. Gerenciar a equipe Manage Team O processo de acompanhar o desempenho de membros da equipe, fornecer feedback, resolver problemas e gerenciar mudan\u00e7as para otimizar o desempenho do projeto. Gerente do projeto (GP) Project Manager (PM) A pessoa alocada pela organiza\u00e7\u00e3o executora para liderar a equipe e que \u00e9 respons\u00e1vel por alcan\u00e7ar os objetivos do projeto. Gr\u00e1fico de Burndown Burn-down Chart O objetivo de um gr\u00e1fico burndown \u00e9 apresentar a por\u00e7\u00e3o de trabalho finalizada em compara\u00e7\u00e3o com o trabalho planejado. Esse gr\u00e1fico apresenta duas linhas: uma representando o trabalho planejado caso fosse executado de maneira uniforme ao longo da Sprint e outra apresentando o trabalho realmente j\u00e1 realizado pela Equipe de Desenvolvimento . Gr\u00e1fico de Burnup Burn-up Chart O objetivo de um gr\u00e1fico burnup \u00e9 apresentar a evolu\u00e7\u00e3o do trabalho em dire\u00e7\u00e3o ao produto final. Nesse gr\u00e1fico s\u00e3o tra\u00e7adas duas linhas, uma apresentando a evolu\u00e7\u00e3o do Product Backlog (esse pode aumentar a medida que o projeto vai sendo desenvolvido) e a outra apresentando a evolu\u00e7\u00e3o do que j\u00e1 foi realizado pela equipe durante as Sprints j\u00e1 realizadas. Ele d\u00e1 a visibilidade do andamento do projeto. Identificar as partes interessadas Identify Stakeholders O processo de identificar regularmente as partes interessadas do projeto e analisar e documentar informa\u00e7\u00f5es relevantes sobre seus interesses, envolvimento, interdepend\u00eancias, influ\u00eancia e impacto potencial no sucesso do projeto. Identificar os riscos Identify Risks O processo de identificar riscos individuais, bem como fontes de risco gerais e de documentar suas caracter\u00edsticas. Incremento Increment Artefato Scrum que define o trabalho completo e valioso produzido pela Equipe de Desenvolvimento durante uma Sprint . A soma de todos os incrementos forma um produto . Inspe\u00e7\u00e3o Inspection Exame de um produto de trabalho para determinar se o mesmo est\u00e1 de acordo com as normas documentadas. Marco Milestone Um ponto ou evento significativo de um projeto, programa ou portf\u00f3lio. Metodologia Methodology Um sistema de pr\u00e1ticas, t\u00e9cnicas, procedimentos e regras usado pelas pessoas que trabalham em uma disciplina. Objetivo do Produto Product Goal O Objetivo do Produto descreve um estado futuro do produto que pode servir como um objetivo para o Time Scrum planejar. O objetivo do produto est\u00e1 no Backlog do produto . O restante do Backlog do Produto surge para definir \u201co que\u201d cumprir\u00e1 a Meta do Produto. Papel Role Um papel definido a ser realizado por um membro da equipe do projeto , como testes, arquivamento, inspe\u00e7\u00e3o ou codifica\u00e7\u00e3o. Pap\u00e9is Scrum Scrum Roles Dono do Produto ( Product Owner ), Equipe de Desenvolvimento e Scrum Master. Parte interessada Stakeholder Um indiv\u00edduo, grupo ou organiza\u00e7\u00e3o que possa afetar, ser afetado, ou sentir-se afetado por uma decis\u00e3o, atividade, ou resultado de um projeto, programa ou portf\u00f3lio. Planejar o gerenciamento do cronograma Plan Schedule Management O processo de estabelecer as pol\u00edticas, os procedimentos e a documenta\u00e7\u00e3o para o planejamento, desenvolvimento, gerenciamento, execu\u00e7\u00e3o e controle do cronograma do projeto. Planejar o gerenciamento do escopo Plan Scope Management O processo de criar um plano de gerenciamento do escopo que documente como o escopo do projeto e do produto ser\u00e1 definido, validado e controlado. Planejar o gerenciamento dos custos Plan Cost Management O processo de definir como os custos do projeto ser\u00e3o estimados, or\u00e7ados, gerenciados, monitorados e controlados Planejar o gerenciamento dos riscos Plan Risk Management O processo de defini\u00e7\u00e3o de como conduzir as atividades de gerenciamento dos riscos de um projeto. Plano alternativo Fallback Plan Planos alternativos incluem um conjunto de a\u00e7\u00f5es e atividades alternativas caso o plano principal precise ser abandonado em virtude de problemas, riscos ou outros motivos. Plano de gerenciamento da equipe Team Management Plan Um componente do plano de gerenciamento de recursos que descreve quando e como os membros da equipe ser\u00e3o contratados ou mobilizados e por quanto tempo eles ser\u00e3o necess\u00e1rios. Plano de gerenciamento do cronograma Schedule Management Plan Um componente do plano de gerenciamento do projeto ou programa que estabelece os crit\u00e9rios e as atividades para o desenvolvimento, monitoramento e controle do cronograma. Plano de gerenciamento do escopo Scope Management Plan Um componente do plano de gerenciamento do projeto ou programa que descreve como o escopo ser\u00e1 definido, desenvolvido, monitorado, controlado e validado. Plano de gerenciamento do projeto Project Management Plan O documento que descreve como o projeto ser\u00e1 executado, monitorado, controlado e encerrado. Plano de gerenciamento dos requisitos Requirements Management Plan Um componente do plano de gerenciamento do projeto ou programa que descreve como os requisitos ser\u00e3o analisados, documentados e gerenciados. Processo Process Uma s\u00e9rie de atividades sistem\u00e1ticas direcionadas para alcan\u00e7ar um resultado final de tal forma que se aja em rela\u00e7\u00e3o a uma ou mais entradas a fim de criar uma ou mais sa\u00eddas. Produto Product Um artefato produzido, quantific\u00e1vel e que pode ser um item final ou um item componente. Outras palavras usadas para produtos s\u00e3o \u201cmateriais\u201d e \u201cbens\u201d. Product Owner Product Owner \u00c9 um dos tr\u00eas pap\u00e9is no Scrum . O Product Owner \u00e9 o respons\u00e1vel pelo Product Backlog . Ele que define e prioriza as funcionalidades desejadas para o produto , ou as atividades necess\u00e1rias ao projeto, descrevendo-as em forma de Hist\u00f3rias no Product Backlog . Programa Program Um grupo relacionado de projetos, subprogramas e atividades de programa gerenciados de forma coordenada para a obten\u00e7\u00e3o de benef\u00edcios que n\u00e3o estariam dispon\u00edveis se eles fossem gerenciados individualmente. Projeto Project Um esfor\u00e7o tempor\u00e1rio empreendido para criar um produto , servi\u00e7o ou resultado \u00fanico. Prot\u00f3tipos Prototypes Um m\u00e9todo para se obter respostas iniciais sobre os requisitos atrav\u00e9s de um modelo funcional do produto esperado antes de efetivamente constru\u00ed-lo. Qualidade Quality O grau em que um conjunto de caracter\u00edsticas inerentes atende aos requisitos Quest\u00e3o Issue Uma condi\u00e7\u00e3o ou situa\u00e7\u00e3o atual que pode afetar os objetivos do projeto. Question\u00e1rios Questionnaires Conjuntos de perguntas por escrito elaborados para rapidamente obter informa\u00e7\u00f5es de um grande n\u00famero de respondentes. Refinamento do Backlog do produto Product Backlog refinement Atividade em uma Sprint por meio da qual o Product Owner e as equipes de desenvolvimento adicionam granularidade ao Backlog do produto . Requisito Requirement Uma condi\u00e7\u00e3o ou capacidade que deve necessariamente estar presente em um produto , servi\u00e7o ou resultado para atender a uma necessidade de neg\u00f3cios. Resultado Result Uma sa\u00edda dos processos e atividades de gerenciamento do projeto. Os resultados incluem efeitos (por exemplo: sistemas integrados, processo revisado, organiza\u00e7\u00e3o reestruturada, testes, pessoal treinado, etc.) e documentos (por exemplo: pol\u00edticas, planos, estudos, procedimentos, especifica\u00e7\u00f5es, relat\u00f3rios, etc.). Retrabalho Rework A\u00e7\u00e3o tomada para fazer com que um componente imperfeito ou fora das especifica\u00e7\u00f5es fique em conformidade com os requisitos ou especifica\u00e7\u00f5es. Retrospectiva da Sprint Sprint Retrospective Evento Scrum que \u00e9 definido para um time-box de 3 horas, ou menos, para encerrar uma Sprint . Ele serve para o time Scrum inspecionar o Sprint anterior e planejar melhorias a serem implementadas durante o pr\u00f3ximo Sprint . Reuni\u00e3o Di\u00e1ria Daily Scrum Reuni\u00e3o realizada diariamente, preferencialmente no in\u00edcio da manh\u00e3 ou ao final do dia.Conta com a participa\u00e7\u00e3o da Equipe de Desenvolvimento e do Scrum Master. Tem dura\u00e7\u00e3o m\u00e1xima de 15 minutos e o objetivo dessa reuni\u00e3o \u00e9 comunicar o andamento dos trabalhos deixando-o transparente para todos da Equipe de Desenvolvimento , mantendo o foco na transpar\u00eancia e n\u00e3o na discuss\u00e3o t\u00e9cnica de problemas e solu\u00e7\u00f5es. \u00c9 uma reuni\u00e3o onde os membros da equipe assumem compromissos com os demais. Revis\u00f5es de documenta\u00e7\u00e3o Documentation Reviews Processo de coletar e revisar um conjunto de informa\u00e7\u00f5es para determinar sua exatid\u00e3o e completude. Revis\u00e3o de Sprint Sprint Review Evento Scrum que \u00e9 definido para um time-box de 4 horas, ou menos, para concluir o trabalho de desenvolvimento de um Sprint . Serve para o Time Scrum e as partes interessadas para inspecionar o incremento do produto resultante da Sprint , avaliar o impacto do trabalho realizado no progresso geral e atualizar o backlog do produto a fim de maximizar o valor do pr\u00f3ximo per\u00edodo. Risco Risk Um evento ou condi\u00e7\u00e3o incerta que, se ocorrer, provocar\u00e1 um efeito positivo ou negativo em um ou mais objetivos do projeto. T\u00e9cnica Technique Um procedimento sistem\u00e1tico definido usado por um recurso humano para realizar uma atividade a fim de produzir um produto ou resultado ou entregar um servi\u00e7o e que pode empregar uma ou mais ferramentas . Scrum Scrum Um framework para apoiar equipes no desenvolvimento de produtos complexos. Scrum consiste em equipes Scrum e suas fun\u00e7\u00f5es, eventos, artefatos e regras associados, conforme definido no Scrum Guide . Scrum Master Scrum Master \u00c9 um dos tr\u00eas pap\u00e9is no Scrum . O Scrum Master atua como facilitador da Equipe de Desenvolvimento e auxiliar do Product Owner , ajudando na manuten\u00e7\u00e3o do Product Backlog , removendo impedimentos e protegendo a Equipe de Desenvolvimento de interfer\u00eancias externas, para garantir a produtividade e a efici\u00eancia do trabalho. \u00c9 o Scrum Master que procura assegurar o uso das pr\u00e1ticas e valores do Scrum . Sprint Sprint Representa um ciclo de trabalho no Scrum . Esse ciclo pode ser de 2 semanas, 3 ou 4 semanas, que \u00e9 o Timebox das Sprints. As Sprints devem ter sempre a mesma dura\u00e7\u00e3o. Sprint Backlog Sprint Backlog Artefato que fornece uma vis\u00e3o geral do trabalho de desenvolvimento para realizar o objetivo de um Sprint , normalmente uma previs\u00e3o de funcionalidade e o trabalho necess\u00e1rio para entregar essa funcionalidade. Gerenciado pela Equipe de Desenvolvimento . Sprint Planning Sprint Planning Evento Scrum com tempo limitado para 8 horas, ou menos, para iniciar um Sprint . Ele serve para o Time Scrum inspecionar o trabalho do Backlog do Produto que \u00e9 mais valioso para ser feito em seguida e projetar esse trabalho no Backlog do Sprint . Tarefas Tasks As Hist\u00f3rias em cada Sprint devem ser divididas em tarefas que representem no m\u00e1ximo 1 dia \u00fatil de um membro da Equipe de Desenvolvimento . Portanto, as hist\u00f3rias devem ser divididas em tarefas menores de um dia. TimeBox TimeBox A escala de tempo definida para o projeto Sprint . Valida\u00e7\u00e3o Validation A garantia de que um produto , servi\u00e7o ou resultado atende \u00e0s necessidades do cliente e das outras partes interessadas. Validar o escopo Validate Scope O processo de formaliza\u00e7\u00e3o da aceita\u00e7\u00e3o das entregas terminadas do projeto. Velocity Velocity M\u00e9trica opcional, mas frequentemente usada, sobre a quantidade de Product Backlog implementadas em uma Sprint . Verifica\u00e7\u00e3o Verification A avalia\u00e7\u00e3o da conformidade de um produto , servi\u00e7o ou resultado com alguma regra, requisito, especifica\u00e7\u00e3o ou condi\u00e7\u00e3o imposta. Refr\u00eancias [1] \u201cScrum Glossary.\u201d scrum.org, 2021. https://www.scrum.org/resources/scrum-glossary. [2] PMI. A Guide to the Project Management Body of Knowledge. 6\u00aa Edi\u00e7\u00e3o, 2017. Versionamento Vers\u00e3o Data Coment\u00e1rios Autor(es) 0.1 16/02/2021 Adicionado o conte\u00fado base para a p\u00e1gina N\u00edcalo Ribeiro 0.2 17/02/2021 Finaliza\u00e7\u00e3o do documento, al\u00e9m de sua formata\u00e7\u00e3o N\u00edcalo Ribeiro 0.3 17/02/2021 Adi\u00e7\u00e3o de Hiperlinks N\u00edcalo Ribeiro","title":"Gloss\u00e1rio"},{"location":"Base/glossario/glossario/#glossario","text":"Um gloss\u00e1rio \u00e9 uma lista de termos de um determinado dom\u00ednio de conhecimento com a defini\u00e7\u00e3o destes termos. De um modo geral, um gloss\u00e1rio cont\u00e9m explica\u00e7\u00f5es de conceitos relevantes de um certo campo de estudo ou a\u00e7\u00e3o. Um vocabul\u00e1rio comum \u00e9 um elemento essencial para uma profiss\u00e3o. O L\u00e9xico de Termos de Gerenciamento de Projetos do PMI ( Project Management Institute ) fornece o vocabul\u00e1rio profissional b\u00e1sico que pode ser utilizado uniformemente por organiza\u00e7\u00f5es, gerentes de projeto, de programa e de portf\u00f3lio, e outras partes interessadas. Este gloss\u00e1rio ir\u00e1 incluir terminologias gerais que s\u00e3o referentes a gest\u00e3o de projetos que est\u00e3o presentes no PMBOK 6\u00aa Edi\u00e7\u00e3o [2] , al\u00e9m de terminologias espec\u00edficas relacionadas ao escopo do nosso projeto e metodologias adotadas, como o Scrum [1] . Vale ressaltar que o gloss\u00e1rio do PMBOK 6\u00aa Edi\u00e7\u00e3o [2] \u00e9 mais extenso, e os termos aqui presentes foram selecionados levando em considera\u00e7\u00e3o o contexto do curso. Termo Termo em Ingl\u00eas Descri\u00e7\u00e3o Abordagem de desenvolvimento Development Approach O m\u00e9todo usado para criar e desenvolver o produto , servi\u00e7o ou resultado durante o ciclo de vida do projeto , tal como o m\u00e9todo de previs\u00e3o, iterativo, incremental, \u00e1gil ou um m\u00e9todo h\u00edbrido. A\u00e7\u00e3o corretiva Corrective Action Uma atividade intencional que realinha o desempenho dos trabalhos do projeto com o plano de gerenciamento do projeto . A\u00e7\u00e3o preventiva Preventive Action Uma atividade intencional para garantir que o desempenho futuro do trabalho do projeto esteja alinhado com o plano de gerenciamento do projeto Aceita\u00e7\u00e3o de risco Risk Acceptance Uma estrat\u00e9gia de resposta ao risco em que a equipe do projeto decide reconhecer a exist\u00eancia do risco e n\u00e3o agir, a menos que o risco ocorra Amea\u00e7a Threat Um risco que teria um efeito negativo em um ou mais objetivos do projeto An\u00e1lise de cen\u00e1rio E-se What-If Scenario Analysis O processo de avaliar cen\u00e1rios a fim de predizer seus efeitos nos objetivos do projeto An\u00e1lise de produto Product Analysis Para os projetos que possuem um produto como entrega, \u00e9 uma ferramenta de defini\u00e7\u00e3o do escopo que geralmente implica em fazer perguntas sobre esse produto e criar respostas para descrever o uso, as caracter\u00edsticas e outros aspectos relevantes do que ser\u00e1 fabricado. Antecipa\u00e7\u00e3o Lead A quantidade de tempo que uma atividade sucessora pode ser adiantada em rela\u00e7\u00e3o a uma atividade predecessora Atividade Activity Uma parte distinta e programada do trabalho executado no decorrer do projeto. Atualiza\u00e7\u00e3o Update Uma modifica\u00e7\u00e3o em qualquer entrega, componente de plano de gerenciamento do projeto ou documento do projeto que n\u00e3o est\u00e1 sob controle de mudan\u00e7a formal. Backlog do produto Product Backlog Um artefato Scrum que consiste em uma lista ordenada do trabalho a ser feito para criar, manter e sustentar um produto . Gerenciado pelo Product Owner . Benchmarking Benchmarking Benchmarking envolve a compara\u00e7\u00e3o de produtos , processos e pr\u00e1ticas reais ou planejadas com as de organiza\u00e7\u00f5es similares para identificar as melhores pr\u00e1ticas, gerar ideias para melhorias e fornecer uma base para medir o desempenho. Calend\u00e1rio do projeto Project Calendar Um calend\u00e1rio que identifica os dias \u00fateis e os turnos dispon\u00edveis para a execu\u00e7\u00e3o das atividades agendadas. Ciclo de vida do projeto Project Life Cycle O ciclo de vida do projeto \u00e9 a s\u00e9rie de fases pelas quais um projeto passa, do in\u00edcio \u00e0 conclus\u00e3o. Ele fornece a estrutura b\u00e1sica para o gerenciamento do projeto. Ciclo de vida incremental Incremental Life Cycle Um ciclo de vida do projeto adaptativo no qual a entrega \u00e9 produzida atrav\u00e9s de uma s\u00e9rie de itera\u00e7\u00f5es que sucessivamente adicionam funcionalidade dentro de um prazo predeterminado. A entrega inclui a capacidade necess\u00e1ria e suficiente para ser considerada completa somente ap\u00f3s a itera\u00e7\u00e3o final. Ciclo de vida iterativo Iterative Life Cycle Ciclo de vida do projeto em que o escopo do projeto \u00e9 geralmente determinado no in\u00edcio do ciclo de vida do mesmo, mas as estimativas de tempo e custos s\u00e3o rotineiramente modificadas \u00e0 propor\u00e7\u00e3o que a compreens\u00e3o do produto pela equipe do projeto aumenta. Itera\u00e7\u00f5es desenvolvem o produto atrav\u00e9s de uma s\u00e9rie de ciclos repetidos, enquanto os incrementos sucessivamente acrescentam \u00e0 funcionalidade do produto . Ciclo de vida preditivo Predictive Life Cycle Uma forma de ciclo de vida do projeto na qual o escopo , tempo e custo do projeto s\u00e3o determinados nas fases iniciais do ciclo de vida. Coletar os requisitos Collect Requirements O processo de determinar, documentar e gerenciar as necessidades e requisitos das partes interessadas a fim de atender aos objetivos do projeto. Conhecimento Knowledge Uma combina\u00e7\u00e3o de experi\u00eancias, valores e convic\u00e7\u00f5es, informa\u00e7\u00f5es contextuais, intui\u00e7\u00e3o e insight que as pessoas usam para entender novas experi\u00eancias e informa\u00e7\u00f5es. Controlar a qualidade Control Quality O processo de monitoramento e registro dos resultados da execu\u00e7\u00e3o de atividades de gerenciamento da qualidade para avalia\u00e7\u00e3o de desempenho e garantir que as sa\u00eddas do projeto sejam completas, corretas e atendam as expectativas do cliente. Controlar o cronograma Control Schedule O processo de monitoramento do status do projeto para atualizar o cronograma do projeto e gerenciar mudan\u00e7as na linha de base do cronograma Controlar o escopo Control Scope O processo de monitoramento do andamento do escopo do projeto ou do produto e gerenciamento das mudan\u00e7as feitas na linha de base do escopo . Controlar os recursos Control Resources O processo de garantir que os recursos atribu\u00eddos e alocados ao projeto est\u00e3o dispon\u00edveis conforme planejado, bem como monitorar a utiliza\u00e7\u00e3o planejada versus utiliza\u00e7\u00e3o real de recursos e executar a\u00e7\u00e3o corretiva conforme necess\u00e1rio Controle Control Compara\u00e7\u00e3o entre o desempenho real e o planejado, an\u00e1lise das varia\u00e7\u00f5es, avalia\u00e7\u00e3o das tend\u00eancias para efetuar melhorias no processo, avalia\u00e7\u00e3o das alternativas poss\u00edveis e recomenda\u00e7\u00e3o das a\u00e7\u00f5es corretivas adequadas, conforme necess\u00e1rio. Crit\u00e9rios Criteria Normas, regras ou testes pelos quais uma opini\u00e3o ou decis\u00e3o pode basear-se ou pelos quais um produto , servi\u00e7o, resultado ou processo podem ser avaliados. Crit\u00e9rios de aceita\u00e7\u00e3o Acceptance Criteria Um conjunto de condi\u00e7\u00f5es que precisam ser atendidas antes das entregas serem aceitas. Cronograma de marcos Milestone Schedule Um tipo de cronograma que apresenta marcos com datas planejadas. Cronograma do projeto Project Schedule Um resultado de um modelo de cronograma que demonstra a conex\u00e3o de atividades com suas datas, dura\u00e7\u00f5es, marcos e recursos planjados. Data de t\u00e9rmino Finish Date Um momento associado ao t\u00e9rmino de uma atividade do cronograma. Geralmente usada com uma das seguintes qualifica\u00e7\u00f5es: real, planejada, estimada, agendada, mais cedo, mais tarde, alvo, linha de base ou atual. Decomposi\u00e7\u00e3o Decomposition T\u00e9cnica usada para dividir e subdividir o escopo do projeto e suas entregas em partes menores e mais f\u00e1ceis de gerenciar. Defeito Defect Uma imperfei\u00e7\u00e3o ou defici\u00eancia em um componente do projeto na qual esse componente n\u00e3o atende aos seus requisitos ou especifica\u00e7\u00f5es e precisa ser reparado ou substitu\u00eddo. Defini\u00e7\u00e3o de pronto Definition of Done \u00c9 uma compreens\u00e3o compartilhada das expectativas que o incremento deve cumprir para poder ser liberado na produ\u00e7\u00e3o. Gerenciado pela Equipe de Desenvolvimento . Definir as atividades Define Activities O processo de identifica\u00e7\u00e3o e documenta\u00e7\u00e3o das a\u00e7\u00f5es espec\u00edficas a serem realizadas para produzir as entregas do projeto. Definir o escopo Define Scope O processo de desenvolvimento de uma descri\u00e7\u00e3o detalhada do projeto e do produto . Descri\u00e7\u00e3o do escopo do produto Product Scope Description A descri\u00e7\u00e3o narrativa documentada do escopo do produto . Desenvolver a equipe Develop Team O processo de melhoria de compet\u00eancias, da intera\u00e7\u00e3o da equipe e do ambiente geral da equipe para aprimorar o desempenho do projeto. Desenvolver o cronograma Develop Schedule O processo de an\u00e1lise de sequ\u00eancias de atividades, dura\u00e7\u00f5es, necessidades de recursos e restri\u00e7\u00f5es de cronograma para criar o modelo de cronograma do projeto para execu\u00e7\u00e3o, monitoramento e controle do projeto. Desenvolver o termo de abertura do projeto Develop Project Charter O processo de desenvolver um documento que formalmente autoriza a exist\u00eancia de um projeto e fornece ao gerente do projeto a autoridade necess\u00e1ria para aplicar recursos organizacionais \u00e0s atividades do projeto. Diagrama de causa e efeito Cause and Effect Diagram T\u00e9cnica de decomposi\u00e7\u00e3o que ajuda a investigar um efeito indesej\u00e1vel at\u00e9 a sua causa-raiz. Dicion\u00e1rio da EAP WBS Dictionary Um documento que fornece informa\u00e7\u00f5es detalhadas sobre entregas, atividades e agendamento de cada componente da estrutura anal\u00edtica do projeto. D\u00edvida t\u00e9cnica Technical Debt Sobrecarga normalmente imprevista de manuten\u00e7\u00e3o do produto , muitas vezes causada por decis\u00f5es de projeto aqu\u00e9m do ideal, contribuindo para o custo total de propriedade. Pode existir n\u00e3o intencionalmente no incremento ou introduzido propositalmente para obter valor anteriormente. Documenta\u00e7\u00e3o dos requisitos Requirements Documentation Uma descri\u00e7\u00e3o de como os requisitos individuais atendem \u00e0s necessidades de neg\u00f3cios do projeto. Dura\u00e7\u00e3o Duration O n\u00famero total de per\u00edodos de trabalho necess\u00e1rio para finalizar uma atividade ou um componente da estrutura anal\u00edtica do projeto, expresso em horas, dias ou semanas. Entrega Deliverable Qualquer produto , resultado ou capacidade de realizar um servi\u00e7o, que seja \u00fanico e verific\u00e1vel, produzido para concluir um processo, fase ou projeto. Entregas aceitas Accepted Deliverables Produtos,resultados ou recursos produzidos por um projeto e validados pelo cliente ou patrocinadores do projeto como tendo satisfeito seus crit\u00e9rios de aceita\u00e7\u00e3o. Entregas verificadas Verified Deliverables Entregas do projeto conclu\u00eddas que foram verificadas e confirmadas quanto \u00e0 sua precis\u00e3o pelo processo de Controlar a qualidade . Entrevistas Interviews Uma abordagem formal ou informal para obter informa\u00e7\u00f5es das partes interessadas falando com as mesmas diretamente. Equipe de desenvolvimento Development Team \u00c9 um dos tr\u00eas pap\u00e9is no Scrum . A equipe de desenvolvimento \u00e9 a respons\u00e1vel pelo desenvolvimento da Sprint , trabalhando nas Tarefas de cada Hist\u00f3ria para a finaliza\u00e7\u00e3o dos trabalhos. Equipe de gerenciamento do projeto Project Management Team Os membros da equipe do projeto que est\u00e3o diretamente envolvidos nas atividades de gerenciamento do projeto. Equipe do projeto Project Team Um grupo de indiv\u00edduos que apoia o gerente do projeto na execu\u00e7\u00e3o do trabalho do projeto para alcan\u00e7ar seus objetivos. Escopo Scope A soma dos produtos , servi\u00e7os e resultados a serem fornecidos como um projeto. Escopo do produto Product Scope As caracter\u00edsticas e fun\u00e7\u00f5es que descrevem um produto , servi\u00e7o ou resultado . Escopo do projeto Project Scope O trabalho que deve ser realizado para entregar um produto , servi\u00e7o ou resultado com as caracter\u00edsticas e fun\u00e7\u00f5es especificadas. Especifica\u00e7\u00e3o Specification Uma declara\u00e7\u00e3o espec\u00edfica das necessidades a serem atendidas e as caracter\u00edsticas essenciais que s\u00e3o exigidas. Estimar as dura\u00e7\u00f5es das atividades Estimate Activity Durations O processo de estimativa do n\u00famero de per\u00edodos de trabalho que ser\u00e3o necess\u00e1rios para terminar atividades espec\u00edficas com os recursos estimados. Estimar os custos Estimate Costs O processo de desenvolver uma aproxima\u00e7\u00e3o dos recursos monet\u00e1rios necess\u00e1rios para terminar o trabalho do projeto. Estimar os recursos das atividades Estimate Activity Resources O processo de estimar recursos da equipe e o tipo e as quantidades de materiais, equipamentos e suprimentos necess\u00e1rios para realizar o trabalho do projeto. Fase do projeto Project Phase Um conjunto de atividades do projeto relacionadas de maneira l\u00f3gica que culmina na conclus\u00e3o de uma ou mais entregas Ferramenta Tool Alguma coisa tang\u00edvel, como um modelo ou um programa de software, usada na execu\u00e7\u00e3o de uma atividade para produzir um produto ou resultado . Fluxograma Flowchart A representa\u00e7\u00e3o em formato de diagrama das entradas, a\u00e7\u00f5es do processo e sa\u00eddas de um ou mais processos em um sistema. Gerenciamento de projetos Project Management A aplica\u00e7\u00e3o de conhecimentos , habilidades, ferramentas e t\u00e9cnicas \u00e0s atividades do projeto a fim de atender aos seus requisitos. Gerenciamento do cronograma do projeto Project Schedule Management O gerenciamento do cronograma do projeto inclui os processos necess\u00e1rios para gerenciar o t\u00e9rmino pontual do projeto. Gerenciamento do escopo do projeto Project Scope Management O gerenciamento do escopo do projeto inclui os processos necess\u00e1rios para assegurar que o projeto inclua todo o trabalho, e apenas o necess\u00e1rio, para que termine com sucesso. Gerenciar a equipe Manage Team O processo de acompanhar o desempenho de membros da equipe, fornecer feedback, resolver problemas e gerenciar mudan\u00e7as para otimizar o desempenho do projeto. Gerente do projeto (GP) Project Manager (PM) A pessoa alocada pela organiza\u00e7\u00e3o executora para liderar a equipe e que \u00e9 respons\u00e1vel por alcan\u00e7ar os objetivos do projeto. Gr\u00e1fico de Burndown Burn-down Chart O objetivo de um gr\u00e1fico burndown \u00e9 apresentar a por\u00e7\u00e3o de trabalho finalizada em compara\u00e7\u00e3o com o trabalho planejado. Esse gr\u00e1fico apresenta duas linhas: uma representando o trabalho planejado caso fosse executado de maneira uniforme ao longo da Sprint e outra apresentando o trabalho realmente j\u00e1 realizado pela Equipe de Desenvolvimento . Gr\u00e1fico de Burnup Burn-up Chart O objetivo de um gr\u00e1fico burnup \u00e9 apresentar a evolu\u00e7\u00e3o do trabalho em dire\u00e7\u00e3o ao produto final. Nesse gr\u00e1fico s\u00e3o tra\u00e7adas duas linhas, uma apresentando a evolu\u00e7\u00e3o do Product Backlog (esse pode aumentar a medida que o projeto vai sendo desenvolvido) e a outra apresentando a evolu\u00e7\u00e3o do que j\u00e1 foi realizado pela equipe durante as Sprints j\u00e1 realizadas. Ele d\u00e1 a visibilidade do andamento do projeto. Identificar as partes interessadas Identify Stakeholders O processo de identificar regularmente as partes interessadas do projeto e analisar e documentar informa\u00e7\u00f5es relevantes sobre seus interesses, envolvimento, interdepend\u00eancias, influ\u00eancia e impacto potencial no sucesso do projeto. Identificar os riscos Identify Risks O processo de identificar riscos individuais, bem como fontes de risco gerais e de documentar suas caracter\u00edsticas. Incremento Increment Artefato Scrum que define o trabalho completo e valioso produzido pela Equipe de Desenvolvimento durante uma Sprint . A soma de todos os incrementos forma um produto . Inspe\u00e7\u00e3o Inspection Exame de um produto de trabalho para determinar se o mesmo est\u00e1 de acordo com as normas documentadas. Marco Milestone Um ponto ou evento significativo de um projeto, programa ou portf\u00f3lio. Metodologia Methodology Um sistema de pr\u00e1ticas, t\u00e9cnicas, procedimentos e regras usado pelas pessoas que trabalham em uma disciplina. Objetivo do Produto Product Goal O Objetivo do Produto descreve um estado futuro do produto que pode servir como um objetivo para o Time Scrum planejar. O objetivo do produto est\u00e1 no Backlog do produto . O restante do Backlog do Produto surge para definir \u201co que\u201d cumprir\u00e1 a Meta do Produto. Papel Role Um papel definido a ser realizado por um membro da equipe do projeto , como testes, arquivamento, inspe\u00e7\u00e3o ou codifica\u00e7\u00e3o. Pap\u00e9is Scrum Scrum Roles Dono do Produto ( Product Owner ), Equipe de Desenvolvimento e Scrum Master. Parte interessada Stakeholder Um indiv\u00edduo, grupo ou organiza\u00e7\u00e3o que possa afetar, ser afetado, ou sentir-se afetado por uma decis\u00e3o, atividade, ou resultado de um projeto, programa ou portf\u00f3lio. Planejar o gerenciamento do cronograma Plan Schedule Management O processo de estabelecer as pol\u00edticas, os procedimentos e a documenta\u00e7\u00e3o para o planejamento, desenvolvimento, gerenciamento, execu\u00e7\u00e3o e controle do cronograma do projeto. Planejar o gerenciamento do escopo Plan Scope Management O processo de criar um plano de gerenciamento do escopo que documente como o escopo do projeto e do produto ser\u00e1 definido, validado e controlado. Planejar o gerenciamento dos custos Plan Cost Management O processo de definir como os custos do projeto ser\u00e3o estimados, or\u00e7ados, gerenciados, monitorados e controlados Planejar o gerenciamento dos riscos Plan Risk Management O processo de defini\u00e7\u00e3o de como conduzir as atividades de gerenciamento dos riscos de um projeto. Plano alternativo Fallback Plan Planos alternativos incluem um conjunto de a\u00e7\u00f5es e atividades alternativas caso o plano principal precise ser abandonado em virtude de problemas, riscos ou outros motivos. Plano de gerenciamento da equipe Team Management Plan Um componente do plano de gerenciamento de recursos que descreve quando e como os membros da equipe ser\u00e3o contratados ou mobilizados e por quanto tempo eles ser\u00e3o necess\u00e1rios. Plano de gerenciamento do cronograma Schedule Management Plan Um componente do plano de gerenciamento do projeto ou programa que estabelece os crit\u00e9rios e as atividades para o desenvolvimento, monitoramento e controle do cronograma. Plano de gerenciamento do escopo Scope Management Plan Um componente do plano de gerenciamento do projeto ou programa que descreve como o escopo ser\u00e1 definido, desenvolvido, monitorado, controlado e validado. Plano de gerenciamento do projeto Project Management Plan O documento que descreve como o projeto ser\u00e1 executado, monitorado, controlado e encerrado. Plano de gerenciamento dos requisitos Requirements Management Plan Um componente do plano de gerenciamento do projeto ou programa que descreve como os requisitos ser\u00e3o analisados, documentados e gerenciados. Processo Process Uma s\u00e9rie de atividades sistem\u00e1ticas direcionadas para alcan\u00e7ar um resultado final de tal forma que se aja em rela\u00e7\u00e3o a uma ou mais entradas a fim de criar uma ou mais sa\u00eddas. Produto Product Um artefato produzido, quantific\u00e1vel e que pode ser um item final ou um item componente. Outras palavras usadas para produtos s\u00e3o \u201cmateriais\u201d e \u201cbens\u201d. Product Owner Product Owner \u00c9 um dos tr\u00eas pap\u00e9is no Scrum . O Product Owner \u00e9 o respons\u00e1vel pelo Product Backlog . Ele que define e prioriza as funcionalidades desejadas para o produto , ou as atividades necess\u00e1rias ao projeto, descrevendo-as em forma de Hist\u00f3rias no Product Backlog . Programa Program Um grupo relacionado de projetos, subprogramas e atividades de programa gerenciados de forma coordenada para a obten\u00e7\u00e3o de benef\u00edcios que n\u00e3o estariam dispon\u00edveis se eles fossem gerenciados individualmente. Projeto Project Um esfor\u00e7o tempor\u00e1rio empreendido para criar um produto , servi\u00e7o ou resultado \u00fanico. Prot\u00f3tipos Prototypes Um m\u00e9todo para se obter respostas iniciais sobre os requisitos atrav\u00e9s de um modelo funcional do produto esperado antes de efetivamente constru\u00ed-lo. Qualidade Quality O grau em que um conjunto de caracter\u00edsticas inerentes atende aos requisitos Quest\u00e3o Issue Uma condi\u00e7\u00e3o ou situa\u00e7\u00e3o atual que pode afetar os objetivos do projeto. Question\u00e1rios Questionnaires Conjuntos de perguntas por escrito elaborados para rapidamente obter informa\u00e7\u00f5es de um grande n\u00famero de respondentes. Refinamento do Backlog do produto Product Backlog refinement Atividade em uma Sprint por meio da qual o Product Owner e as equipes de desenvolvimento adicionam granularidade ao Backlog do produto . Requisito Requirement Uma condi\u00e7\u00e3o ou capacidade que deve necessariamente estar presente em um produto , servi\u00e7o ou resultado para atender a uma necessidade de neg\u00f3cios. Resultado Result Uma sa\u00edda dos processos e atividades de gerenciamento do projeto. Os resultados incluem efeitos (por exemplo: sistemas integrados, processo revisado, organiza\u00e7\u00e3o reestruturada, testes, pessoal treinado, etc.) e documentos (por exemplo: pol\u00edticas, planos, estudos, procedimentos, especifica\u00e7\u00f5es, relat\u00f3rios, etc.). Retrabalho Rework A\u00e7\u00e3o tomada para fazer com que um componente imperfeito ou fora das especifica\u00e7\u00f5es fique em conformidade com os requisitos ou especifica\u00e7\u00f5es. Retrospectiva da Sprint Sprint Retrospective Evento Scrum que \u00e9 definido para um time-box de 3 horas, ou menos, para encerrar uma Sprint . Ele serve para o time Scrum inspecionar o Sprint anterior e planejar melhorias a serem implementadas durante o pr\u00f3ximo Sprint . Reuni\u00e3o Di\u00e1ria Daily Scrum Reuni\u00e3o realizada diariamente, preferencialmente no in\u00edcio da manh\u00e3 ou ao final do dia.Conta com a participa\u00e7\u00e3o da Equipe de Desenvolvimento e do Scrum Master. Tem dura\u00e7\u00e3o m\u00e1xima de 15 minutos e o objetivo dessa reuni\u00e3o \u00e9 comunicar o andamento dos trabalhos deixando-o transparente para todos da Equipe de Desenvolvimento , mantendo o foco na transpar\u00eancia e n\u00e3o na discuss\u00e3o t\u00e9cnica de problemas e solu\u00e7\u00f5es. \u00c9 uma reuni\u00e3o onde os membros da equipe assumem compromissos com os demais. Revis\u00f5es de documenta\u00e7\u00e3o Documentation Reviews Processo de coletar e revisar um conjunto de informa\u00e7\u00f5es para determinar sua exatid\u00e3o e completude. Revis\u00e3o de Sprint Sprint Review Evento Scrum que \u00e9 definido para um time-box de 4 horas, ou menos, para concluir o trabalho de desenvolvimento de um Sprint . Serve para o Time Scrum e as partes interessadas para inspecionar o incremento do produto resultante da Sprint , avaliar o impacto do trabalho realizado no progresso geral e atualizar o backlog do produto a fim de maximizar o valor do pr\u00f3ximo per\u00edodo. Risco Risk Um evento ou condi\u00e7\u00e3o incerta que, se ocorrer, provocar\u00e1 um efeito positivo ou negativo em um ou mais objetivos do projeto. T\u00e9cnica Technique Um procedimento sistem\u00e1tico definido usado por um recurso humano para realizar uma atividade a fim de produzir um produto ou resultado ou entregar um servi\u00e7o e que pode empregar uma ou mais ferramentas . Scrum Scrum Um framework para apoiar equipes no desenvolvimento de produtos complexos. Scrum consiste em equipes Scrum e suas fun\u00e7\u00f5es, eventos, artefatos e regras associados, conforme definido no Scrum Guide . Scrum Master Scrum Master \u00c9 um dos tr\u00eas pap\u00e9is no Scrum . O Scrum Master atua como facilitador da Equipe de Desenvolvimento e auxiliar do Product Owner , ajudando na manuten\u00e7\u00e3o do Product Backlog , removendo impedimentos e protegendo a Equipe de Desenvolvimento de interfer\u00eancias externas, para garantir a produtividade e a efici\u00eancia do trabalho. \u00c9 o Scrum Master que procura assegurar o uso das pr\u00e1ticas e valores do Scrum . Sprint Sprint Representa um ciclo de trabalho no Scrum . Esse ciclo pode ser de 2 semanas, 3 ou 4 semanas, que \u00e9 o Timebox das Sprints. As Sprints devem ter sempre a mesma dura\u00e7\u00e3o. Sprint Backlog Sprint Backlog Artefato que fornece uma vis\u00e3o geral do trabalho de desenvolvimento para realizar o objetivo de um Sprint , normalmente uma previs\u00e3o de funcionalidade e o trabalho necess\u00e1rio para entregar essa funcionalidade. Gerenciado pela Equipe de Desenvolvimento . Sprint Planning Sprint Planning Evento Scrum com tempo limitado para 8 horas, ou menos, para iniciar um Sprint . Ele serve para o Time Scrum inspecionar o trabalho do Backlog do Produto que \u00e9 mais valioso para ser feito em seguida e projetar esse trabalho no Backlog do Sprint . Tarefas Tasks As Hist\u00f3rias em cada Sprint devem ser divididas em tarefas que representem no m\u00e1ximo 1 dia \u00fatil de um membro da Equipe de Desenvolvimento . Portanto, as hist\u00f3rias devem ser divididas em tarefas menores de um dia. TimeBox TimeBox A escala de tempo definida para o projeto Sprint . Valida\u00e7\u00e3o Validation A garantia de que um produto , servi\u00e7o ou resultado atende \u00e0s necessidades do cliente e das outras partes interessadas. Validar o escopo Validate Scope O processo de formaliza\u00e7\u00e3o da aceita\u00e7\u00e3o das entregas terminadas do projeto. Velocity Velocity M\u00e9trica opcional, mas frequentemente usada, sobre a quantidade de Product Backlog implementadas em uma Sprint . Verifica\u00e7\u00e3o Verification A avalia\u00e7\u00e3o da conformidade de um produto , servi\u00e7o ou resultado com alguma regra, requisito, especifica\u00e7\u00e3o ou condi\u00e7\u00e3o imposta.","title":"Gloss\u00e1rio"},{"location":"Base/glossario/glossario/#refrencias","text":"[1] \u201cScrum Glossary.\u201d scrum.org, 2021. https://www.scrum.org/resources/scrum-glossary. [2] PMI. A Guide to the Project Management Body of Knowledge. 6\u00aa Edi\u00e7\u00e3o, 2017.","title":"Refr\u00eancias"},{"location":"Base/glossario/glossario/#versionamento","text":"Vers\u00e3o Data Coment\u00e1rios Autor(es) 0.1 16/02/2021 Adicionado o conte\u00fado base para a p\u00e1gina N\u00edcalo Ribeiro 0.2 17/02/2021 Finaliza\u00e7\u00e3o do documento, al\u00e9m de sua formata\u00e7\u00e3o N\u00edcalo Ribeiro 0.3 17/02/2021 Adi\u00e7\u00e3o de Hiperlinks N\u00edcalo Ribeiro","title":"Versionamento"},{"location":"Base/iniciativas_extras/CONTRIBUTING/","text":"Como Contribuir Branchs As branchs devem ser criadas a partir da branch develop e corresponder a alguma das issues. Devem ser nomeadas seguindo a estrutura: <numero_da_issue>_<t\u00edtulo simplificado da issue fonte> Nota: o nome do artefato deve possuir underlines (_) ao inv\u00e9s de espa\u00e7o e sem acentua\u00e7\u00e3o. Commits Os commits devem ter t\u00edtulos significativos. O t\u00edtulo deve referenciar a issue a qual o artefato se destina com a seguinte estrutura: #<numero_da_issue> <descri\u00e7\u00e3o pequena e concisa> Issues Verifique se j\u00e1 n\u00e3o existe uma issue que trata do mesmo problema. A issue deve ser clara no t\u00edtulo e descri\u00e7\u00e3o. Adicione labels que representam o tipo de artefato que deve ser desenvolvido. As issues devem apresentar a estrutura segundo o template . [#<numero_da_issue>] <t\u00edtulo da tarefa> Pull requests O t\u00edtulo e o coment\u00e1rio devem ser claros. O pull request deve ser relacionado a alguma issue. Adicione labels que representem o tipo de artefato. O template pode ser visto em pull requests . [#n\u00famero_da_issue] <t\u00edtulo da issue fonte>. Versionamento Data Nome Detalhe Vers\u00e3o 24/02/2021 Wagner Martins Inicializa\u00e7\u00e3o do documento e adi\u00e7\u00e3o de pol\u00edticas de contribui\u00e7\u00e3o 0.1 02/03/2021 Renato Britto Araujo Atualiza\u00e7\u00e3o das pol\u00edticas de contribui\u00e7\u00e3o e formata\u00e7\u00e3o do documento 0.2 04/03/2021 Wagner Martins Atualiza\u00e7\u00e3o do documento baseando-se em recomenda\u00e7\u00f5es da pull request 0.3","title":"Politicas de contribui\u00e7\u00e3o"},{"location":"Base/iniciativas_extras/CONTRIBUTING/#como-contribuir","text":"","title":"Como Contribuir"},{"location":"Base/iniciativas_extras/CONTRIBUTING/#branchs","text":"As branchs devem ser criadas a partir da branch develop e corresponder a alguma das issues. Devem ser nomeadas seguindo a estrutura: <numero_da_issue>_<t\u00edtulo simplificado da issue fonte> Nota: o nome do artefato deve possuir underlines (_) ao inv\u00e9s de espa\u00e7o e sem acentua\u00e7\u00e3o.","title":"Branchs"},{"location":"Base/iniciativas_extras/CONTRIBUTING/#commits","text":"Os commits devem ter t\u00edtulos significativos. O t\u00edtulo deve referenciar a issue a qual o artefato se destina com a seguinte estrutura: #<numero_da_issue> <descri\u00e7\u00e3o pequena e concisa>","title":"Commits"},{"location":"Base/iniciativas_extras/CONTRIBUTING/#issues","text":"Verifique se j\u00e1 n\u00e3o existe uma issue que trata do mesmo problema. A issue deve ser clara no t\u00edtulo e descri\u00e7\u00e3o. Adicione labels que representam o tipo de artefato que deve ser desenvolvido. As issues devem apresentar a estrutura segundo o template . [#<numero_da_issue>] <t\u00edtulo da tarefa>","title":"Issues"},{"location":"Base/iniciativas_extras/CONTRIBUTING/#pull-requests","text":"O t\u00edtulo e o coment\u00e1rio devem ser claros. O pull request deve ser relacionado a alguma issue. Adicione labels que representem o tipo de artefato. O template pode ser visto em pull requests . [#n\u00famero_da_issue] <t\u00edtulo da issue fonte>.","title":"Pull requests"},{"location":"Base/iniciativas_extras/CONTRIBUTING/#versionamento","text":"Data Nome Detalhe Vers\u00e3o 24/02/2021 Wagner Martins Inicializa\u00e7\u00e3o do documento e adi\u00e7\u00e3o de pol\u00edticas de contribui\u00e7\u00e3o 0.1 02/03/2021 Renato Britto Araujo Atualiza\u00e7\u00e3o das pol\u00edticas de contribui\u00e7\u00e3o e formata\u00e7\u00e3o do documento 0.2 04/03/2021 Wagner Martins Atualiza\u00e7\u00e3o do documento baseando-se em recomenda\u00e7\u00f5es da pull request 0.3","title":"Versionamento"},{"location":"Base/iniciativas_extras/issues/","text":"Template para as issues [#n\u00famero] T\u00edtulo Descri\u00e7\u00e3o: Descri\u00e7\u00e3o clara do que deve ser feito na issue Pontua\u00e7\u00e3o: x Tarefas: [] Crit\u00e9rio de aceita\u00e7\u00e3o 1. [] Crit\u00e9rio de aceita\u00e7\u00e3o 2. Revisores: Listar aqui os respons\u00e1veis pela revis\u00e3o das tarefas executadas.","title":"Template para as issues"},{"location":"Base/iniciativas_extras/issues/#template-para-as-issues","text":"","title":"Template para as issues"},{"location":"Base/iniciativas_extras/issues/#numero-titulo","text":"","title":"[#n\u00famero] T\u00edtulo"},{"location":"Base/iniciativas_extras/issues/#descricao","text":"Descri\u00e7\u00e3o clara do que deve ser feito na issue","title":"Descri\u00e7\u00e3o:"},{"location":"Base/iniciativas_extras/issues/#pontuacao-x","text":"","title":"Pontua\u00e7\u00e3o: x"},{"location":"Base/iniciativas_extras/issues/#tarefas","text":"[] Crit\u00e9rio de aceita\u00e7\u00e3o 1. [] Crit\u00e9rio de aceita\u00e7\u00e3o 2.","title":"Tarefas:"},{"location":"Base/iniciativas_extras/issues/#revisores","text":"Listar aqui os respons\u00e1veis pela revis\u00e3o das tarefas executadas.","title":"Revisores:"},{"location":"Base/iniciativas_extras/pull_requests/","text":"Template para os pull requests [#n\u00famero] T\u00edtulo da issue fonte Descri\u00e7\u00e3o: Descri\u00e7\u00e3o clara do que foi feito no pull request","title":"Template para os pull requests"},{"location":"Base/iniciativas_extras/pull_requests/#template-para-os-pull-requests","text":"","title":"Template para os pull requests"},{"location":"Base/iniciativas_extras/pull_requests/#numero-titulo-da-issue-fonte","text":"","title":"[#n\u00famero] T\u00edtulo da issue fonte"},{"location":"Base/iniciativas_extras/pull_requests/#descricao","text":"Descri\u00e7\u00e3o clara do que foi feito no pull request","title":"Descri\u00e7\u00e3o:"},{"location":"Base/mapa_mental/mapa_mental/","text":"Mapa Mental Esse mapa mental busca explicar uma vis\u00e3o geral sobre o que foi discutido sobre a ideia geral do projeto EnCare Versionamento Data Nome Detalhe Vers\u00e3o 18/02/2020 Jo\u00e3o Pedro Silva de Carvalho Criando mapa mental 1.0 27/02/2020 Jo\u00e3o Luis Baraky Corrige erros de ortografia 1.1","title":"Mapa Mental"},{"location":"Base/mapa_mental/mapa_mental/#mapa-mental","text":"Esse mapa mental busca explicar uma vis\u00e3o geral sobre o que foi discutido sobre a ideia geral do projeto EnCare","title":"Mapa Mental"},{"location":"Base/mapa_mental/mapa_mental/#versionamento","text":"Data Nome Detalhe Vers\u00e3o 18/02/2020 Jo\u00e3o Pedro Silva de Carvalho Criando mapa mental 1.0 27/02/2020 Jo\u00e3o Luis Baraky Corrige erros de ortografia 1.1","title":"Versionamento"},{"location":"Base/metodologia/metodologia/","text":"Metodologia Introdu\u00e7\u00e3o Segundo o dicion\u00e1rio michelis [1], metodologia pode ser entendida como um conjunto de regras e procedimentos para a realiza\u00e7\u00e3o de uma pesquisa. Na \u00e1rea de software a metodologia tem sentido semelhante, sendo tamb\u00e9m um conjunto de regras e procedimentos que regem um projeto. A fim de poder economizar tempo e ser mais produtivo, a equipe definiu as metodologias que ser\u00e3o usadas para o seguimento do projeto. Este documento tem por objetivo explicar quais s\u00e3o as metodologias escolhidas e como elas inteferem no modo de trabalhar da equipe. Metodologias escolhidas Scrum O Scrum \u00e9 uma metodologia \u00e1gil para gest\u00e3o e planejamento de projetos de software [2] e \u00e9 a base da escolha metodol\u00f3gica de trabalho da equipe. Os principais procedimentos do Scrum a serem adotados pela equipe s\u00e3o: Daily meeting : Reuni\u00f5es di\u00e1rias que t\u00eam por objetivo resumir o que a pessoa fez no dia e falar o que planeja fazer no pr\u00f3ximo, al\u00e9m de citar quais s\u00e3o os seus impedimentos. Isso ajuda a equipe toda a estar ciente do andamento do projeto como um todo, al\u00e9m de poder identificar depend\u00eancias. Sprints : Sprints s\u00e3o ciclos que ser\u00e3o semanais - iniciando e terminando \u00e0s ter\u00e7as, observando dias de entregas tamb\u00e9m. Plannig : \u00c9 uma reuni\u00e3o semanal que acontece no in\u00edcio de cada sprint e nela ocorre o planejamento da sprint e divis\u00e3o das tarefas. Product Backlog : \u00c9 uma lista de tarefas e funcionalidades que ser\u00e3o implementadas futuramente. Sprint Review : \u00c9 uma reuni\u00e3o que tem por objetivo revisar tudo o que foi feito na sprint passada, destacando pontos positivos e negativos. Na equipe essa reuni\u00e3o acontece antes de come\u00e7ar a planning. XP O XP (extreme programming) \u00e9 uma metodologia focada no desenvolvimento de software que possui valores e princ\u00edpios que s\u00e3o fundamentados principalmente por um conjunto de pr\u00e1ticas. Al\u00e9m disso \u00e9 uma metodologia leve que pode ser adotada por diferentes n\u00edveis de programadores. A principal caracter\u00edstica do XP adotada pela equipe \u00e9 a programa\u00e7\u00e3o em pares.[3] Programa\u00e7\u00e3o em pares : \u00c9 a programa\u00e7\u00e3o em duplas em um \u00fanico computador, o que melhora o desenvolvimento em v\u00e1rios aspectos, como a descoberta de falhas. Al\u00e9m disso contribui positivamente para o trabalho em equipe. Kanban O Kanban \u00e9 um sistema \u00e1gil e visual de gest\u00e3o de tarefas dividindo-as em colunas, que representam o status das tarefas inseridas em cada coluna. [4] Ferramentas usadas pela equipe Telegram \u00c9 um aplicativo de mensagens que serve como principal meio de comunica\u00e7\u00e3o de toda a equipe. \u00c9 por ele que ocorrem as notifica\u00e7\u00f5es sobre o projeto, al\u00e9m das dailies de forma ass\u00edncrona. Google drive \u00c9 uma ferramenta de hospedagem, compartilhamento e desenvovimento de arquivos e \u00e9 usado para hospedar as atas das reuni\u00f5es, al\u00e9m de outros arquivos. Github \u00c9 a ferramenta de versionamento e de hospedagem do c\u00f3digo e documentos do projeto. Github Pages - Mkdocs O github pages \u00e9 uma p\u00e1gina da web onde \u00e9 apresentada os documentos e outros arquivos. J\u00e1 o mkdocs \u00e9 uma ferramenta que facilita o uso de arquivos em markdown no github pages. Microsoft Teams \u00c9 a ferramenta de videoconfer\u00eancia usada pela equipe para reuni\u00f5es e grava\u00e7\u00e3o das apresenta\u00e7\u00f5es. Refer\u00eancias [1] - https://michaelis.uol.com.br/moderno-portugues/busca/portugues-brasileiro/metodologia/ [2] - https://www.desenvolvimentoagil.com.br/scrum/ [3] - https://www.treinaweb.com.br/blog/o-que-e-xp-extreme-programming/ [4] - https://artia.com/kanban/ Versionamento Data Nome Detalhe Vers\u00e3o 17/02/2020 Jo\u00e3o Pedro Silva de Carvalho Cria\u00e7\u00e3o do documento 1.0 18/02/2020 Jo\u00e3o Pedro Silva de Carvalho Corre\u00e7\u00e3o de orotgrafia e concord\u00e2ncia 1.0.1","title":"Metodologia"},{"location":"Base/metodologia/metodologia/#metodologia","text":"","title":"Metodologia"},{"location":"Base/metodologia/metodologia/#introducao","text":"Segundo o dicion\u00e1rio michelis [1], metodologia pode ser entendida como um conjunto de regras e procedimentos para a realiza\u00e7\u00e3o de uma pesquisa. Na \u00e1rea de software a metodologia tem sentido semelhante, sendo tamb\u00e9m um conjunto de regras e procedimentos que regem um projeto. A fim de poder economizar tempo e ser mais produtivo, a equipe definiu as metodologias que ser\u00e3o usadas para o seguimento do projeto. Este documento tem por objetivo explicar quais s\u00e3o as metodologias escolhidas e como elas inteferem no modo de trabalhar da equipe.","title":"Introdu\u00e7\u00e3o"},{"location":"Base/metodologia/metodologia/#metodologias-escolhidas","text":"","title":"Metodologias escolhidas"},{"location":"Base/metodologia/metodologia/#scrum","text":"O Scrum \u00e9 uma metodologia \u00e1gil para gest\u00e3o e planejamento de projetos de software [2] e \u00e9 a base da escolha metodol\u00f3gica de trabalho da equipe. Os principais procedimentos do Scrum a serem adotados pela equipe s\u00e3o: Daily meeting : Reuni\u00f5es di\u00e1rias que t\u00eam por objetivo resumir o que a pessoa fez no dia e falar o que planeja fazer no pr\u00f3ximo, al\u00e9m de citar quais s\u00e3o os seus impedimentos. Isso ajuda a equipe toda a estar ciente do andamento do projeto como um todo, al\u00e9m de poder identificar depend\u00eancias. Sprints : Sprints s\u00e3o ciclos que ser\u00e3o semanais - iniciando e terminando \u00e0s ter\u00e7as, observando dias de entregas tamb\u00e9m. Plannig : \u00c9 uma reuni\u00e3o semanal que acontece no in\u00edcio de cada sprint e nela ocorre o planejamento da sprint e divis\u00e3o das tarefas. Product Backlog : \u00c9 uma lista de tarefas e funcionalidades que ser\u00e3o implementadas futuramente. Sprint Review : \u00c9 uma reuni\u00e3o que tem por objetivo revisar tudo o que foi feito na sprint passada, destacando pontos positivos e negativos. Na equipe essa reuni\u00e3o acontece antes de come\u00e7ar a planning.","title":"Scrum"},{"location":"Base/metodologia/metodologia/#xp","text":"O XP (extreme programming) \u00e9 uma metodologia focada no desenvolvimento de software que possui valores e princ\u00edpios que s\u00e3o fundamentados principalmente por um conjunto de pr\u00e1ticas. Al\u00e9m disso \u00e9 uma metodologia leve que pode ser adotada por diferentes n\u00edveis de programadores. A principal caracter\u00edstica do XP adotada pela equipe \u00e9 a programa\u00e7\u00e3o em pares.[3] Programa\u00e7\u00e3o em pares : \u00c9 a programa\u00e7\u00e3o em duplas em um \u00fanico computador, o que melhora o desenvolvimento em v\u00e1rios aspectos, como a descoberta de falhas. Al\u00e9m disso contribui positivamente para o trabalho em equipe.","title":"XP"},{"location":"Base/metodologia/metodologia/#kanban","text":"O Kanban \u00e9 um sistema \u00e1gil e visual de gest\u00e3o de tarefas dividindo-as em colunas, que representam o status das tarefas inseridas em cada coluna. [4]","title":"Kanban"},{"location":"Base/metodologia/metodologia/#ferramentas-usadas-pela-equipe","text":"","title":"Ferramentas usadas pela equipe"},{"location":"Base/metodologia/metodologia/#telegram","text":"\u00c9 um aplicativo de mensagens que serve como principal meio de comunica\u00e7\u00e3o de toda a equipe. \u00c9 por ele que ocorrem as notifica\u00e7\u00f5es sobre o projeto, al\u00e9m das dailies de forma ass\u00edncrona.","title":"Telegram"},{"location":"Base/metodologia/metodologia/#google-drive","text":"\u00c9 uma ferramenta de hospedagem, compartilhamento e desenvovimento de arquivos e \u00e9 usado para hospedar as atas das reuni\u00f5es, al\u00e9m de outros arquivos.","title":"Google drive"},{"location":"Base/metodologia/metodologia/#github","text":"\u00c9 a ferramenta de versionamento e de hospedagem do c\u00f3digo e documentos do projeto.","title":"Github"},{"location":"Base/metodologia/metodologia/#github-pages-mkdocs","text":"O github pages \u00e9 uma p\u00e1gina da web onde \u00e9 apresentada os documentos e outros arquivos. J\u00e1 o mkdocs \u00e9 uma ferramenta que facilita o uso de arquivos em markdown no github pages.","title":"Github Pages - Mkdocs"},{"location":"Base/metodologia/metodologia/#microsoft-teams","text":"\u00c9 a ferramenta de videoconfer\u00eancia usada pela equipe para reuni\u00f5es e grava\u00e7\u00e3o das apresenta\u00e7\u00f5es.","title":"Microsoft Teams"},{"location":"Base/metodologia/metodologia/#referencias","text":"[1] - https://michaelis.uol.com.br/moderno-portugues/busca/portugues-brasileiro/metodologia/ [2] - https://www.desenvolvimentoagil.com.br/scrum/ [3] - https://www.treinaweb.com.br/blog/o-que-e-xp-extreme-programming/ [4] - https://artia.com/kanban/","title":"Refer\u00eancias"},{"location":"Base/metodologia/metodologia/#versionamento","text":"Data Nome Detalhe Vers\u00e3o 17/02/2020 Jo\u00e3o Pedro Silva de Carvalho Cria\u00e7\u00e3o do documento 1.0 18/02/2020 Jo\u00e3o Pedro Silva de Carvalho Corre\u00e7\u00e3o de orotgrafia e concord\u00e2ncia 1.0.1","title":"Versionamento"},{"location":"Base/planodeacao/5w2g/","text":"Plano de A\u00e7\u00e3o Um plano de a\u00e7\u00e3o consiste em uma metodologia de planejamento onde s\u00e3o respondidas 7 perguntas: O qu\u00ea Por que? Quando? Como? Onde? Quanto? Quem? S\u00e3o perguntas que ajudam tanto o time de execu\u00e7\u00e3o, quanto de planejamento a terem uma vis\u00e3o mais clara das ideias a serem desenvolvidas ou a\u00e7\u00f5es que s\u00e3o necess\u00e1rias acontecer para a manuten\u00e7\u00e3o ou cria\u00e7\u00e3o de um produto ou sistema. Metodologia 5W2H - Encare Figura 1. Plano de A\u00e7\u00e3o Refer\u00eancias [1] \"Por que melhorar a gest\u00e3o de sua empresa?\" - Praxis Empresa Jr. Dispon\u00edvel: https://praxisjr.com.br/nossoblog/melhorar-a-gestao/ Acessado em: 16/02/2021. Versionamento Vers\u00e3o Data Coment\u00e1rios Autor(es) 0.1 17/02/2021 Adiciona Plano de a\u00e7\u00e3o 5W2H Hugo Arag\u00e3o 0.2 19/02/2021 Corrige Plano de a\u00e7\u00e3o 5W2H Hugo Arag\u00e3o 0.2 27/02/2021 Ajusta largura do quadro Jo\u00e3o Luis Baraky","title":"Plano de A\u00e7\u00e3o"},{"location":"Base/planodeacao/5w2g/#plano-de-acao","text":"Um plano de a\u00e7\u00e3o consiste em uma metodologia de planejamento onde s\u00e3o respondidas 7 perguntas: O qu\u00ea Por que? Quando? Como? Onde? Quanto? Quem? S\u00e3o perguntas que ajudam tanto o time de execu\u00e7\u00e3o, quanto de planejamento a terem uma vis\u00e3o mais clara das ideias a serem desenvolvidas ou a\u00e7\u00f5es que s\u00e3o necess\u00e1rias acontecer para a manuten\u00e7\u00e3o ou cria\u00e7\u00e3o de um produto ou sistema.","title":"Plano de A\u00e7\u00e3o"},{"location":"Base/planodeacao/5w2g/#metodologia-5w2h-encare","text":"Figura 1. Plano de A\u00e7\u00e3o","title":"Metodologia 5W2H - Encare"},{"location":"Base/planodeacao/5w2g/#referencias","text":"[1] \"Por que melhorar a gest\u00e3o de sua empresa?\" - Praxis Empresa Jr. Dispon\u00edvel: https://praxisjr.com.br/nossoblog/melhorar-a-gestao/ Acessado em: 16/02/2021.","title":"Refer\u00eancias"},{"location":"Base/planodeacao/5w2g/#versionamento","text":"Vers\u00e3o Data Coment\u00e1rios Autor(es) 0.1 17/02/2021 Adiciona Plano de a\u00e7\u00e3o 5W2H Hugo Arag\u00e3o 0.2 19/02/2021 Corrige Plano de a\u00e7\u00e3o 5W2H Hugo Arag\u00e3o 0.2 27/02/2021 Ajusta largura do quadro Jo\u00e3o Luis Baraky","title":"Versionamento"},{"location":"Base/requisitos/requisitos/","text":"Requisitos do Produto Esse documento cont\u00e9m as t\u00e9cnicas de elicita\u00e7\u00e3o que foram utilizadas e os requisitos levantados a partir delas. Termos e seus significados: Termo Significado RF Requisito Funcional RNF Requisito N\u00e3o Funcional ST Storytelling INT Introspec\u00e7\u00e3o BS Brainstorming Resumo do documento : Identificador Quantidade BS 08 ST 07 INT 18 RF 18 RNF 04 Brainstorming Para fazer o brainstorm, a equipe se reuniu por video chamada no Teams e, com a participa\u00e7\u00e3o de todos os membros, inicialmente foram sugeridos requisitos e discutimos a validade de todos para adicionar ao nosso projeto. Foi a primeira t\u00e9cnica usada pela equipe e serviu principalmente para gerar uma linha base dos requisitos do M\u00ednimo Produto Vi\u00e1vel (MVP). Resumo: Requisito Descri\u00e7\u00e3o BS01 Ter um feed de servi\u00e7os BS02 Poder filtrar os estabelecimentos por dist\u00e2ncia e tipo de servi\u00e7o BS03 Solicitar a localiza\u00e7\u00e3o do usu\u00e1rio BS04 Ter o perfil do estabelecimento com informa\u00e7\u00f5es pertinentes BS05 Poder acessar a localiza\u00e7\u00e3o do estabelecimento no google maps a partir do perfil BS06 Ter dispon\u00edvel no banco de dados todos os eatabelecimentos BS07 Ter uma api para consumir os dados do estabelecimentos BS08 Consumir a api do google maps para calcular a dist\u00e2ncia Storytelling Storytelling \u00e9 um termo em ingl\u00eas. \"Story\" significa hist\u00f3ria e \"telling\", contar. Mais que uma mera narrativa, Storytelling \u00e9 a arte de contar hist\u00f3rias usando t\u00e9cnicas inspiradas em roteiristas e escritores para transmitir uma mensagem de forma inesquec\u00edvel. Cliente procura novo estilo Um cliente desejava mudar seu estilo, para isso procurou seu barbeiro de confian\u00e7a, mas ao chegar ao estabelecimento percebeu que o mesmo estava fechado. O cliente ent\u00e3o teve que procurar outro estabelecimento e informou ao barbeiro sua ideia de novo corte de cabelo. Ap\u00f3s o procedimento, o cliente se sentiu frustrado, pois o resultado n\u00e3o era nem um pouco parecido com o pedido. Cliente procura um procedimento est\u00e9tico j\u00e1 existente Uma jovem ao navegar pelo Instagram gostou do corte de cabelo de uma atriz e da arte nas unhas dela. Buscando melhorar sua autoestima, e se sentir renovada, a jovem procurou em seu bairro um estabelecimento que a oferecesse o mesmo corte e arte nas unhas, que a deixassem bonita como a atriz nas fotos. A jovem ent\u00e3o navegou pelo Google Maps buscando por um sal\u00e3o que parecesse competente, escolheu um que possu\u00eda boas avalia\u00e7\u00f5es e se dirigiu ao local para executar o mesmo procedimento est\u00e9tico. Mas como o procedimento era novo, as profissionais do sal\u00e3o n\u00e3o conseguiram atingir o resultado que a cliente desejou, as ferramentas de busca tamb\u00e9m n\u00e3o traziam informa\u00e7\u00f5es que a dessem certeza de que as profissionais conseguiriam obter tal resultado. Resumo Identificador Descri\u00e7\u00e3o ST01 Deve ser poss\u00edvel saber o hor\u00e1rio de funcionamento do estabelecimento ST02 O sistema deve informar os servi\u00e7os prestados pelo estabelecimento ST03 O usu\u00e1rio deve ser capaz de analisar fotos de resultados de procedimentos feitos em outros clientes ST04 O usu\u00e1rio deve conseguir buscar estabelecimentos que ofere\u00e7am o servi\u00e7o desejado ST05 O sistema deve fornecer um mapa para navega\u00e7\u00e3o e encontrar estabelecimentos ST06 O usu\u00e1rio deve poder conseguir visualizar fotos do estabelecimento em si ST07 O estabelecimento poderia informar quem s\u00e3o seus funcion\u00e1rios e suas capacidades t\u00e9cnicas Introspec\u00e7\u00e3o \u00c9 uma t\u00e9cnica rica e profunda que visa entender quais propriedades o sistema deve possuir. Demanda imagina\u00e7\u00e3o de quem est\u00e1 levantando os requisitos para estabelecer o que ele gostaria que estivesse no sistema, a fim de executar uma determinada tarefa. Apesar de ser uma t\u00e9cnica \u00fatil, a instrospecc\u00e7\u00e3o de um especialista, por exemplo, pode n\u00e3o ser reflitida na experi\u00eancia real do usu\u00e1rio. Ao acessar o site Visualizar uma mensagem de boas vindas; Ser apresentado ao sistema; Deve ser poss\u00edvel acessar de qualquer navegador; Deve ser poss\u00edvel acessar de dispositivos m\u00f3veis e desktops; Na tela principal Deve haver uma inteface agrad\u00e1vel; A interface deve ser intuitiva; As funcionalidades devem estar claras; Ao utilizar o mapa O sistema deve solicitar a minha permiss\u00e3o para acessar minha localiza\u00e7\u00e3o; Caso forne\u00e7a minha localiza\u00e7\u00e3o, o mapa deve estar centralizado nela; Deve ser poss\u00edvel navegar pelo mapa; Os estabelecimentos devem estar marcados claramente no mapa; Deve ser poss\u00edvel definir o raio de busca do mapa; Deve ser poss\u00edvel selecionar o estabelecimento que aparece no mapa; Ao aplicar filtros Deve ser poss\u00edvel filtrar estabeleciomentos pelo nome; Deve ser poss\u00edvel filtrar estabelecimentos pela dist\u00e2ncia/localiza\u00e7\u00e3o; Deve ser poss\u00edvel filtrar estabelecimentos pelos servi\u00e7os oferecidos; Deve ser poss\u00edvel filtrar estabelecimentos por faixa de pre\u00e7o; Ao selecionar um estabelecimento Deve estar evidente os dados do estabelecimento : Nome Endere\u00e7o Informa\u00e7\u00f5es de contato Deve ser poss\u00edvel visualizar fotos do estabelecimento em si; O sistema deve fornecer fotos dos resultados dos servi\u00e7os realizados pelo estabelecimento; Resumo Identificador Descri\u00e7\u00e3o INT01 Usu\u00e1rio deve ser capaz de visualizar o mapa a partir de sua localiza\u00e7\u00e3o INT02 Usu\u00e1rio deve ser capaz de visualizar o mapa sem fornecer sua localiza\u00e7\u00e3o INT03 Usu\u00e1rio deve ser capaz de identificar um estabelecimento no mapa INT04 Usu\u00e1rio deve ser capaz de navegar pelo mapa INT05 Usu\u00e1rio deve ser capaz de selecionar o estabelecimento no mapa INT06 O sistema deve apresentar devidamente as informa\u00e7\u00f5es do estabelecimento selecionado INT07 O sistema deve listar todos os estabelecimentos cadastrados INT08 Usu\u00e1rio deve filtrar os estabelecimentos no mapa INT09 Usu\u00e1rio deve filtrar os etabelecimentos na lista INT10 O sistema deve permitir filtragem por nome dos estabelecimentos, servi\u00e7os oferecidos e localiza\u00e7\u00e3o INT11 O usu\u00e1rio deve ser capaz de ver fotos do estabelecimento INT12 O usu\u00e1rio deve ser capaz de ver fotos dos resultados dos servi\u00e7os que o estabelecimento realiza INT13 O usu\u00e1rio deve ser capaz de identificar os detalhes do estabelecimento escolhido INT14 O sistema deve ser acessado em desktops INT15 O sistema deve ser acessado em dispositivos m\u00f3veis INT16 O estabelecimento deve informar hor\u00e1rios de funcionamento INT17 O estabelecimento deve informar os pre\u00e7os INT18 O sistema deve possuir uma interface agrad\u00e1vel e intuitiva Requisitos Funcionais e Requisitos n\u00e3o Funcionais A partir da an\u00e1lise do que foi levantado no Storytelling, Introspec\u00e7\u00e3o e Brainstorm, foi poss\u00edvel determinar os seguintes requisitos : Requisitos Funcionais Requisito Descri\u00e7\u00e3o Origem RF01 Criar feed de servi\u00e7os BS01 , ST02 RF02 Criar feed de estabelecimentos INT07 RF03 Criar mapa interativo BS05, ST05, INT01, INT02, INT04, INT05 RF04 Criar filtro para o feed de servi\u00e7os BS02, INT10, ST04, INT07 RF05 Calcular a dist\u00e2ncia at\u00e9 o estabelecimento desejado BS08 RF06 O sistema dever\u00e1 permitir que o usu\u00e1rio admin cadastre os estabelecimentos BS06 RF07 O sistema dever\u00e1 ser capaz de coletar a localiza\u00e7\u00e3o do usu\u00e1rio INT01, INT08, INT09, ST05 RF08 O sistema dever\u00e1 fornecer um link para que o usu\u00e1rio possa acessar a localiza\u00e7\u00e3o do estabelecimento INT10 RF09 O sistema dever\u00e1 ter um perfil do estabelecimento com informa\u00e7\u00f5es b\u00e1sicas de contato, funcionamento e localiza\u00e7\u00e3o. BS04, BS07, ST01, ST02, ST03, INT06, INT11, INT12, INT13, INT16, INT17 RF10 O sistema dever\u00e1 listar dentro do perfil do estabelecimento, os servi\u00e7os que ele oferece. BS04, ST02, ST03, ST06, INT06, INT11, INT12, INT13, INT16, INT17 Requisitos N\u00e3o Funcionais Requisito Descri\u00e7\u00e3o Origem RNF01 Avaliar a usabilidade por meio do tempo necess\u00e1rio para a realiza\u00e7\u00e3o das principais tarefas. INT18 RNF02 O sistema dever\u00e1 ter portabilidade para uso em mobile e desktop. INT14, INT8 Versionamento Data Nome Detalhe Vers\u00e3o 05/03/2021 Hugo Arag\u00e3o Cria\u00e7\u00e3o do documento e Storytelling 0.1 05/03/2021 N\u00edcalo Ribeiro Adi\u00e7\u00e3o da introspec\u00e7\u00e3o e defini\u00e7\u00e3o do storytelling 0.2 06/03/2021 N\u00edcalo Ribeiro Adi\u00e7\u00e3o do resumo dos requisitos do storytelling 0.3 06/03/2021 Jo\u00e3o Pedro Carvalho Adi\u00e7\u00e3o do brainstorm e formata\u00e7\u00e3o do documento 0.4 07/03/2021 N\u00edcalo Ribeiro Separa\u00e7\u00e3o em requisitos funcionais e n\u00e3o funcionais e formata\u00e7\u00e3o do documento 0.5 07/03/2021 N\u00edcalo Ribeiro Revis\u00e3o e formata\u00e7\u00e3o do documento 0.6 18/03/2021 Jo\u00e3o Pedro e Jo\u00e3o Baraky Refatora\u00e7\u00e3o dos requisitos 1.0 19/03/2021 Wagner Martins Revis\u00e3o - Corre\u00e7\u00e3o de erro ortogr\u00e1fico 1.1","title":"Requisitos"},{"location":"Base/requisitos/requisitos/#requisitos-do-produto","text":"Esse documento cont\u00e9m as t\u00e9cnicas de elicita\u00e7\u00e3o que foram utilizadas e os requisitos levantados a partir delas. Termos e seus significados: Termo Significado RF Requisito Funcional RNF Requisito N\u00e3o Funcional ST Storytelling INT Introspec\u00e7\u00e3o BS Brainstorming Resumo do documento : Identificador Quantidade BS 08 ST 07 INT 18 RF 18 RNF 04","title":"Requisitos do Produto"},{"location":"Base/requisitos/requisitos/#brainstorming","text":"Para fazer o brainstorm, a equipe se reuniu por video chamada no Teams e, com a participa\u00e7\u00e3o de todos os membros, inicialmente foram sugeridos requisitos e discutimos a validade de todos para adicionar ao nosso projeto. Foi a primeira t\u00e9cnica usada pela equipe e serviu principalmente para gerar uma linha base dos requisitos do M\u00ednimo Produto Vi\u00e1vel (MVP).","title":"Brainstorming"},{"location":"Base/requisitos/requisitos/#resumo","text":"Requisito Descri\u00e7\u00e3o BS01 Ter um feed de servi\u00e7os BS02 Poder filtrar os estabelecimentos por dist\u00e2ncia e tipo de servi\u00e7o BS03 Solicitar a localiza\u00e7\u00e3o do usu\u00e1rio BS04 Ter o perfil do estabelecimento com informa\u00e7\u00f5es pertinentes BS05 Poder acessar a localiza\u00e7\u00e3o do estabelecimento no google maps a partir do perfil BS06 Ter dispon\u00edvel no banco de dados todos os eatabelecimentos BS07 Ter uma api para consumir os dados do estabelecimentos BS08 Consumir a api do google maps para calcular a dist\u00e2ncia","title":"Resumo:"},{"location":"Base/requisitos/requisitos/#storytelling","text":"Storytelling \u00e9 um termo em ingl\u00eas. \"Story\" significa hist\u00f3ria e \"telling\", contar. Mais que uma mera narrativa, Storytelling \u00e9 a arte de contar hist\u00f3rias usando t\u00e9cnicas inspiradas em roteiristas e escritores para transmitir uma mensagem de forma inesquec\u00edvel.","title":"Storytelling"},{"location":"Base/requisitos/requisitos/#cliente-procura-novo-estilo","text":"Um cliente desejava mudar seu estilo, para isso procurou seu barbeiro de confian\u00e7a, mas ao chegar ao estabelecimento percebeu que o mesmo estava fechado. O cliente ent\u00e3o teve que procurar outro estabelecimento e informou ao barbeiro sua ideia de novo corte de cabelo. Ap\u00f3s o procedimento, o cliente se sentiu frustrado, pois o resultado n\u00e3o era nem um pouco parecido com o pedido.","title":"Cliente procura novo estilo"},{"location":"Base/requisitos/requisitos/#cliente-procura-um-procedimento-estetico-ja-existente","text":"Uma jovem ao navegar pelo Instagram gostou do corte de cabelo de uma atriz e da arte nas unhas dela. Buscando melhorar sua autoestima, e se sentir renovada, a jovem procurou em seu bairro um estabelecimento que a oferecesse o mesmo corte e arte nas unhas, que a deixassem bonita como a atriz nas fotos. A jovem ent\u00e3o navegou pelo Google Maps buscando por um sal\u00e3o que parecesse competente, escolheu um que possu\u00eda boas avalia\u00e7\u00f5es e se dirigiu ao local para executar o mesmo procedimento est\u00e9tico. Mas como o procedimento era novo, as profissionais do sal\u00e3o n\u00e3o conseguiram atingir o resultado que a cliente desejou, as ferramentas de busca tamb\u00e9m n\u00e3o traziam informa\u00e7\u00f5es que a dessem certeza de que as profissionais conseguiriam obter tal resultado.","title":"Cliente procura um procedimento est\u00e9tico j\u00e1 existente"},{"location":"Base/requisitos/requisitos/#resumo_1","text":"Identificador Descri\u00e7\u00e3o ST01 Deve ser poss\u00edvel saber o hor\u00e1rio de funcionamento do estabelecimento ST02 O sistema deve informar os servi\u00e7os prestados pelo estabelecimento ST03 O usu\u00e1rio deve ser capaz de analisar fotos de resultados de procedimentos feitos em outros clientes ST04 O usu\u00e1rio deve conseguir buscar estabelecimentos que ofere\u00e7am o servi\u00e7o desejado ST05 O sistema deve fornecer um mapa para navega\u00e7\u00e3o e encontrar estabelecimentos ST06 O usu\u00e1rio deve poder conseguir visualizar fotos do estabelecimento em si ST07 O estabelecimento poderia informar quem s\u00e3o seus funcion\u00e1rios e suas capacidades t\u00e9cnicas","title":"Resumo"},{"location":"Base/requisitos/requisitos/#introspeccao","text":"\u00c9 uma t\u00e9cnica rica e profunda que visa entender quais propriedades o sistema deve possuir. Demanda imagina\u00e7\u00e3o de quem est\u00e1 levantando os requisitos para estabelecer o que ele gostaria que estivesse no sistema, a fim de executar uma determinada tarefa. Apesar de ser uma t\u00e9cnica \u00fatil, a instrospecc\u00e7\u00e3o de um especialista, por exemplo, pode n\u00e3o ser reflitida na experi\u00eancia real do usu\u00e1rio.","title":"Introspec\u00e7\u00e3o"},{"location":"Base/requisitos/requisitos/#ao-acessar-o-site","text":"Visualizar uma mensagem de boas vindas; Ser apresentado ao sistema; Deve ser poss\u00edvel acessar de qualquer navegador; Deve ser poss\u00edvel acessar de dispositivos m\u00f3veis e desktops;","title":"Ao acessar o site"},{"location":"Base/requisitos/requisitos/#na-tela-principal","text":"Deve haver uma inteface agrad\u00e1vel; A interface deve ser intuitiva; As funcionalidades devem estar claras;","title":"Na tela principal"},{"location":"Base/requisitos/requisitos/#ao-utilizar-o-mapa","text":"O sistema deve solicitar a minha permiss\u00e3o para acessar minha localiza\u00e7\u00e3o; Caso forne\u00e7a minha localiza\u00e7\u00e3o, o mapa deve estar centralizado nela; Deve ser poss\u00edvel navegar pelo mapa; Os estabelecimentos devem estar marcados claramente no mapa; Deve ser poss\u00edvel definir o raio de busca do mapa; Deve ser poss\u00edvel selecionar o estabelecimento que aparece no mapa;","title":"Ao utilizar o mapa"},{"location":"Base/requisitos/requisitos/#ao-aplicar-filtros","text":"Deve ser poss\u00edvel filtrar estabeleciomentos pelo nome; Deve ser poss\u00edvel filtrar estabelecimentos pela dist\u00e2ncia/localiza\u00e7\u00e3o; Deve ser poss\u00edvel filtrar estabelecimentos pelos servi\u00e7os oferecidos; Deve ser poss\u00edvel filtrar estabelecimentos por faixa de pre\u00e7o;","title":"Ao aplicar filtros"},{"location":"Base/requisitos/requisitos/#ao-selecionar-um-estabelecimento","text":"Deve estar evidente os dados do estabelecimento : Nome Endere\u00e7o Informa\u00e7\u00f5es de contato Deve ser poss\u00edvel visualizar fotos do estabelecimento em si; O sistema deve fornecer fotos dos resultados dos servi\u00e7os realizados pelo estabelecimento;","title":"Ao selecionar um estabelecimento"},{"location":"Base/requisitos/requisitos/#resumo_2","text":"Identificador Descri\u00e7\u00e3o INT01 Usu\u00e1rio deve ser capaz de visualizar o mapa a partir de sua localiza\u00e7\u00e3o INT02 Usu\u00e1rio deve ser capaz de visualizar o mapa sem fornecer sua localiza\u00e7\u00e3o INT03 Usu\u00e1rio deve ser capaz de identificar um estabelecimento no mapa INT04 Usu\u00e1rio deve ser capaz de navegar pelo mapa INT05 Usu\u00e1rio deve ser capaz de selecionar o estabelecimento no mapa INT06 O sistema deve apresentar devidamente as informa\u00e7\u00f5es do estabelecimento selecionado INT07 O sistema deve listar todos os estabelecimentos cadastrados INT08 Usu\u00e1rio deve filtrar os estabelecimentos no mapa INT09 Usu\u00e1rio deve filtrar os etabelecimentos na lista INT10 O sistema deve permitir filtragem por nome dos estabelecimentos, servi\u00e7os oferecidos e localiza\u00e7\u00e3o INT11 O usu\u00e1rio deve ser capaz de ver fotos do estabelecimento INT12 O usu\u00e1rio deve ser capaz de ver fotos dos resultados dos servi\u00e7os que o estabelecimento realiza INT13 O usu\u00e1rio deve ser capaz de identificar os detalhes do estabelecimento escolhido INT14 O sistema deve ser acessado em desktops INT15 O sistema deve ser acessado em dispositivos m\u00f3veis INT16 O estabelecimento deve informar hor\u00e1rios de funcionamento INT17 O estabelecimento deve informar os pre\u00e7os INT18 O sistema deve possuir uma interface agrad\u00e1vel e intuitiva","title":"Resumo"},{"location":"Base/requisitos/requisitos/#requisitos-funcionais-e-requisitos-nao-funcionais","text":"A partir da an\u00e1lise do que foi levantado no Storytelling, Introspec\u00e7\u00e3o e Brainstorm, foi poss\u00edvel determinar os seguintes requisitos :","title":"Requisitos Funcionais e Requisitos n\u00e3o Funcionais"},{"location":"Base/requisitos/requisitos/#requisitos-funcionais","text":"Requisito Descri\u00e7\u00e3o Origem RF01 Criar feed de servi\u00e7os BS01 , ST02 RF02 Criar feed de estabelecimentos INT07 RF03 Criar mapa interativo BS05, ST05, INT01, INT02, INT04, INT05 RF04 Criar filtro para o feed de servi\u00e7os BS02, INT10, ST04, INT07 RF05 Calcular a dist\u00e2ncia at\u00e9 o estabelecimento desejado BS08 RF06 O sistema dever\u00e1 permitir que o usu\u00e1rio admin cadastre os estabelecimentos BS06 RF07 O sistema dever\u00e1 ser capaz de coletar a localiza\u00e7\u00e3o do usu\u00e1rio INT01, INT08, INT09, ST05 RF08 O sistema dever\u00e1 fornecer um link para que o usu\u00e1rio possa acessar a localiza\u00e7\u00e3o do estabelecimento INT10 RF09 O sistema dever\u00e1 ter um perfil do estabelecimento com informa\u00e7\u00f5es b\u00e1sicas de contato, funcionamento e localiza\u00e7\u00e3o. BS04, BS07, ST01, ST02, ST03, INT06, INT11, INT12, INT13, INT16, INT17 RF10 O sistema dever\u00e1 listar dentro do perfil do estabelecimento, os servi\u00e7os que ele oferece. BS04, ST02, ST03, ST06, INT06, INT11, INT12, INT13, INT16, INT17","title":"Requisitos Funcionais"},{"location":"Base/requisitos/requisitos/#requisitos-nao-funcionais","text":"Requisito Descri\u00e7\u00e3o Origem RNF01 Avaliar a usabilidade por meio do tempo necess\u00e1rio para a realiza\u00e7\u00e3o das principais tarefas. INT18 RNF02 O sistema dever\u00e1 ter portabilidade para uso em mobile e desktop. INT14, INT8","title":"Requisitos N\u00e3o Funcionais"},{"location":"Base/requisitos/requisitos/#versionamento","text":"Data Nome Detalhe Vers\u00e3o 05/03/2021 Hugo Arag\u00e3o Cria\u00e7\u00e3o do documento e Storytelling 0.1 05/03/2021 N\u00edcalo Ribeiro Adi\u00e7\u00e3o da introspec\u00e7\u00e3o e defini\u00e7\u00e3o do storytelling 0.2 06/03/2021 N\u00edcalo Ribeiro Adi\u00e7\u00e3o do resumo dos requisitos do storytelling 0.3 06/03/2021 Jo\u00e3o Pedro Carvalho Adi\u00e7\u00e3o do brainstorm e formata\u00e7\u00e3o do documento 0.4 07/03/2021 N\u00edcalo Ribeiro Separa\u00e7\u00e3o em requisitos funcionais e n\u00e3o funcionais e formata\u00e7\u00e3o do documento 0.5 07/03/2021 N\u00edcalo Ribeiro Revis\u00e3o e formata\u00e7\u00e3o do documento 0.6 18/03/2021 Jo\u00e3o Pedro e Jo\u00e3o Baraky Refatora\u00e7\u00e3o dos requisitos 1.0 19/03/2021 Wagner Martins Revis\u00e3o - Corre\u00e7\u00e3o de erro ortogr\u00e1fico 1.1","title":"Versionamento"},{"location":"Base/richpicture/rich_picture/","text":"Rich Picture Rich Picture \u00e9 um artefato constru\u00eddo, muitas vezes de maneira informal, a fim de ilustrar e trazer uma melhor compreens\u00e3o do problema a ser resolvido pela equipe. Versionamento Data Nome Detalhe Vers\u00e3o 18/02/2020 Jo\u00e3o Luis Baraky Criando rich picture 1.0 01/03/2020 Jo\u00e3o Luis Baraky Aumenta fonte e alinha a ideia com a equipe 1.1","title":"Rich Picture"},{"location":"Base/richpicture/rich_picture/#rich-picture","text":"Rich Picture \u00e9 um artefato constru\u00eddo, muitas vezes de maneira informal, a fim de ilustrar e trazer uma melhor compreens\u00e3o do problema a ser resolvido pela equipe.","title":"Rich Picture"},{"location":"Base/richpicture/rich_picture/#versionamento","text":"Data Nome Detalhe Vers\u00e3o 18/02/2020 Jo\u00e3o Luis Baraky Criando rich picture 1.0 01/03/2020 Jo\u00e3o Luis Baraky Aumenta fonte e alinha a ideia com a equipe 1.1","title":"Versionamento"},{"location":"Modelagem/backlog/Backlog/","text":"Prioriza\u00e7\u00e3o e Backlog do Produto 1. Introdu\u00e7\u00e3o: Este documento cont\u00e9m a prioriza\u00e7\u00e3o dos documentos elicitados e, a partir deles, a cria\u00e7\u00e3o do backlog do produto com base na prioridade dos requisitos. Al\u00e9m disso, dividimos em 3 n\u00edveis de elicita\u00e7\u00e3o: User stories, requisitos e tarefas, que ser\u00e3o explicados individualmente. Esse documento ser\u00e1 a base para todo desenvolvimento, indicando qual a ordem adequada para o desenvolvimento da aplica\u00e7\u00e3o. 1.2. Abrevia\u00e7\u00e3oes e acr\u00f4nimos: Abrevia\u00e7\u00e3o Significado RF Requisito funcional RNF Requisito n\u00e3o funcional US User storie T Tarefa 2. N\u00edveis: Para a cria\u00e7\u00e3o do backlog do produto, optamos por dividi-lo em 3 n\u00edveis diferentes visando uma melhor compreens\u00e3o e an\u00e1lise. Em nosso primeiro momento, elicitamos os requisitos e, a partir deles, vamos agrupar em User stories , para dar uma vis\u00e3o do usu\u00e1rio acerca dos requisitos, e em tarefas menores, para devida atribui\u00e7\u00e3o em issues. 2.1. User Stories: Segundo 1 , User story \u00e9 uma descri\u00e7\u00e3o das necessidades do usu\u00e1rio sobre um ponto de vista do usu\u00e1rio, sendo esse um dos seus principais princ\u00edpios: representar integralmente o produto sobre o ponto de vista do usu\u00e1rio. 2.2. Requisitos: O site DevMedia tem a seguinte defini\u00e7\u00e3o para requisitos: \"Requisitos s\u00e3o, al\u00e9m de fun\u00e7\u00f5es, objetivos, propriedades, restri\u00e7\u00f5es que o sistema deve possuir para satisfazer contratos, padr\u00f5es ou especifica\u00e7\u00f5es de acordo com o(s) usu\u00e1rio(s). De forma mais geral um requisito \u00e9 uma condi\u00e7\u00e3o necess\u00e1ria para satisfazer um objetivo.\" [2] Como a user story \u00e9 uma descri\u00e7\u00e3o baseada na vis\u00e3o do usu\u00e1rio e v\u00e1rios requisitos podem fazer parte da mesma user story, os requisitos ser\u00e3o abordados nesse documento como uma subdivis\u00e3o das US's. Dentro de requisitos, temos duas principais classifica\u00e7\u00f5es: 2.2.1. Requisitos funcionais: Se refere a o que o sistema faz, como fun\u00e7\u00f5es e informa\u00e7\u00f5es [2]. 2.2.2. Requisitos n\u00e3o funcionais: Se refere a como o sistema faz, geralmente atribu\u00eddo a m\u00e9tricas de qualidade, como usabilidade e confiabilidade[2]. 2.3. Tarefas: \u00c9 um meio de \"quebrar\" tanto os requisitos quanto as Hist\u00f3rias de usu\u00e1rio de forma que seja de tamanho pequeno e que tenha um escopo bem definido, sendo essas as tarefas que ser\u00e3o realizadas pela equipe. 3. Prioriza\u00e7\u00e3o dos requisitos por meio do MoSCoW Esta t\u00e9cnica consiste em dividir os requisitos em quatro n\u00edveis de prioridade definidos de acordo com as letras que comp\u00f5em o MoSCoW, sendo eles: Must : Nesta categoria s\u00e3o atribu\u00eddos os itens que devem necessariamente ser realizados. S\u00e3o considerados obrigat\u00f3rios, vitais, essenciais e inegoci\u00e1veis; Should : Nesta categoria est\u00e3o os itens necess\u00e1rios, importantes e valorosos por\u00e9m n\u00e3o obrigat\u00f3rios e negoci\u00e1veis. S\u00e3o itens de segunda prioridade que podem ser realizados num segundo momento; Could : Nesta categoria est\u00e3o inseridos os itens desejados, mas com menor impacto ou menor valor para o objetivo estrat\u00e9gico. S\u00e3o itens de terceira prioridade que n\u00e3o apresentam problemas caso n\u00e3o sejam realizados; Would : S\u00e3o os itens de menor prioridade. Podem ser reconsiderados no futuro, mas n\u00e3o ocupar\u00e3o os recursos da organiza\u00e7\u00e3o no momento atual. 4. Product Backlog: 4.1 Tabela User Stories US Descri\u00e7\u00e3o Prioridade US01 Eu como usu\u00e1rio desejo encontrar um estabelecimento com o procedimento est\u00e9tico que eu queira Must US02 Eu como usu\u00e1rio desejo ver as informa\u00e7\u00f5es do estabelecimento. Must US03 Eu como usu\u00e1rio desejo que o sistema obede\u00e7a crit\u00e9rios de portabilidade e usabilidade Should 4.2 Tabela Requisitos Requisito Descri\u00e7\u00e3o Prioridade RF01 Criar feed de servi\u00e7os. Must RF02 Criar um feed de estabelecimentos. Must RF03 Criar um mapa interativo. Should RF04 Criar um filtro para o feed de servi\u00e7os. Must RF05 O sistema dever\u00e1 ser capaz de calcular a dist\u00e2ncia entre o usu\u00e1rio e um estabelecimento. Must RF06 O sistema dever\u00e1 permitir que o usu\u00e1rio admin cadastre os estabelecimentos. Must RF07 O sistema dever\u00e1 ser capaz de coletar a localiza\u00e7\u00e3o do usu\u00e1rio. Must RF08 O sistema dever\u00e1 fornecer um link para que o usu\u00e1rio possa acessar a localiza\u00e7\u00e3o do estabelecimento. Must RF09 O sistema dever\u00e1 ter um perfil do estabelecimento com informa\u00e7\u00f5es b\u00e1sicas de contato, funcionamento e localiza\u00e7\u00e3o. Must RF10 O sistema dever\u00e1 listar dentro do perfil do estabelecimento, os servi\u00e7os que ele oferece. Must RNF01 Avaliar a usabilidade por meio do tempo necess\u00e1rio para a realiza\u00e7\u00e3o das principais tarefas. Should RNF02 O sistema dever\u00e1 ter portabilidade para uso em mobile e desktop. Should 4.3 Tabela Tarefas US Requisito Prioridade Tarefa US01 RF01 Must T01: Criar p\u00e1gina de apresenta\u00e7\u00e3o de servi\u00e7os no front T02: Criar componente que mostre um servi\u00e7o no feed T03: Desenvolver endpoint para consumo dos dados dos servi\u00e7os T04: Desenvolver estabelecimentos no backend RF02 Would T05: Criar p\u00e1gina para apresentar os estabelecimentos T06: Consumir dados dos estabelecimentos no backend RF03 Could T07: Integrar um mapa do site T08: Permitir intera\u00e7\u00e3o do usu\u00e1rio com o mapa T09: Alimentar o mapa com os dados dos estabelecimentos T10: Identificar os estabelecimentos no mapa T11: Poder acessar o perfil de um estabelecimento no mapa RF04 Must T12: Criar componente para abrigar os filtros T13: Criar endpoint que recebe os filtros e retorna os dados equivalentes T14: Exibir dados filtrados RF05 Must T15: Criar endpoint que receba a localiza\u00e7\u00e3o do usu\u00e1rio e calcule a dist\u00e2ncia RF06 Must T16: Criar um CRUD de estabelecimentos no backend T17: Criar uma p\u00e1gina para cadastro dos estabelecimentos no front RF07 Must T18: Solicitar localiza\u00e7\u00e3o exata T19: Conseguir localiza\u00e7\u00e3o aproximada (caso o usu\u00e1rio n\u00e3o forne\u00e7a a localiza\u00e7\u00e3o) US02 RF08 Must T20: Gerar link do mapa com a localiza\u00e7\u00e3o do estabelecimento RF09 Must T21: Criar p\u00e1gina de perfil no frontend T22: Criar endpoint no backend para consumo desses dados T23: Exibir os dados corretamente no frontend RF10 Must T24: Consumir a lista de servi\u00e7os no backend T25: Exibir os dados no frontend T26: Possibilitar melhor visualiza\u00e7\u00e3o (aproxima\u00e7\u00e3o) das fotos US03 RNF01 Should T27: Elaborar m\u00e9todo de avalia\u00e7\u00e3o da usabilidade com rela\u00e7\u00e3o ao tempo (inspe\u00e7\u00e3o, observa\u00e7\u00e3o, investiga\u00e7\u00e3o) T28: Aplicar m\u00e9todo escolhido para a avalia\u00e7\u00e3o RNF02 Should T29: Elaborar m\u00e9todo de avalia\u00e7\u00e3o da portabilidade T30: Aplicar m\u00e9todo escolhido para a avalia\u00e7\u00e3o Apesar de termos um escopo que aparenta ser pequeno, muitos requisitos s\u00e3o vitais ao sistema para que ele seja conclu\u00eddo. 5. Refer\u00eancias: [1] - https://k21.global/tudo-sobre/agilidade/user-stories/o-que-e-user-story#:~:text=User%20Story%20ou%20%E2%80%9Chist%C3%B3ria%20de,ponto%20de%20vista%20desse%20usu%C3%A1rio. [2] - https://www.devmedia.com.br/introducao-a-requisitos-de-software/29580 [3] - https://www.pluralsight.com/guides/break-down-agile-user-stories-into-tasks-and-estimate-level-of-effort 6. Versionamento: Data Nome Descri\u00e7\u00e3o Vers\u00e3o 01/03/2021 Jo\u00e3o Pedro Silva de Carvalho Documentando Brainstorm 0.1 01/03/2021 N\u00edcalo Ribeiro Complementando a documenta\u00e7\u00e3o 0.2 02/03/2021 N\u00edcalo Ribeiro Adi\u00e7\u00e3o de tarefas para o backlog 0.3 02/03/2021 N\u00edcalo Ribeiro Ajustes na tabela de tarefas e adi\u00e7\u00e3o de novas 0.4 07/03/2021 N\u00edcalo Ribeiro Refatora\u00e7\u00e3o do documento; Adi\u00e7\u00e3o da prioriza\u00e7\u00e3o e tarefas do backlog 0.5 07/03/2021 Jo\u00e3o Pedro Silva de Carvalho Adicionando defini\u00e7\u00f5es de termos 0.6 08/03/2021 Jo\u00e3o Pedro Silva de Carvalho Dividindo requisitos em tarefas 0.7 08/03/2021 N\u00edcalo Ribeiro Revis\u00e3o e ajustes 0.8 18/03/2021 Jo\u00e3o Luis Baraky e Jo\u00e3o Pedro Silva Substitui tabela do Backlog para 3 tabelas melhores organizadas e coerentes 0.9 18/03/2020 Jo\u00e3o Pedro Silva e Jo\u00e3o Luis Baraky Adicionando prioriza\u00e7\u00e3o nos requisitos 1.0 19/03/2020 Jo\u00e3o Pedro Silva e Gustavo Nogueira Adicionando revis\u00e3o do PR 1.1","title":"Backlog do Produto"},{"location":"Modelagem/backlog/Backlog/#priorizacao-e-backlog-do-produto","text":"","title":"Prioriza\u00e7\u00e3o e Backlog do Produto"},{"location":"Modelagem/backlog/Backlog/#1-introducao","text":"Este documento cont\u00e9m a prioriza\u00e7\u00e3o dos documentos elicitados e, a partir deles, a cria\u00e7\u00e3o do backlog do produto com base na prioridade dos requisitos. Al\u00e9m disso, dividimos em 3 n\u00edveis de elicita\u00e7\u00e3o: User stories, requisitos e tarefas, que ser\u00e3o explicados individualmente. Esse documento ser\u00e1 a base para todo desenvolvimento, indicando qual a ordem adequada para o desenvolvimento da aplica\u00e7\u00e3o.","title":"1. Introdu\u00e7\u00e3o:"},{"location":"Modelagem/backlog/Backlog/#12-abreviacaoes-e-acronimos","text":"Abrevia\u00e7\u00e3o Significado RF Requisito funcional RNF Requisito n\u00e3o funcional US User storie T Tarefa","title":"1.2. Abrevia\u00e7\u00e3oes e acr\u00f4nimos:"},{"location":"Modelagem/backlog/Backlog/#2-niveis","text":"Para a cria\u00e7\u00e3o do backlog do produto, optamos por dividi-lo em 3 n\u00edveis diferentes visando uma melhor compreens\u00e3o e an\u00e1lise. Em nosso primeiro momento, elicitamos os requisitos e, a partir deles, vamos agrupar em User stories , para dar uma vis\u00e3o do usu\u00e1rio acerca dos requisitos, e em tarefas menores, para devida atribui\u00e7\u00e3o em issues.","title":"2. N\u00edveis:"},{"location":"Modelagem/backlog/Backlog/#21-user-stories","text":"Segundo 1 , User story \u00e9 uma descri\u00e7\u00e3o das necessidades do usu\u00e1rio sobre um ponto de vista do usu\u00e1rio, sendo esse um dos seus principais princ\u00edpios: representar integralmente o produto sobre o ponto de vista do usu\u00e1rio.","title":"2.1. User Stories:"},{"location":"Modelagem/backlog/Backlog/#22-requisitos","text":"O site DevMedia tem a seguinte defini\u00e7\u00e3o para requisitos: \"Requisitos s\u00e3o, al\u00e9m de fun\u00e7\u00f5es, objetivos, propriedades, restri\u00e7\u00f5es que o sistema deve possuir para satisfazer contratos, padr\u00f5es ou especifica\u00e7\u00f5es de acordo com o(s) usu\u00e1rio(s). De forma mais geral um requisito \u00e9 uma condi\u00e7\u00e3o necess\u00e1ria para satisfazer um objetivo.\" [2] Como a user story \u00e9 uma descri\u00e7\u00e3o baseada na vis\u00e3o do usu\u00e1rio e v\u00e1rios requisitos podem fazer parte da mesma user story, os requisitos ser\u00e3o abordados nesse documento como uma subdivis\u00e3o das US's. Dentro de requisitos, temos duas principais classifica\u00e7\u00f5es:","title":"2.2. Requisitos:"},{"location":"Modelagem/backlog/Backlog/#221-requisitos-funcionais","text":"Se refere a o que o sistema faz, como fun\u00e7\u00f5es e informa\u00e7\u00f5es [2].","title":"2.2.1. Requisitos funcionais:"},{"location":"Modelagem/backlog/Backlog/#222-requisitos-nao-funcionais","text":"Se refere a como o sistema faz, geralmente atribu\u00eddo a m\u00e9tricas de qualidade, como usabilidade e confiabilidade[2].","title":"2.2.2. Requisitos n\u00e3o funcionais:"},{"location":"Modelagem/backlog/Backlog/#23-tarefas","text":"\u00c9 um meio de \"quebrar\" tanto os requisitos quanto as Hist\u00f3rias de usu\u00e1rio de forma que seja de tamanho pequeno e que tenha um escopo bem definido, sendo essas as tarefas que ser\u00e3o realizadas pela equipe.","title":"2.3. Tarefas:"},{"location":"Modelagem/backlog/Backlog/#3-priorizacao-dos-requisitos-por-meio-do-moscow","text":"Esta t\u00e9cnica consiste em dividir os requisitos em quatro n\u00edveis de prioridade definidos de acordo com as letras que comp\u00f5em o MoSCoW, sendo eles: Must : Nesta categoria s\u00e3o atribu\u00eddos os itens que devem necessariamente ser realizados. S\u00e3o considerados obrigat\u00f3rios, vitais, essenciais e inegoci\u00e1veis; Should : Nesta categoria est\u00e3o os itens necess\u00e1rios, importantes e valorosos por\u00e9m n\u00e3o obrigat\u00f3rios e negoci\u00e1veis. S\u00e3o itens de segunda prioridade que podem ser realizados num segundo momento; Could : Nesta categoria est\u00e3o inseridos os itens desejados, mas com menor impacto ou menor valor para o objetivo estrat\u00e9gico. S\u00e3o itens de terceira prioridade que n\u00e3o apresentam problemas caso n\u00e3o sejam realizados; Would : S\u00e3o os itens de menor prioridade. Podem ser reconsiderados no futuro, mas n\u00e3o ocupar\u00e3o os recursos da organiza\u00e7\u00e3o no momento atual.","title":"3. Prioriza\u00e7\u00e3o dos requisitos por meio do MoSCoW"},{"location":"Modelagem/backlog/Backlog/#4-product-backlog","text":"","title":"4. Product Backlog:"},{"location":"Modelagem/backlog/Backlog/#41-tabela-user-stories","text":"US Descri\u00e7\u00e3o Prioridade US01 Eu como usu\u00e1rio desejo encontrar um estabelecimento com o procedimento est\u00e9tico que eu queira Must US02 Eu como usu\u00e1rio desejo ver as informa\u00e7\u00f5es do estabelecimento. Must US03 Eu como usu\u00e1rio desejo que o sistema obede\u00e7a crit\u00e9rios de portabilidade e usabilidade Should","title":"4.1 Tabela User Stories"},{"location":"Modelagem/backlog/Backlog/#42-tabela-requisitos","text":"Requisito Descri\u00e7\u00e3o Prioridade RF01 Criar feed de servi\u00e7os. Must RF02 Criar um feed de estabelecimentos. Must RF03 Criar um mapa interativo. Should RF04 Criar um filtro para o feed de servi\u00e7os. Must RF05 O sistema dever\u00e1 ser capaz de calcular a dist\u00e2ncia entre o usu\u00e1rio e um estabelecimento. Must RF06 O sistema dever\u00e1 permitir que o usu\u00e1rio admin cadastre os estabelecimentos. Must RF07 O sistema dever\u00e1 ser capaz de coletar a localiza\u00e7\u00e3o do usu\u00e1rio. Must RF08 O sistema dever\u00e1 fornecer um link para que o usu\u00e1rio possa acessar a localiza\u00e7\u00e3o do estabelecimento. Must RF09 O sistema dever\u00e1 ter um perfil do estabelecimento com informa\u00e7\u00f5es b\u00e1sicas de contato, funcionamento e localiza\u00e7\u00e3o. Must RF10 O sistema dever\u00e1 listar dentro do perfil do estabelecimento, os servi\u00e7os que ele oferece. Must RNF01 Avaliar a usabilidade por meio do tempo necess\u00e1rio para a realiza\u00e7\u00e3o das principais tarefas. Should RNF02 O sistema dever\u00e1 ter portabilidade para uso em mobile e desktop. Should","title":"4.2 Tabela Requisitos"},{"location":"Modelagem/backlog/Backlog/#43-tabela-tarefas","text":"US Requisito Prioridade Tarefa US01 RF01 Must T01: Criar p\u00e1gina de apresenta\u00e7\u00e3o de servi\u00e7os no front T02: Criar componente que mostre um servi\u00e7o no feed T03: Desenvolver endpoint para consumo dos dados dos servi\u00e7os T04: Desenvolver estabelecimentos no backend RF02 Would T05: Criar p\u00e1gina para apresentar os estabelecimentos T06: Consumir dados dos estabelecimentos no backend RF03 Could T07: Integrar um mapa do site T08: Permitir intera\u00e7\u00e3o do usu\u00e1rio com o mapa T09: Alimentar o mapa com os dados dos estabelecimentos T10: Identificar os estabelecimentos no mapa T11: Poder acessar o perfil de um estabelecimento no mapa RF04 Must T12: Criar componente para abrigar os filtros T13: Criar endpoint que recebe os filtros e retorna os dados equivalentes T14: Exibir dados filtrados RF05 Must T15: Criar endpoint que receba a localiza\u00e7\u00e3o do usu\u00e1rio e calcule a dist\u00e2ncia RF06 Must T16: Criar um CRUD de estabelecimentos no backend T17: Criar uma p\u00e1gina para cadastro dos estabelecimentos no front RF07 Must T18: Solicitar localiza\u00e7\u00e3o exata T19: Conseguir localiza\u00e7\u00e3o aproximada (caso o usu\u00e1rio n\u00e3o forne\u00e7a a localiza\u00e7\u00e3o) US02 RF08 Must T20: Gerar link do mapa com a localiza\u00e7\u00e3o do estabelecimento RF09 Must T21: Criar p\u00e1gina de perfil no frontend T22: Criar endpoint no backend para consumo desses dados T23: Exibir os dados corretamente no frontend RF10 Must T24: Consumir a lista de servi\u00e7os no backend T25: Exibir os dados no frontend T26: Possibilitar melhor visualiza\u00e7\u00e3o (aproxima\u00e7\u00e3o) das fotos US03 RNF01 Should T27: Elaborar m\u00e9todo de avalia\u00e7\u00e3o da usabilidade com rela\u00e7\u00e3o ao tempo (inspe\u00e7\u00e3o, observa\u00e7\u00e3o, investiga\u00e7\u00e3o) T28: Aplicar m\u00e9todo escolhido para a avalia\u00e7\u00e3o RNF02 Should T29: Elaborar m\u00e9todo de avalia\u00e7\u00e3o da portabilidade T30: Aplicar m\u00e9todo escolhido para a avalia\u00e7\u00e3o Apesar de termos um escopo que aparenta ser pequeno, muitos requisitos s\u00e3o vitais ao sistema para que ele seja conclu\u00eddo.","title":"4.3 Tabela Tarefas"},{"location":"Modelagem/backlog/Backlog/#5-referencias","text":"[1] - https://k21.global/tudo-sobre/agilidade/user-stories/o-que-e-user-story#:~:text=User%20Story%20ou%20%E2%80%9Chist%C3%B3ria%20de,ponto%20de%20vista%20desse%20usu%C3%A1rio. [2] - https://www.devmedia.com.br/introducao-a-requisitos-de-software/29580 [3] - https://www.pluralsight.com/guides/break-down-agile-user-stories-into-tasks-and-estimate-level-of-effort","title":"5. Refer\u00eancias:"},{"location":"Modelagem/backlog/Backlog/#6-versionamento","text":"Data Nome Descri\u00e7\u00e3o Vers\u00e3o 01/03/2021 Jo\u00e3o Pedro Silva de Carvalho Documentando Brainstorm 0.1 01/03/2021 N\u00edcalo Ribeiro Complementando a documenta\u00e7\u00e3o 0.2 02/03/2021 N\u00edcalo Ribeiro Adi\u00e7\u00e3o de tarefas para o backlog 0.3 02/03/2021 N\u00edcalo Ribeiro Ajustes na tabela de tarefas e adi\u00e7\u00e3o de novas 0.4 07/03/2021 N\u00edcalo Ribeiro Refatora\u00e7\u00e3o do documento; Adi\u00e7\u00e3o da prioriza\u00e7\u00e3o e tarefas do backlog 0.5 07/03/2021 Jo\u00e3o Pedro Silva de Carvalho Adicionando defini\u00e7\u00f5es de termos 0.6 08/03/2021 Jo\u00e3o Pedro Silva de Carvalho Dividindo requisitos em tarefas 0.7 08/03/2021 N\u00edcalo Ribeiro Revis\u00e3o e ajustes 0.8 18/03/2021 Jo\u00e3o Luis Baraky e Jo\u00e3o Pedro Silva Substitui tabela do Backlog para 3 tabelas melhores organizadas e coerentes 0.9 18/03/2020 Jo\u00e3o Pedro Silva e Jo\u00e3o Luis Baraky Adicionando prioriza\u00e7\u00e3o nos requisitos 1.0 19/03/2020 Jo\u00e3o Pedro Silva e Gustavo Nogueira Adicionando revis\u00e3o do PR 1.1","title":"6. Versionamento:"},{"location":"Modelagem/diagrama_atividades/diagrama_de_atividades/","text":"Diagrama de Atividades O diagrama de atividades \u00e9 um diagrama de comportamento UML que mostra o fluxo de controle ou fluxo de objetos com \u00eanfase na sequ\u00eancia e nas condi\u00e7\u00f5es do fluxo. Al\u00e9m disso, diagramas de atividade ajudam a unir as pessoas das \u00e1reas de neg\u00f3cios e de desenvolvimento de uma organiza\u00e7\u00e3o para entender o mesmo processo e comportamento. Diagramas de atividade oferecem uma s\u00e9rie de benef\u00edcios para os usu\u00e1rios. Considere criar um diagrama de atividade para: Demonstrar a l\u00f3gica de um algoritmo; Descrever as etapas realizadas em um caso de uso UML; Ilustrar um processo de neg\u00f3cio ou fluxo de trabalho entre usu\u00e1rios e o sistema; Simplificar e melhorar qualquer processo ao esclarecer casos de uso complicados; Modelar elementos de arquitetura de software, como m\u00e9todo, fun\u00e7\u00e3o e opera\u00e7\u00e3o. A partir do que foi definido como escopo do projeto e reuni\u00f5es com os membros da equipe, chemagos nos seguintes diagramas de atividades: Geral: representa as atividades da aplica\u00e7\u00e3o de um ponto de vista mais amplo. Filtrar: representa as atividades referentes a funcionalidade \"filtrar estabelecimentos\". Geral Esse diagrama busca demonstrar o fluxo principal das atividades do usu\u00e1rio em intera\u00e7\u00e3o com a aplica\u00e7\u00e3o. No fluxo pricipal temos a a\u00e7\u00e3o de decis\u00e3o, onde o usu\u00e1rio pode escolher buscar no Feed de imagens por uma ideia nova ou executar uma busca completa (busca avan\u00e7ada), podendo assim rastrear exatamente o procedimento de est\u00e9tica desejado. A tarefa \u00e9 finalizada ap\u00f3s a visualiza\u00e7\u00e3o do estabelecimento e suas informa\u00e7\u00f5es principais, onde o usu\u00e1rio decide por finalizar a busca ou retornar \u00e0 escolha de filtros. Filtrar Estabelecimentos No filtro de estabelecimentos, temos aqui representada no diagrama uma vis\u00e3o ampliada da tarefa. Nesse caso mais espec\u00edfico, as a\u00e7\u00f5es s\u00e3o referentes \u00e0s consequ\u00eancias de cada decis\u00e3o de busca feita pelo usu\u00e1rio. A tarefa \u00e9 finalizada quando as op\u00e7\u00f5es de filtro desejadas s\u00e3o selecionadas e o usu\u00e1rio clica no bot\u00e3o de \"executar a\u00e7\u00e3o\", no caso \"Filtrar\". Refer\u00eancias Activity Diagrams. uml-diagrams.org. Dispon\u00edvel em: https://www.uml-diagrams.org/activity-diagrams.html . Acesso em: 06 de mar\u00e7o de 2021. O que \u00e9 diagrama de atividades UML ?. Lucidchart. Dispon\u00edvel em: https://www.lucidchart.com/pages/pt/o-que-e-diagrama-de-atividades-uml . Acesso em: 06 de mar\u00e7o de 2021. Versionamento Data Nome Detalhe Vers\u00e3o 06/03/2021 Gustavo Nogueira & Hugo Arag\u00e3o Adi\u00e7\u00e3o da estrutura da p\u00e1gina 0.1 06/03/2021 Gustavo Nogueira & Hugo Arag\u00e3o Adi\u00e7\u00e3o do diagrama filtrar estabelecimento 0.2 06/03/2021 Gustavo Nogueira & Hugo Arag\u00e3o Adi\u00e7\u00e3o do diagrama Geral 0.3 06/03/2021 Gustavo Nogueira & Hugo Arag\u00e3o Descri\u00e7\u00e3o dos diagramas e padroniza\u00e7\u00e3o do doc 0.4","title":"Diagrama de Atividade"},{"location":"Modelagem/diagrama_atividades/diagrama_de_atividades/#diagrama-de-atividades","text":"O diagrama de atividades \u00e9 um diagrama de comportamento UML que mostra o fluxo de controle ou fluxo de objetos com \u00eanfase na sequ\u00eancia e nas condi\u00e7\u00f5es do fluxo. Al\u00e9m disso, diagramas de atividade ajudam a unir as pessoas das \u00e1reas de neg\u00f3cios e de desenvolvimento de uma organiza\u00e7\u00e3o para entender o mesmo processo e comportamento. Diagramas de atividade oferecem uma s\u00e9rie de benef\u00edcios para os usu\u00e1rios. Considere criar um diagrama de atividade para: Demonstrar a l\u00f3gica de um algoritmo; Descrever as etapas realizadas em um caso de uso UML; Ilustrar um processo de neg\u00f3cio ou fluxo de trabalho entre usu\u00e1rios e o sistema; Simplificar e melhorar qualquer processo ao esclarecer casos de uso complicados; Modelar elementos de arquitetura de software, como m\u00e9todo, fun\u00e7\u00e3o e opera\u00e7\u00e3o. A partir do que foi definido como escopo do projeto e reuni\u00f5es com os membros da equipe, chemagos nos seguintes diagramas de atividades: Geral: representa as atividades da aplica\u00e7\u00e3o de um ponto de vista mais amplo. Filtrar: representa as atividades referentes a funcionalidade \"filtrar estabelecimentos\".","title":"Diagrama de Atividades"},{"location":"Modelagem/diagrama_atividades/diagrama_de_atividades/#geral","text":"Esse diagrama busca demonstrar o fluxo principal das atividades do usu\u00e1rio em intera\u00e7\u00e3o com a aplica\u00e7\u00e3o. No fluxo pricipal temos a a\u00e7\u00e3o de decis\u00e3o, onde o usu\u00e1rio pode escolher buscar no Feed de imagens por uma ideia nova ou executar uma busca completa (busca avan\u00e7ada), podendo assim rastrear exatamente o procedimento de est\u00e9tica desejado. A tarefa \u00e9 finalizada ap\u00f3s a visualiza\u00e7\u00e3o do estabelecimento e suas informa\u00e7\u00f5es principais, onde o usu\u00e1rio decide por finalizar a busca ou retornar \u00e0 escolha de filtros.","title":"Geral"},{"location":"Modelagem/diagrama_atividades/diagrama_de_atividades/#filtrar-estabelecimentos","text":"No filtro de estabelecimentos, temos aqui representada no diagrama uma vis\u00e3o ampliada da tarefa. Nesse caso mais espec\u00edfico, as a\u00e7\u00f5es s\u00e3o referentes \u00e0s consequ\u00eancias de cada decis\u00e3o de busca feita pelo usu\u00e1rio. A tarefa \u00e9 finalizada quando as op\u00e7\u00f5es de filtro desejadas s\u00e3o selecionadas e o usu\u00e1rio clica no bot\u00e3o de \"executar a\u00e7\u00e3o\", no caso \"Filtrar\".","title":"Filtrar Estabelecimentos"},{"location":"Modelagem/diagrama_atividades/diagrama_de_atividades/#referencias","text":"Activity Diagrams. uml-diagrams.org. Dispon\u00edvel em: https://www.uml-diagrams.org/activity-diagrams.html . Acesso em: 06 de mar\u00e7o de 2021. O que \u00e9 diagrama de atividades UML ?. Lucidchart. Dispon\u00edvel em: https://www.lucidchart.com/pages/pt/o-que-e-diagrama-de-atividades-uml . Acesso em: 06 de mar\u00e7o de 2021.","title":"Refer\u00eancias"},{"location":"Modelagem/diagrama_atividades/diagrama_de_atividades/#versionamento","text":"Data Nome Detalhe Vers\u00e3o 06/03/2021 Gustavo Nogueira & Hugo Arag\u00e3o Adi\u00e7\u00e3o da estrutura da p\u00e1gina 0.1 06/03/2021 Gustavo Nogueira & Hugo Arag\u00e3o Adi\u00e7\u00e3o do diagrama filtrar estabelecimento 0.2 06/03/2021 Gustavo Nogueira & Hugo Arag\u00e3o Adi\u00e7\u00e3o do diagrama Geral 0.3 06/03/2021 Gustavo Nogueira & Hugo Arag\u00e3o Descri\u00e7\u00e3o dos diagramas e padroniza\u00e7\u00e3o do doc 0.4","title":"Versionamento"},{"location":"Modelagem/diagrama_classes/diagrama_de_classes/","text":"Diagrama de Classes Introdu\u00e7\u00e3o O diagrama de classes tem como objetivo representar a estrutura e os relacionamentos entre as classes envolvidas no desenvolvimento de um projeto orientado a objetos. Metodologia Foram feitas reuni\u00f5es com a equipe para discutir e esclarecer quais ser\u00e3o as classes e seus respectivos relacionamentos que implementaremos no projeto. Diagrama Refer\u00eancias Orienta\u00e7\u00f5es b\u00e1sicas na elabora\u00e7\u00e3o de um diagrama de classes. Dispon\u00edvel em: https://www.devmedia.com.br/orientacoes-basicas-na-elaboracao-de-um-diagrama-de-classes/37224 . Acesso em: 03 de mar. de 2021 Versionamento Vers\u00e3o Data Coment\u00e1rios Autor(es) 0.1 07/03/2021 Adi\u00e7\u00e3o do Diagrama de Classes Todos","title":"Diagrama de Classes"},{"location":"Modelagem/diagrama_classes/diagrama_de_classes/#diagrama-de-classes","text":"","title":"Diagrama de Classes"},{"location":"Modelagem/diagrama_classes/diagrama_de_classes/#introducao","text":"O diagrama de classes tem como objetivo representar a estrutura e os relacionamentos entre as classes envolvidas no desenvolvimento de um projeto orientado a objetos.","title":"Introdu\u00e7\u00e3o"},{"location":"Modelagem/diagrama_classes/diagrama_de_classes/#metodologia","text":"Foram feitas reuni\u00f5es com a equipe para discutir e esclarecer quais ser\u00e3o as classes e seus respectivos relacionamentos que implementaremos no projeto.","title":"Metodologia"},{"location":"Modelagem/diagrama_classes/diagrama_de_classes/#diagrama","text":"","title":"Diagrama"},{"location":"Modelagem/diagrama_classes/diagrama_de_classes/#referencias","text":"Orienta\u00e7\u00f5es b\u00e1sicas na elabora\u00e7\u00e3o de um diagrama de classes. Dispon\u00edvel em: https://www.devmedia.com.br/orientacoes-basicas-na-elaboracao-de-um-diagrama-de-classes/37224 . Acesso em: 03 de mar. de 2021","title":"Refer\u00eancias"},{"location":"Modelagem/diagrama_classes/diagrama_de_classes/#versionamento","text":"Vers\u00e3o Data Coment\u00e1rios Autor(es) 0.1 07/03/2021 Adi\u00e7\u00e3o do Diagrama de Classes Todos","title":"Versionamento"},{"location":"Modelagem/diagrama_componentes/diagrama_componentes/","text":"Diagrama de Componentes Sobre O diagrama de componentes descreve os componentes de software e suas depend\u00eancias entre si, representando a estrutura do c\u00f3digo gerado [1]. O diagrama apresenta componentes, interfaces fornecidas e requeridas, portas, e relacionamentos entre eles [2]. Componentes em UML podem representar: Componentes l\u00f3gicos (como componentes de neg\u00f3cio, componentes de processo) e Componentes f\u00edsicos (como componentes .NET, componentes Java, etc) junto com os artefatos que os implementam e os n\u00f3s aos quais s\u00e3o instalados e executados. Diagrama de Componentes V3 Diagrama de Componentes V2 Diagrama de Componentes V1 Refer\u00eancias [1] Linguagem de Modelagem Unificada Em Portugu\u00eas. Dispon\u00edvel no material disponibilizado no moodle da disciplina. [2] UML Component Diagrams. Dispon\u00edvel em https://www.uml-diagrams.org/component-diagrams.html Versionamento Vers\u00e3o Data Descri\u00e7\u00e3o Autor 0.1 28/02/2021 Adi\u00e7\u00e3o da vers\u00e3o 1 do diagrama de componentes Gustavo Nogueira e Wagner Martins 0.2 01/03/2021 Adi\u00e7\u00e3o da vers\u00e3o 2 do diagrama de componentes Gustavo Nogueira e Wagner Martins 0.3 01/03/2021 Adi\u00e7\u00e3o de informa\u00e7\u00f5es sobre o diagrama de componentes Gustavo Nogueira e Wagner Martins 0.4 08/03/2021 Adi\u00e7\u00e3o da vers\u00e3o 3 do diagrama de componentes Gustavo Nogueira e Wagner Martins","title":"Digrama de Componentes"},{"location":"Modelagem/diagrama_componentes/diagrama_componentes/#diagrama-de-componentes","text":"","title":"Diagrama de Componentes"},{"location":"Modelagem/diagrama_componentes/diagrama_componentes/#sobre","text":"O diagrama de componentes descreve os componentes de software e suas depend\u00eancias entre si, representando a estrutura do c\u00f3digo gerado [1]. O diagrama apresenta componentes, interfaces fornecidas e requeridas, portas, e relacionamentos entre eles [2]. Componentes em UML podem representar: Componentes l\u00f3gicos (como componentes de neg\u00f3cio, componentes de processo) e Componentes f\u00edsicos (como componentes .NET, componentes Java, etc) junto com os artefatos que os implementam e os n\u00f3s aos quais s\u00e3o instalados e executados.","title":"Sobre"},{"location":"Modelagem/diagrama_componentes/diagrama_componentes/#diagrama-de-componentes-v3","text":"","title":"Diagrama de Componentes V3"},{"location":"Modelagem/diagrama_componentes/diagrama_componentes/#diagrama-de-componentes-v2","text":"","title":"Diagrama de Componentes V2"},{"location":"Modelagem/diagrama_componentes/diagrama_componentes/#diagrama-de-componentes-v1","text":"","title":"Diagrama de Componentes V1"},{"location":"Modelagem/diagrama_componentes/diagrama_componentes/#referencias","text":"[1] Linguagem de Modelagem Unificada Em Portugu\u00eas. Dispon\u00edvel no material disponibilizado no moodle da disciplina. [2] UML Component Diagrams. Dispon\u00edvel em https://www.uml-diagrams.org/component-diagrams.html","title":"Refer\u00eancias"},{"location":"Modelagem/diagrama_componentes/diagrama_componentes/#versionamento","text":"Vers\u00e3o Data Descri\u00e7\u00e3o Autor 0.1 28/02/2021 Adi\u00e7\u00e3o da vers\u00e3o 1 do diagrama de componentes Gustavo Nogueira e Wagner Martins 0.2 01/03/2021 Adi\u00e7\u00e3o da vers\u00e3o 2 do diagrama de componentes Gustavo Nogueira e Wagner Martins 0.3 01/03/2021 Adi\u00e7\u00e3o de informa\u00e7\u00f5es sobre o diagrama de componentes Gustavo Nogueira e Wagner Martins 0.4 08/03/2021 Adi\u00e7\u00e3o da vers\u00e3o 3 do diagrama de componentes Gustavo Nogueira e Wagner Martins","title":"Versionamento"},{"location":"Modelagem/diagrama_sequencia/Diagrama%20de%20sequ%C3%AAncia/","text":"Diagrama de Sequ\u00eancia Um diagrama de sequ\u00eancia mostra a colabora\u00e7\u00e3o din\u00e2mica entre v\u00e1rios objetos de um sistema. O mais importante aspecto deste diagrama \u00e9 que a partir dele percebe-se a sequ\u00eancia de mensagens enviadas entre os objetos [1]. O diagrama \u00e9 representado em dois eixos. O eixo vertical representa o tempo, sendo lido de cima para baixo. O eixo horizontal representa os objetos dispon\u00edveis na intera\u00e7\u00e3o, usualmente representados como ret\u00e2ngulos(tamb\u00e9m podem ser usadas outras representa\u00e7\u00f5es, como um usu\u00e1rio por exemplo). Cada um desses objetos apresentam alguns elementos, sendo eles: Linha de vida: Uma linha pontilhada na vertical abaixo de cada objeto. Execu\u00e7\u00e3o: Ret\u00e2ngulos sobre as linhas de vida que representam a execu\u00e7\u00e3o daquele dado objeto. Mensagens: Representadas por setas e definem as intera\u00e7\u00f5es entre os objetos, como chamadas de fun\u00e7\u00e3o, cria\u00e7\u00e3o ou destrui\u00e7\u00e3o de objetos. Podem ser s\u00edncronas ou ass\u00edncronas. O diagrama tamb\u00e9m aceita o uso de estruturas chamadas de fragmentos de intera\u00e7\u00e3o [2], que podem representar estruturas como condicinais, loops, ou mesmo refer\u00eancias para outros diagramas de sequ\u00eancia. Feed de estabelecimentos: Informa\u00e7\u00f5es de estabelecimento: Refer\u00eancias [1] Linguagem de Modelagem Unificada Em Portugu\u00eas. Dispon\u00edvel no material disponibilizado no moodle da disciplina. [2] UML Sequence Diagrams. Dispon\u00edvel em https://www.uml-diagrams.org/sequence-diagrams.html Versionamento Data Nome Detalhe Vers\u00e3o 02/03/2021 Jo\u00e3o Pedro Silva de Carvalho e Wagner Martins Diagrama para feed de estabelecimentos 0.1 02/03/2021 Jo\u00e3o Pedro Silva de Carvalho e Wagner Martins Diagrama das informa\u00e7\u00f5es de estabelecimento 0.2 07/03/2021 Jo\u00e3o Pedro Silva de Carvalho e Wagner Martins Adi\u00e7\u00e3o de informa\u00e7\u00f5es sobre o diagrama 1.0","title":"Diagrama de Sequ\u00eancia"},{"location":"Modelagem/diagrama_sequencia/Diagrama%20de%20sequ%C3%AAncia/#diagrama-de-sequencia","text":"Um diagrama de sequ\u00eancia mostra a colabora\u00e7\u00e3o din\u00e2mica entre v\u00e1rios objetos de um sistema. O mais importante aspecto deste diagrama \u00e9 que a partir dele percebe-se a sequ\u00eancia de mensagens enviadas entre os objetos [1]. O diagrama \u00e9 representado em dois eixos. O eixo vertical representa o tempo, sendo lido de cima para baixo. O eixo horizontal representa os objetos dispon\u00edveis na intera\u00e7\u00e3o, usualmente representados como ret\u00e2ngulos(tamb\u00e9m podem ser usadas outras representa\u00e7\u00f5es, como um usu\u00e1rio por exemplo). Cada um desses objetos apresentam alguns elementos, sendo eles: Linha de vida: Uma linha pontilhada na vertical abaixo de cada objeto. Execu\u00e7\u00e3o: Ret\u00e2ngulos sobre as linhas de vida que representam a execu\u00e7\u00e3o daquele dado objeto. Mensagens: Representadas por setas e definem as intera\u00e7\u00f5es entre os objetos, como chamadas de fun\u00e7\u00e3o, cria\u00e7\u00e3o ou destrui\u00e7\u00e3o de objetos. Podem ser s\u00edncronas ou ass\u00edncronas. O diagrama tamb\u00e9m aceita o uso de estruturas chamadas de fragmentos de intera\u00e7\u00e3o [2], que podem representar estruturas como condicinais, loops, ou mesmo refer\u00eancias para outros diagramas de sequ\u00eancia.","title":"Diagrama de Sequ\u00eancia"},{"location":"Modelagem/diagrama_sequencia/Diagrama%20de%20sequ%C3%AAncia/#feed-de-estabelecimentos","text":"","title":"Feed de estabelecimentos:"},{"location":"Modelagem/diagrama_sequencia/Diagrama%20de%20sequ%C3%AAncia/#informacoes-de-estabelecimento","text":"","title":"Informa\u00e7\u00f5es de estabelecimento:"},{"location":"Modelagem/diagrama_sequencia/Diagrama%20de%20sequ%C3%AAncia/#referencias","text":"[1] Linguagem de Modelagem Unificada Em Portugu\u00eas. Dispon\u00edvel no material disponibilizado no moodle da disciplina. [2] UML Sequence Diagrams. Dispon\u00edvel em https://www.uml-diagrams.org/sequence-diagrams.html","title":"Refer\u00eancias"},{"location":"Modelagem/diagrama_sequencia/Diagrama%20de%20sequ%C3%AAncia/#versionamento","text":"Data Nome Detalhe Vers\u00e3o 02/03/2021 Jo\u00e3o Pedro Silva de Carvalho e Wagner Martins Diagrama para feed de estabelecimentos 0.1 02/03/2021 Jo\u00e3o Pedro Silva de Carvalho e Wagner Martins Diagrama das informa\u00e7\u00f5es de estabelecimento 0.2 07/03/2021 Jo\u00e3o Pedro Silva de Carvalho e Wagner Martins Adi\u00e7\u00e3o de informa\u00e7\u00f5es sobre o diagrama 1.0","title":"Versionamento"},{"location":"Modelagem/sprints/Pre_projeto/","text":"Sprints Per\u00edodo pr\u00e9-projeto Esse per\u00edodo engloba todo o tempo ap\u00f3s o in\u00edcio da mat\u00e9ria e forma\u00e7\u00e3o do grupo e antes da primeira sprint. Essas reuni\u00f5es serviram principalmente para alinhar a ideia do projeto, al\u00e9m de definir os pap\u00e9is de cada integrante. Reuni\u00e3o 10/02 Essa foi a primeira reuni\u00e3o da equipe e definiu muitos t\u00f3picos dentre eles: O projeto a ser desenvolvido de uma vis\u00e3o geral, sem muitos detalhes. O scrum master da equipe que foi decido em comum acordo com a equipe foi o Jo\u00e3o Pedro Foi decido a metodologia de trabalho da equipe, tamb\u00e9m de forma geral. Foi escolhido um m\u00e9todo de mapa de calor para definir o hor\u00e1rio ideal da planning. As reuni\u00f5es semanais marcadas para toda ter\u00e7a-feira \u00e0s 7am Versionamento Data Nome Detalhes Vers\u00e3o 01/03/2021 Jo\u00e3o Pedro Silva de Carvalho In\u00edcio do documento 0.1 09/03/2021 N\u00edcalo Ribeiro Revis\u00e3o e formatacao 1.0","title":"Sprints"},{"location":"Modelagem/sprints/Pre_projeto/#sprints","text":"","title":"Sprints"},{"location":"Modelagem/sprints/Pre_projeto/#periodo-pre-projeto","text":"Esse per\u00edodo engloba todo o tempo ap\u00f3s o in\u00edcio da mat\u00e9ria e forma\u00e7\u00e3o do grupo e antes da primeira sprint. Essas reuni\u00f5es serviram principalmente para alinhar a ideia do projeto, al\u00e9m de definir os pap\u00e9is de cada integrante.","title":"Per\u00edodo pr\u00e9-projeto"},{"location":"Modelagem/sprints/Pre_projeto/#reuniao-1002","text":"Essa foi a primeira reuni\u00e3o da equipe e definiu muitos t\u00f3picos dentre eles: O projeto a ser desenvolvido de uma vis\u00e3o geral, sem muitos detalhes. O scrum master da equipe que foi decido em comum acordo com a equipe foi o Jo\u00e3o Pedro Foi decido a metodologia de trabalho da equipe, tamb\u00e9m de forma geral. Foi escolhido um m\u00e9todo de mapa de calor para definir o hor\u00e1rio ideal da planning. As reuni\u00f5es semanais marcadas para toda ter\u00e7a-feira \u00e0s 7am","title":"Reuni\u00e3o 10/02"},{"location":"Modelagem/sprints/Pre_projeto/#versionamento","text":"Data Nome Detalhes Vers\u00e3o 01/03/2021 Jo\u00e3o Pedro Silva de Carvalho In\u00edcio do documento 0.1 09/03/2021 N\u00edcalo Ribeiro Revis\u00e3o e formatacao 1.0","title":"Versionamento"},{"location":"Modelagem/sprints/Sprint0/","text":"Sprint 0 Planning (Excepcionalmente segunda 15/02) Essa foi a primeira planning do projeto e discutiu-se al\u00e9m disso: Debate para os primeiros passos do projeto. Dia e hora da planning oficialmente decididos: Ter\u00e7a-feira \u00e0s 7 horas da manh\u00e3 Foi decidido oficialmente que as dailies seriam ass\u00edncronas. Dado que n\u00e3o havia tempo h\u00e1bil para a cria\u00e7\u00e3o do documento de pol\u00edticas de contribui\u00e7\u00e3o, ent\u00e3o decidiu-se as seguintes pol\u00edticas b\u00e1sicas: Commit com n\u00famero da issue e descri\u00e7\u00e3o breve Branch com n\u00famero da issue e nome pr\u00f3ximo da issue. L\u00edngua usada: Portugu\u00eas. Issues com descri\u00e7\u00e3o e um checkbox com a lista de tarefas a serem cumpridas. Foi decidido que ser\u00e1 usado um form do google para obten\u00e7\u00e3o dos estabelecimentos para fornecimento do banco de dados do sistema Atividade Pessoa atribuida 5W2H Hugo Arag\u00e3o Rich Picture Jo\u00e3o Luis Baraky Diagrama de causa e efeito Gustavo Nogueira Mapa mental Jo\u00e3o Pedro Silva Estimativas Wagner Martins Gloss\u00e1rio e l\u00e9xico N\u00edcalo Ribeiro Documento de Metodologia Jo\u00e3o Pedro Silva Modelagem BPMN Gustavo Nogueira e Renato Britto Prot\u00f3tipo de papel Renato Britto Configurar o Github Pages Hugo Arag\u00e3o e N\u00edcalo Ribeiro Gerar esbo\u00e7o Todos da equipe Review Todas as issues foram entregues com excess\u00e3o de alguns erros de portugu\u00eas que ocorerram em alguns documentos. Na reuni\u00e3o de review, os membros da equipe colocaram alguns pontos de destaque da sprint e votaram os mais relevantes: Elogios Frase Pontua\u00e7\u00e3o Deu tempo :D 0 O gestor foi top! O time parece estar comprometido com o produto. 0 Cr\u00edticas Frase Pontua\u00e7\u00e3o Tempo 1 Muito trabalho para uma mat\u00e9ria, como podemos diminuir essa carga? 1 Demora pra decidir e separar as tarefas na primeira sprint 0 Organiza\u00e7\u00e3o individual 0 Sugest\u00f5es Frase Pontua\u00e7\u00e3o Aumentar o escopo 1 Observar a qualidade de entrega e auxiliar o gestor (\u00e9 muita coisa pra uma pessoa s\u00f3) 1 Melhorar pareamento 0 Iniciar as tarefas mais cedo 0 Versionamento Data Nome Detalhes Vers\u00e3o 01/03/2021 Jo\u00e3o Pedro Silva de Carvalho In\u00edcio do documento 0.1 03/03/2021 Jo\u00e3o Pedro Silva de Carvalho Adicionando reuni\u00e3o 02/03 0.2 09/03/2021 N\u00edcalo Ribeiro Revis\u00e3o e formatacao 1.0","title":"Sprint0"},{"location":"Modelagem/sprints/Sprint0/#sprint-0","text":"","title":"Sprint 0"},{"location":"Modelagem/sprints/Sprint0/#planning-excepcionalmente-segunda-1502","text":"Essa foi a primeira planning do projeto e discutiu-se al\u00e9m disso: Debate para os primeiros passos do projeto. Dia e hora da planning oficialmente decididos: Ter\u00e7a-feira \u00e0s 7 horas da manh\u00e3 Foi decidido oficialmente que as dailies seriam ass\u00edncronas. Dado que n\u00e3o havia tempo h\u00e1bil para a cria\u00e7\u00e3o do documento de pol\u00edticas de contribui\u00e7\u00e3o, ent\u00e3o decidiu-se as seguintes pol\u00edticas b\u00e1sicas: Commit com n\u00famero da issue e descri\u00e7\u00e3o breve Branch com n\u00famero da issue e nome pr\u00f3ximo da issue. L\u00edngua usada: Portugu\u00eas. Issues com descri\u00e7\u00e3o e um checkbox com a lista de tarefas a serem cumpridas. Foi decidido que ser\u00e1 usado um form do google para obten\u00e7\u00e3o dos estabelecimentos para fornecimento do banco de dados do sistema Atividade Pessoa atribuida 5W2H Hugo Arag\u00e3o Rich Picture Jo\u00e3o Luis Baraky Diagrama de causa e efeito Gustavo Nogueira Mapa mental Jo\u00e3o Pedro Silva Estimativas Wagner Martins Gloss\u00e1rio e l\u00e9xico N\u00edcalo Ribeiro Documento de Metodologia Jo\u00e3o Pedro Silva Modelagem BPMN Gustavo Nogueira e Renato Britto Prot\u00f3tipo de papel Renato Britto Configurar o Github Pages Hugo Arag\u00e3o e N\u00edcalo Ribeiro Gerar esbo\u00e7o Todos da equipe","title":"Planning (Excepcionalmente segunda 15/02)"},{"location":"Modelagem/sprints/Sprint0/#review","text":"Todas as issues foram entregues com excess\u00e3o de alguns erros de portugu\u00eas que ocorerram em alguns documentos. Na reuni\u00e3o de review, os membros da equipe colocaram alguns pontos de destaque da sprint e votaram os mais relevantes:","title":"Review"},{"location":"Modelagem/sprints/Sprint0/#elogios","text":"Frase Pontua\u00e7\u00e3o Deu tempo :D 0 O gestor foi top! O time parece estar comprometido com o produto. 0","title":"Elogios"},{"location":"Modelagem/sprints/Sprint0/#criticas","text":"Frase Pontua\u00e7\u00e3o Tempo 1 Muito trabalho para uma mat\u00e9ria, como podemos diminuir essa carga? 1 Demora pra decidir e separar as tarefas na primeira sprint 0 Organiza\u00e7\u00e3o individual 0","title":"Cr\u00edticas"},{"location":"Modelagem/sprints/Sprint0/#sugestoes","text":"Frase Pontua\u00e7\u00e3o Aumentar o escopo 1 Observar a qualidade de entrega e auxiliar o gestor (\u00e9 muita coisa pra uma pessoa s\u00f3) 1 Melhorar pareamento 0 Iniciar as tarefas mais cedo 0","title":"Sugest\u00f5es"},{"location":"Modelagem/sprints/Sprint0/#versionamento","text":"Data Nome Detalhes Vers\u00e3o 01/03/2021 Jo\u00e3o Pedro Silva de Carvalho In\u00edcio do documento 0.1 03/03/2021 Jo\u00e3o Pedro Silva de Carvalho Adicionando reuni\u00e3o 02/03 0.2 09/03/2021 N\u00edcalo Ribeiro Revis\u00e3o e formatacao 1.0","title":"Versionamento"},{"location":"Modelagem/sprints/Sprint1/","text":"Sprint 1 Planning Nesse planejamento distribu\u00edmos as tarefas de acordo com a entrega da etapa de Modelagem, dentre os t\u00f3picos abordados nas reuni\u00f5es est\u00e3o: Leitura e interpreta\u00e7\u00e3o dos documentos a serem produzidos Distribui\u00e7\u00e3o de pontos de dificuldade de execu\u00e7\u00e3o usando a ferramenta PlanitPoker O resultado do levantamnento dos principais documentos a serem entregues: Diagramas est\u00e1ticos Diagramas din\u00e2micos Modelagem \u00e1gil Extras como: Guia de Estilo Pol\u00edticas de Contribui\u00e7\u00e3o Relacionamento entre documentos e seus criadores Documento Pontua\u00e7\u00e3o Participantes Diagrama de Atividades 7 Hugo Arag\u00e3o / Gustavo Nogueira Diagrama de Componentes 10 Gustavo Nogueira / Wagner Martins Diagrama de Classe 13 Renato Britto / Jo\u00e3o Baraky Backlog do Produto 8 Jo\u00e3o Pedro / Nicalo Ribeiro Documentar Sprints 4 Hugo Arag\u00e3o / Jo\u00e3o Pedro Refatorar Documentos da Primeira Entrega 4 Jo\u00e3o Baraky / Nicalo Ribeiro Doc de Pol\u00edtica de Contrib 4 Renato Britto / Wagner Martins Obs: Os documentos produzidos s\u00e3o discutidos em reuni\u00e3o e revisados por no m\u00ednimo 2 integrantes no momento de avaliar o Pull Request em nosso reposit\u00f3rio. Review: A equipe teve dificuldade em produzir os documentos por incompatibilidade de hor\u00e1rios para pareamento, e principalmente por conta das falhas na elicita\u00e7\u00e3o dos requisitos e na documenta\u00e7\u00e3o dos mesmos. Foi sugerida uma reuni\u00e3o extraordin\u00e1ria para discutir a melhora na comunica\u00e7\u00e3o interna da equipe e garantir a revis\u00e3o e alinhamento das documenta\u00e7\u00f5es com as ideias. Versionamento Data Nome Detalhes Vers\u00e3o 01/03/2021 Jo\u00e3o Pedro Silva de Carvalho In\u00edcio do documento 0.1 01/03/2021 Hugo Arag\u00e3o Documenta\u00e7\u00e3o da Sprint 1 0.2 09/03/2021 N\u00edcalo Ribeiro Revis\u00e3o e formatacao 1.0","title":"Sprint1"},{"location":"Modelagem/sprints/Sprint1/#sprint-1","text":"","title":"Sprint 1"},{"location":"Modelagem/sprints/Sprint1/#planning","text":"Nesse planejamento distribu\u00edmos as tarefas de acordo com a entrega da etapa de Modelagem, dentre os t\u00f3picos abordados nas reuni\u00f5es est\u00e3o: Leitura e interpreta\u00e7\u00e3o dos documentos a serem produzidos Distribui\u00e7\u00e3o de pontos de dificuldade de execu\u00e7\u00e3o usando a ferramenta PlanitPoker O resultado do levantamnento dos principais documentos a serem entregues: Diagramas est\u00e1ticos Diagramas din\u00e2micos Modelagem \u00e1gil Extras como: Guia de Estilo Pol\u00edticas de Contribui\u00e7\u00e3o","title":"Planning"},{"location":"Modelagem/sprints/Sprint1/#relacionamento-entre-documentos-e-seus-criadores","text":"Documento Pontua\u00e7\u00e3o Participantes Diagrama de Atividades 7 Hugo Arag\u00e3o / Gustavo Nogueira Diagrama de Componentes 10 Gustavo Nogueira / Wagner Martins Diagrama de Classe 13 Renato Britto / Jo\u00e3o Baraky Backlog do Produto 8 Jo\u00e3o Pedro / Nicalo Ribeiro Documentar Sprints 4 Hugo Arag\u00e3o / Jo\u00e3o Pedro Refatorar Documentos da Primeira Entrega 4 Jo\u00e3o Baraky / Nicalo Ribeiro Doc de Pol\u00edtica de Contrib 4 Renato Britto / Wagner Martins Obs: Os documentos produzidos s\u00e3o discutidos em reuni\u00e3o e revisados por no m\u00ednimo 2 integrantes no momento de avaliar o Pull Request em nosso reposit\u00f3rio.","title":"Relacionamento entre documentos e seus criadores"},{"location":"Modelagem/sprints/Sprint1/#review","text":"A equipe teve dificuldade em produzir os documentos por incompatibilidade de hor\u00e1rios para pareamento, e principalmente por conta das falhas na elicita\u00e7\u00e3o dos requisitos e na documenta\u00e7\u00e3o dos mesmos. Foi sugerida uma reuni\u00e3o extraordin\u00e1ria para discutir a melhora na comunica\u00e7\u00e3o interna da equipe e garantir a revis\u00e3o e alinhamento das documenta\u00e7\u00f5es com as ideias.","title":"Review:"},{"location":"Modelagem/sprints/Sprint1/#versionamento","text":"Data Nome Detalhes Vers\u00e3o 01/03/2021 Jo\u00e3o Pedro Silva de Carvalho In\u00edcio do documento 0.1 01/03/2021 Hugo Arag\u00e3o Documenta\u00e7\u00e3o da Sprint 1 0.2 09/03/2021 N\u00edcalo Ribeiro Revis\u00e3o e formatacao 1.0","title":"Versionamento"},{"location":"Modelagem/sprints/Sprint2/","text":"Sprint 2: Planning (02/03): Como nenhuma issue foi entregue da sprint passada, ent\u00e3o todas foram deixadas como d\u00edvidas t\u00e9cnicas e foi adicionada apenas mais uma issue para a entrega da disciplina, e outras duas issues foram adiadas para a sprint 3, que foram o Guia de estilo e a Configura\u00e7\u00e3o do ambiente . Relacionamento entre documentos e seus criadores Documento Pontua\u00e7\u00e3o Participantes Diagrama de sequ\u00eancia 8 Jo\u00e3o Pedro S. de Carvalho / Wagner Martins Documento de Requisitos n/a A Equipe Revis\u00e3o final de documentos n/a A Equipe Obs: Os documentos produzidos s\u00e3o discutidos em reuni\u00e3o e revisados por no m\u00ednimo 2 integrantes no momento de avaliar o Pull Request em nosso reposit\u00f3rio. Execu\u00e7\u00e3o da sprint Reuni\u00e3o 04/03 Reuni\u00e3o s\u00edncrona organizada para discutir as incoer\u00eancias do projeto relacionadas os documentos produzidos e o escopo do projeto: A equipe apresentou dificuldades com a produ\u00e7\u00e3o dos diagramas devido \u00e0s falhas na elicita\u00e7\u00e3o dos requisitos na sprint passada As d\u00edvidas t\u00e9cnicas foram observadas e trazidas para essa sprint Observamos o feedback da professora notanto os pontos a serem corrigidos Para garantir maior clareza do que de fato o produto deve ser, a equipe solicitou o preenchimento do cargo de Product Owner, que no caso ser\u00e1 o integrante Hugo Arag\u00e3o Ap\u00f3s conversarmos sobre a ideia decidimos fortalecer a base te\u00f3rica do produto, usando uma nova t\u00e9cnica de elicita\u00e7\u00e3o, agora aferindo as necessidades do cliente fict\u00edcio, no caso o nosso PO A equipe revisou juntos as teorias por tr\u00e1s dos diagramas solicitados na etapa de Modelagem e apontamos as corre\u00e7\u00f5es a serem feitas para essa entrega Foi acordado que a equipe se empenharia mais em construir um quadro de requisitos mais s\u00f3lidos e claros para que facilitasse o desenvolvimento dos pr\u00f3ximos artefatos e do c\u00f3digo. Reuni\u00e3o 08/03 Revis\u00e3o e valida\u00e7\u00e3o dos requisitos elicitados com o Scrum Master e o Product Owner. Revis\u00e3o geral da documenta\u00e7\u00e3o de entrega Grava\u00e7\u00e3o das apresenta\u00e7\u00f5es (Dividida entre os integrantes de modo que todos participem de no m\u00ednimo uma explica\u00e7\u00e3o) Entrega do ponto de controle (Modelagem) Review (09/03): Ap\u00f3s a dificuldade anterior que o grupo teve com a produ\u00e7\u00e3o dos documentos e diagramas, a equipe decidiu dar um passo atr\u00e1s e revisar a Base, de forma que o produto se tornasse mais tang\u00edvel e com descri\u00e7\u00f5es mais claras do que pretende ser. A opini\u00e3o geral foi de que requisitos s\u00f3lidos facilitam muito qualquer tipo de cria\u00e7\u00e3o posterior sobre o produto. A equipe tamb\u00e9m aprendeu os benef\u00edcios de eleger um Product Owner, que faz o papel de garantir que qualquer nova ideia e constru\u00e7\u00e3o dentro do porjeto esteja de acordo com a premissa base do produto, mantendo assim uma identidade s\u00f3lida do projeto. Quadro de ideias: Os integrantes colocaram suas ideias anonimamente e a equipe discutiu com todos, em ordem dos que tinham mais votos para os que tinham menos votos. Elogios: Elogios Votos Geral esfor\u00e7ou demais 2 Evolu\u00e7\u00e3o n\u00edtida comparado com a entrega passada. 2 Empenho da equipe em corrigir os problemas antigos 1 Cr\u00edticas: Cr\u00edtica Votos Foi na adrenalina...denovo... 3 Erramos a m\u00e3o na Sprint, uma foi uma de boa, outra tensa 2 Falha na comunica\u00e7\u00e3o de impasses no desenvolvimento 1 Sugest\u00f5es: Sugest\u00e3o Votos Melhorar a comunica\u00e7\u00e3o e manter o compromisso com a qualidade do produto 2 Melhorar as revis\u00f5es dos PRs 0 Versionamento Data Nome Detalhes Vers\u00e3o 01/03/2021 Jo\u00e3o Pedro Silva de Carvalho In\u00edcio do documento 0.1 03/03/2021 Jo\u00e3o Pedro Silva de Carvalho Adicionando reuni\u00e3o 02/03 0.2 07/03/2021 Hugo Arag\u00e3o Adicionando Reuni\u00e3o do dia 04/03 0.3 08/03/2021 Hugo Arag\u00e3o Adicionando Reuni\u00e3o do dia 08/03 e Fechamentos das Sprints 0.4 09/03/2021 N\u00edcalo Ribeiro Revis\u00e3o e formatacao 0.5 16/03/2021 Jo\u00e3o Pedro Carvalho Adi\u00e7\u00e3o da sprint review e quadro de ideias 1.0","title":"Sprint 2:"},{"location":"Modelagem/sprints/Sprint2/#sprint-2","text":"","title":"Sprint 2:"},{"location":"Modelagem/sprints/Sprint2/#planning-0203","text":"Como nenhuma issue foi entregue da sprint passada, ent\u00e3o todas foram deixadas como d\u00edvidas t\u00e9cnicas e foi adicionada apenas mais uma issue para a entrega da disciplina, e outras duas issues foram adiadas para a sprint 3, que foram o Guia de estilo e a Configura\u00e7\u00e3o do ambiente .","title":"Planning (02/03):"},{"location":"Modelagem/sprints/Sprint2/#relacionamento-entre-documentos-e-seus-criadores","text":"Documento Pontua\u00e7\u00e3o Participantes Diagrama de sequ\u00eancia 8 Jo\u00e3o Pedro S. de Carvalho / Wagner Martins Documento de Requisitos n/a A Equipe Revis\u00e3o final de documentos n/a A Equipe Obs: Os documentos produzidos s\u00e3o discutidos em reuni\u00e3o e revisados por no m\u00ednimo 2 integrantes no momento de avaliar o Pull Request em nosso reposit\u00f3rio.","title":"Relacionamento entre documentos e seus criadores"},{"location":"Modelagem/sprints/Sprint2/#execucao-da-sprint","text":"","title":"Execu\u00e7\u00e3o da sprint"},{"location":"Modelagem/sprints/Sprint2/#reuniao-0403","text":"Reuni\u00e3o s\u00edncrona organizada para discutir as incoer\u00eancias do projeto relacionadas os documentos produzidos e o escopo do projeto: A equipe apresentou dificuldades com a produ\u00e7\u00e3o dos diagramas devido \u00e0s falhas na elicita\u00e7\u00e3o dos requisitos na sprint passada As d\u00edvidas t\u00e9cnicas foram observadas e trazidas para essa sprint Observamos o feedback da professora notanto os pontos a serem corrigidos Para garantir maior clareza do que de fato o produto deve ser, a equipe solicitou o preenchimento do cargo de Product Owner, que no caso ser\u00e1 o integrante Hugo Arag\u00e3o Ap\u00f3s conversarmos sobre a ideia decidimos fortalecer a base te\u00f3rica do produto, usando uma nova t\u00e9cnica de elicita\u00e7\u00e3o, agora aferindo as necessidades do cliente fict\u00edcio, no caso o nosso PO A equipe revisou juntos as teorias por tr\u00e1s dos diagramas solicitados na etapa de Modelagem e apontamos as corre\u00e7\u00f5es a serem feitas para essa entrega Foi acordado que a equipe se empenharia mais em construir um quadro de requisitos mais s\u00f3lidos e claros para que facilitasse o desenvolvimento dos pr\u00f3ximos artefatos e do c\u00f3digo.","title":"Reuni\u00e3o 04/03"},{"location":"Modelagem/sprints/Sprint2/#reuniao-0803","text":"Revis\u00e3o e valida\u00e7\u00e3o dos requisitos elicitados com o Scrum Master e o Product Owner. Revis\u00e3o geral da documenta\u00e7\u00e3o de entrega Grava\u00e7\u00e3o das apresenta\u00e7\u00f5es (Dividida entre os integrantes de modo que todos participem de no m\u00ednimo uma explica\u00e7\u00e3o) Entrega do ponto de controle (Modelagem)","title":"Reuni\u00e3o 08/03"},{"location":"Modelagem/sprints/Sprint2/#review-0903","text":"Ap\u00f3s a dificuldade anterior que o grupo teve com a produ\u00e7\u00e3o dos documentos e diagramas, a equipe decidiu dar um passo atr\u00e1s e revisar a Base, de forma que o produto se tornasse mais tang\u00edvel e com descri\u00e7\u00f5es mais claras do que pretende ser. A opini\u00e3o geral foi de que requisitos s\u00f3lidos facilitam muito qualquer tipo de cria\u00e7\u00e3o posterior sobre o produto. A equipe tamb\u00e9m aprendeu os benef\u00edcios de eleger um Product Owner, que faz o papel de garantir que qualquer nova ideia e constru\u00e7\u00e3o dentro do porjeto esteja de acordo com a premissa base do produto, mantendo assim uma identidade s\u00f3lida do projeto.","title":"Review (09/03):"},{"location":"Modelagem/sprints/Sprint2/#quadro-de-ideias","text":"Os integrantes colocaram suas ideias anonimamente e a equipe discutiu com todos, em ordem dos que tinham mais votos para os que tinham menos votos.","title":"Quadro de ideias:"},{"location":"Modelagem/sprints/Sprint2/#elogios","text":"Elogios Votos Geral esfor\u00e7ou demais 2 Evolu\u00e7\u00e3o n\u00edtida comparado com a entrega passada. 2 Empenho da equipe em corrigir os problemas antigos 1","title":"Elogios:"},{"location":"Modelagem/sprints/Sprint2/#criticas","text":"Cr\u00edtica Votos Foi na adrenalina...denovo... 3 Erramos a m\u00e3o na Sprint, uma foi uma de boa, outra tensa 2 Falha na comunica\u00e7\u00e3o de impasses no desenvolvimento 1","title":"Cr\u00edticas:"},{"location":"Modelagem/sprints/Sprint2/#sugestoes","text":"Sugest\u00e3o Votos Melhorar a comunica\u00e7\u00e3o e manter o compromisso com a qualidade do produto 2 Melhorar as revis\u00f5es dos PRs 0","title":"Sugest\u00f5es:"},{"location":"Modelagem/sprints/Sprint2/#versionamento","text":"Data Nome Detalhes Vers\u00e3o 01/03/2021 Jo\u00e3o Pedro Silva de Carvalho In\u00edcio do documento 0.1 03/03/2021 Jo\u00e3o Pedro Silva de Carvalho Adicionando reuni\u00e3o 02/03 0.2 07/03/2021 Hugo Arag\u00e3o Adicionando Reuni\u00e3o do dia 04/03 0.3 08/03/2021 Hugo Arag\u00e3o Adicionando Reuni\u00e3o do dia 08/03 e Fechamentos das Sprints 0.4 09/03/2021 N\u00edcalo Ribeiro Revis\u00e3o e formatacao 0.5 16/03/2021 Jo\u00e3o Pedro Carvalho Adi\u00e7\u00e3o da sprint review e quadro de ideias 1.0","title":"Versionamento"},{"location":"Modelagem/sprints/Sprint3/","text":"Sprint 3 Planning Reuni\u00e3o 09/03 Dentro da reuni\u00e3o da planning foram verificados os pontos a serem desenvolvidos no projeto para essa entrega, das discuss\u00f5es principais tivemos: Cria\u00e7\u00e3o e distribui\u00e7\u00e3o das issues. Realiza\u00e7\u00e3o do Planning Poker das tarefas. A equipe optou pela colabora\u00e7\u00e3o de mais integrantes nas decis\u00f5es acerca do design do projeto. Relacionamento entre documentos e seus criadores Issue Pontua\u00e7\u00e3o Participantes Revisores Prot\u00f3tipo de Alta/Media/Baixa fidelidade 15 Hugo Arag\u00e3o / Gustavo Nogueira / N\u00edcalo Ribeiro Renato Britto / Jo\u00e3o Baraky / Jo\u00e3o Pedro Guia de Estilo 13 N\u00edcalo Ribeiro / Wagner Martins / Jo\u00e3o Baraky Jo\u00e3o Pedro / Gustavo Nogueira / Hugo Arag\u00e3o Configurar Ambiente 6 Renato Britto Nicalo Ribeiro Estilizar gh-pages 4 Wagner Martins / Gustavo Nogueira Hugo Arag\u00e3o / Renato Britto Configurar o Backlog 8 Jo\u00e3o Baraky / Jo\u00e3o Pedro Wagner Martins / Gustavo Nogueira Documentar Sprint 4 Hugo Arag\u00e3o / Jo\u00e3o Pedro Jo\u00e3o Baraky / Wagner Martins Review: Reuni\u00e3o 16/03 Nessa reuni\u00e3o discutimos o que foi produzido nas issues assim como: Resultado do Guia de Estilo Remodelagem do Backlog Diretrizes necess\u00e1rias para a pr\u00f3xima entrega Revis\u00e3o do novo prot\u00f3tipo de baixa fidedelidade de acordo com o escopo Escolha do tema do Gh-pages Ideias de aumento do escopo para produ\u00e7\u00e3o dos documentos relacionados \u00e0 teoria da disciplina Al\u00e9m disso, visto a necessidade de confirmar alguns t\u00f3picos da proxima entrega, foi adiada a entrega das issues para 17/03, quando come\u00e7ar\u00e1 a pr\u00f3xima sprint. Versionamento Data Nome Detalhes Vers\u00e3o 15/03/2021 Hugo Arag\u00e3o Cria\u00e7\u00e3o do documento e Reuni\u00e3o 09/03 0.1 15/03/2021 Hugo Arag\u00e3o Adiciona tabela de contribui\u00e7\u00e3o 0.2 15/03/2021 Jo\u00e3o Pedro Adiciona os revisores 0.3 16/03/2021 Hugo Arag\u00e3o Adiciona reuni\u00e3o 16/03 0.4 17/03/2021 Jo\u00e3o Pedro Revis\u00e3o 1.0","title":"Sprint 3"},{"location":"Modelagem/sprints/Sprint3/#sprint-3","text":"","title":"Sprint 3"},{"location":"Modelagem/sprints/Sprint3/#planning","text":"Reuni\u00e3o 09/03 Dentro da reuni\u00e3o da planning foram verificados os pontos a serem desenvolvidos no projeto para essa entrega, das discuss\u00f5es principais tivemos: Cria\u00e7\u00e3o e distribui\u00e7\u00e3o das issues. Realiza\u00e7\u00e3o do Planning Poker das tarefas. A equipe optou pela colabora\u00e7\u00e3o de mais integrantes nas decis\u00f5es acerca do design do projeto.","title":"Planning"},{"location":"Modelagem/sprints/Sprint3/#relacionamento-entre-documentos-e-seus-criadores","text":"Issue Pontua\u00e7\u00e3o Participantes Revisores Prot\u00f3tipo de Alta/Media/Baixa fidelidade 15 Hugo Arag\u00e3o / Gustavo Nogueira / N\u00edcalo Ribeiro Renato Britto / Jo\u00e3o Baraky / Jo\u00e3o Pedro Guia de Estilo 13 N\u00edcalo Ribeiro / Wagner Martins / Jo\u00e3o Baraky Jo\u00e3o Pedro / Gustavo Nogueira / Hugo Arag\u00e3o Configurar Ambiente 6 Renato Britto Nicalo Ribeiro Estilizar gh-pages 4 Wagner Martins / Gustavo Nogueira Hugo Arag\u00e3o / Renato Britto Configurar o Backlog 8 Jo\u00e3o Baraky / Jo\u00e3o Pedro Wagner Martins / Gustavo Nogueira Documentar Sprint 4 Hugo Arag\u00e3o / Jo\u00e3o Pedro Jo\u00e3o Baraky / Wagner Martins","title":"Relacionamento entre documentos e seus criadores"},{"location":"Modelagem/sprints/Sprint3/#review","text":"Reuni\u00e3o 16/03 Nessa reuni\u00e3o discutimos o que foi produzido nas issues assim como: Resultado do Guia de Estilo Remodelagem do Backlog Diretrizes necess\u00e1rias para a pr\u00f3xima entrega Revis\u00e3o do novo prot\u00f3tipo de baixa fidedelidade de acordo com o escopo Escolha do tema do Gh-pages Ideias de aumento do escopo para produ\u00e7\u00e3o dos documentos relacionados \u00e0 teoria da disciplina Al\u00e9m disso, visto a necessidade de confirmar alguns t\u00f3picos da proxima entrega, foi adiada a entrega das issues para 17/03, quando come\u00e7ar\u00e1 a pr\u00f3xima sprint.","title":"Review:"},{"location":"Modelagem/sprints/Sprint3/#versionamento","text":"Data Nome Detalhes Vers\u00e3o 15/03/2021 Hugo Arag\u00e3o Cria\u00e7\u00e3o do documento e Reuni\u00e3o 09/03 0.1 15/03/2021 Hugo Arag\u00e3o Adiciona tabela de contribui\u00e7\u00e3o 0.2 15/03/2021 Jo\u00e3o Pedro Adiciona os revisores 0.3 16/03/2021 Hugo Arag\u00e3o Adiciona reuni\u00e3o 16/03 0.4 17/03/2021 Jo\u00e3o Pedro Revis\u00e3o 1.0","title":"Versionamento"},{"location":"Padroes/guia_de_estilo/guia_estilo/","text":"Guia de Estilo 1. Introdu\u00e7\u00e3o O guia de estilo \u00e9 um artefato que serve como um manual de design e intera\u00e7\u00e3o para o sistema de software. \u00c9 um documento importante para manter o rastro de decis\u00f5es acerca da intera\u00e7\u00e3o com o sistema, de forma a deixar todos os envolvidos cientes dos padr\u00f5es acordados para o projeto. 1.1 Objetivo Este documento de guia de estilo visa acordar os padr\u00f5es de design e intera\u00e7\u00e3o para o software Encare. 1.2 Organiza\u00e7\u00e3o e conte\u00fado Esta se\u00e7\u00e3o (1), se destina a explicar o que \u00e9, e para que serve o guia de estilo. A se\u00e7\u00e3o 2 apresenta a descri\u00e7\u00e3o do ambiente de trabalho onde o Encare funcionar\u00e1 e a se\u00e7\u00e3o 3 apresenta os elementos de design que devem ser seguidos no desenvolvimento da aplica\u00e7\u00e3o, como grids, cores, tipografia, entre outros. 1.3 P\u00fablico-alvo O guia de estilo se destina principalmente a pessoas envolvidas no desenvolvimento do front-end do Encare, sejam desenvolvedores ou designers. N\u00e3o limitado a somente estes, qualquer pessoa interessada nos padr\u00f5es de design e intera\u00e7\u00e3o deste documento podem consultar o documento. 1.4 Como manter O guia de estilo mant\u00e9m o rastro dos aspectos de design do projeto, e por este motivo deve ser atualizado conforme mudan\u00e7as, adi\u00e7\u00f5es ou remo\u00e7\u00f5es sejam decididas. 2. Resultado de An\u00e1lise 2.1 Descri\u00e7\u00e3o do ambiente de trabalho do usu\u00e1rio A aplica\u00e7\u00e3o se destina a qualquer pessoa que queira procurar estabelecimentos que oferecem servi\u00e7os de cuidados pessoais. O ambiente de uso \u00e9 qualquer dispositivo (desktop ou mobile) com acesso a um navegador recente e internet. 3. Elementos de interface 3.1 Grids Ser\u00e1 utilizado o padr\u00e3o de Grid de 12 Colunas. Nesse sistema, o container \u00e9 dividido em 12 colunas, que representam 100% do comprimento da tela. Portanto, de acordo com a necessidade, a largura dos componentes dever\u00e1 ser definida conforme o padr\u00e3o, que \u00e9 exemplificado na imagem abaixo : 3.1.1 Exemplo de uso das grids Para uma lista de cards, como no feed de servi\u00e7os, cada elemento dever\u00e1 possuir tamanho 12 (que representa 100%) em rela\u00e7\u00e3o \u00e0 seu cont\u00eainer pai. Exemplo: Dentro de cada card, para melhor visualiza\u00e7\u00e3o e intera\u00e7\u00e3o, \u00e9 recomendado que ele seja dividido em no m\u00e1ximo 4 partes : Tanto o header quanto o footer devem possuir tamanho 12, mas em rela\u00e7\u00e3o ao body da p\u00e1gina : Disposi\u00e7\u00e3o geral do site : 1 : Header 2 : Container principal 3 : Footer Disposi\u00e7\u00e3o do container principal : Modelo 1 : 1 : Vai conter um formul\u00e1rio para a aplica\u00e7\u00e3o de filtros 2 : Ir\u00e1 conter o feed (lista ou mapa), com ou sem filtros aplicados Modelo 2 : 1 : Vai conter um formul\u00e1rio para a aplica\u00e7\u00e3o de filtros 2 : Ir\u00e1 conter o feed (lista ou mapa), com ou sem filtros aplicados 3.2 Tipografia Fonte selecionada : Poppins T\u00edtulo Principal Subt\u00edtulo T\u00edtulo 3 T\u00edtulo 4 Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum is simply dummy text of the printing and typesetting industry. 3.3 S\u00edmbolos n\u00e3o tipogr\u00e1ficos Em rela\u00e7\u00e3o aos \u00edcones, devem ser usados os \u00edcones do Material-UI no estilo arredondado. A imagem mostra alguns \u00edcones como exemplo. N\u00e3o limitado a estes, qualquer \u00edcone do pacote Material-UI pode ser usado. 3.4 Cores Refer\u00eancias [1] BARBOSA, Simone. SILVA, Bruno. Intera\u00e7\u00e3o Humano Computador . 2010. Dispon\u00edvel em https://docplayer.com.br/63299367-Interacao-humano-computador.html Hist\u00f3rico Data Descri\u00e7\u00e3o Autor(es) Vers\u00e3o 13/03/21 Cria\u00e7\u00e3o do Documento Wagner 0.1 14/03/21 Adicao dos grids e tipografia N\u00edcalo 0.2 15/03/21 Adicao da introdu\u00e7\u00e3o e resultados de an\u00e1lise Wagner 0.3 16/03/21 Defini\u00e7\u00e3o pelo grupo dos \u00edcones e paleta de cores Todos 0.4 17/03/21 Adicao dos \u00edcones e paleta de cores no documento Wagner 0.5","title":"Guia de Estilo"},{"location":"Padroes/guia_de_estilo/guia_estilo/#guia-de-estilo","text":"","title":"Guia de Estilo"},{"location":"Padroes/guia_de_estilo/guia_estilo/#1-introducao","text":"O guia de estilo \u00e9 um artefato que serve como um manual de design e intera\u00e7\u00e3o para o sistema de software. \u00c9 um documento importante para manter o rastro de decis\u00f5es acerca da intera\u00e7\u00e3o com o sistema, de forma a deixar todos os envolvidos cientes dos padr\u00f5es acordados para o projeto.","title":"1. Introdu\u00e7\u00e3o"},{"location":"Padroes/guia_de_estilo/guia_estilo/#11-objetivo","text":"Este documento de guia de estilo visa acordar os padr\u00f5es de design e intera\u00e7\u00e3o para o software Encare.","title":"1.1 Objetivo"},{"location":"Padroes/guia_de_estilo/guia_estilo/#12-organizacao-e-conteudo","text":"Esta se\u00e7\u00e3o (1), se destina a explicar o que \u00e9, e para que serve o guia de estilo. A se\u00e7\u00e3o 2 apresenta a descri\u00e7\u00e3o do ambiente de trabalho onde o Encare funcionar\u00e1 e a se\u00e7\u00e3o 3 apresenta os elementos de design que devem ser seguidos no desenvolvimento da aplica\u00e7\u00e3o, como grids, cores, tipografia, entre outros.","title":"1.2 Organiza\u00e7\u00e3o e conte\u00fado"},{"location":"Padroes/guia_de_estilo/guia_estilo/#13-publico-alvo","text":"O guia de estilo se destina principalmente a pessoas envolvidas no desenvolvimento do front-end do Encare, sejam desenvolvedores ou designers. N\u00e3o limitado a somente estes, qualquer pessoa interessada nos padr\u00f5es de design e intera\u00e7\u00e3o deste documento podem consultar o documento.","title":"1.3 P\u00fablico-alvo"},{"location":"Padroes/guia_de_estilo/guia_estilo/#14-como-manter","text":"O guia de estilo mant\u00e9m o rastro dos aspectos de design do projeto, e por este motivo deve ser atualizado conforme mudan\u00e7as, adi\u00e7\u00f5es ou remo\u00e7\u00f5es sejam decididas.","title":"1.4 Como manter"},{"location":"Padroes/guia_de_estilo/guia_estilo/#2-resultado-de-analise","text":"","title":"2. Resultado de An\u00e1lise"},{"location":"Padroes/guia_de_estilo/guia_estilo/#21-descricao-do-ambiente-de-trabalho-do-usuario","text":"A aplica\u00e7\u00e3o se destina a qualquer pessoa que queira procurar estabelecimentos que oferecem servi\u00e7os de cuidados pessoais. O ambiente de uso \u00e9 qualquer dispositivo (desktop ou mobile) com acesso a um navegador recente e internet.","title":"2.1 Descri\u00e7\u00e3o do ambiente de trabalho do usu\u00e1rio"},{"location":"Padroes/guia_de_estilo/guia_estilo/#3-elementos-de-interface","text":"","title":"3. Elementos de interface"},{"location":"Padroes/guia_de_estilo/guia_estilo/#31-grids","text":"Ser\u00e1 utilizado o padr\u00e3o de Grid de 12 Colunas. Nesse sistema, o container \u00e9 dividido em 12 colunas, que representam 100% do comprimento da tela. Portanto, de acordo com a necessidade, a largura dos componentes dever\u00e1 ser definida conforme o padr\u00e3o, que \u00e9 exemplificado na imagem abaixo :","title":"3.1 Grids"},{"location":"Padroes/guia_de_estilo/guia_estilo/#311-exemplo-de-uso-das-grids","text":"Para uma lista de cards, como no feed de servi\u00e7os, cada elemento dever\u00e1 possuir tamanho 12 (que representa 100%) em rela\u00e7\u00e3o \u00e0 seu cont\u00eainer pai. Exemplo: Dentro de cada card, para melhor visualiza\u00e7\u00e3o e intera\u00e7\u00e3o, \u00e9 recomendado que ele seja dividido em no m\u00e1ximo 4 partes : Tanto o header quanto o footer devem possuir tamanho 12, mas em rela\u00e7\u00e3o ao body da p\u00e1gina : Disposi\u00e7\u00e3o geral do site : 1 : Header 2 : Container principal 3 : Footer Disposi\u00e7\u00e3o do container principal : Modelo 1 : 1 : Vai conter um formul\u00e1rio para a aplica\u00e7\u00e3o de filtros 2 : Ir\u00e1 conter o feed (lista ou mapa), com ou sem filtros aplicados Modelo 2 : 1 : Vai conter um formul\u00e1rio para a aplica\u00e7\u00e3o de filtros 2 : Ir\u00e1 conter o feed (lista ou mapa), com ou sem filtros aplicados","title":"3.1.1 Exemplo de uso das grids"},{"location":"Padroes/guia_de_estilo/guia_estilo/#32-tipografia","text":"Fonte selecionada : Poppins","title":"3.2 Tipografia"},{"location":"Padroes/guia_de_estilo/guia_estilo/#33-simbolos-nao-tipograficos","text":"Em rela\u00e7\u00e3o aos \u00edcones, devem ser usados os \u00edcones do Material-UI no estilo arredondado. A imagem mostra alguns \u00edcones como exemplo. N\u00e3o limitado a estes, qualquer \u00edcone do pacote Material-UI pode ser usado.","title":"3.3 S\u00edmbolos n\u00e3o tipogr\u00e1ficos"},{"location":"Padroes/guia_de_estilo/guia_estilo/#34-cores","text":"","title":"3.4 Cores"},{"location":"Padroes/guia_de_estilo/guia_estilo/#referencias","text":"[1] BARBOSA, Simone. SILVA, Bruno. Intera\u00e7\u00e3o Humano Computador . 2010. Dispon\u00edvel em https://docplayer.com.br/63299367-Interacao-humano-computador.html","title":"Refer\u00eancias"},{"location":"Padroes/guia_de_estilo/guia_estilo/#historico","text":"Data Descri\u00e7\u00e3o Autor(es) Vers\u00e3o 13/03/21 Cria\u00e7\u00e3o do Documento Wagner 0.1 14/03/21 Adicao dos grids e tipografia N\u00edcalo 0.2 15/03/21 Adicao da introdu\u00e7\u00e3o e resultados de an\u00e1lise Wagner 0.3 16/03/21 Defini\u00e7\u00e3o pelo grupo dos \u00edcones e paleta de cores Todos 0.4 17/03/21 Adicao dos \u00edcones e paleta de cores no documento Wagner 0.5","title":"Hist\u00f3rico"},{"location":"Padroes/prototipos/prototipo_alta/","text":"Prot\u00f3tipos Introdu\u00e7\u00e3o Uma das t\u00e9cnicas mais usadas para garantir que o produto ser\u00e1 bem aceito ou que n\u00e3o causar\u00e1 problemas ao usu\u00e1rio \u00e9 a prototipa\u00e7\u00e3o. \u00c9 um m\u00e9todo que ajuda a desenvolver rapidamente uma vers\u00e3o \u201ctest\u00e1vel\u201d do seu projeto, seja ele um produto ou servi\u00e7o. Para essa prototipa\u00e7\u00e3o, ser\u00e1 utilizado a ferramenta Figma . Ser\u00e1 adotado um modelo evolucion\u00e1rio de prototipa\u00e7\u00e3o, que consiste em produzir um modelo inicial de prot\u00f3tipo e ir refinando-o ao longo das v\u00e1rias fases do desenvolvimento do projeto at\u00e9 atingir sua forma final. Prot\u00f3tipo de Alta Fidelidade Um prot\u00f3tipo de alta fidelidade (\u00e0s vezes chamado de high-fi ou hi-fi) \u00e9 uma representa\u00e7\u00e3o interativa do produto, baseada no computador ou em dispositivos m\u00f3veis. Esse prot\u00f3tipo j\u00e1 apresenta maior semelhan\u00e7a com o design final em termos de detalhes e funcionalidade. Prot\u00f3tipo de M\u00e9dia Fidelidade Um prot\u00f3tipo de m\u00e9dia fidelidade visa definir a estrutura de conte\u00fado da interface, definir o peso, relev\u00e2ncia e rela\u00e7\u00e3o entre os elementos e criar um layout b\u00e1sico (com conte\u00fados e imagens de marca\u00e7\u00e3o). Para chegar \u00e0 primeira vers\u00e3o do prot\u00f3tipo de alta fidelidade, os membros do grupo elaboraram alguns prot\u00f3tipos de m\u00e9dia fidelidade para conciliar ideias e construir um prot\u00f3tipo de alta fidelidade mais pr\u00f3ximo ao ideal. Prot\u00f3tipo 01 Autor: N\u00edcalo Ribeiro Autor: Hugo Essa parte do prot\u00f3tipo teve como objetivo principal compilar as ideias gerais da equipe sobre o produto, concebido ap\u00f3s as restri\u00e7\u00f5es da refatora\u00e7\u00e3o dos Requisitos do projeto. A primeira tela se refere \u00e0 uma tela principal, onde a maioria das frun\u00e7\u00f5es estariam dispon\u00edveis assim que o usu\u00e1rio come\u00e7asse sua experi\u00eancia. A segunda tela se refere ao perfil do Estabelecimento onde todas suas informa\u00e7\u00f5es estar\u00e3o dispostas, assim como as imagens de seus servi\u00e7os. Autor: Gustavo Prot\u00f3tipo de Alta Fidelidade Wireframe Dessa vez a equipe decidiu produzir os prot\u00f3tipos passo-a-passo, de forma que as ideias tivessem mais espa\u00e7o para amadurecer e o front-end estivesse de acordo com os requisitos evoluidos ap\u00f3s a refatora\u00e7\u00e3o do escopo. Assim, antes de lan\u00e7armos a vers\u00e3o final, decidimos produzir um Wireframe . Wireframe pode ser definido como um esqueleto do produto final. Nele est\u00e1 contido o conjunto de estruturas do site e os principais elementos, organizados por formas geom\u00e9tricas que ajudam a visualizar um produto real. Home Na Home dispusemos os elementos de forma que simplificasse cada sess\u00e3o de servi\u00e7o para o usu\u00e1rio, dividindo em quatro os atributos: Menu Apresent\u00e7\u00e3o Mapa Feed de servi\u00e7os Homepage do site - Hugo Perfil do Estabelecimento A p\u00e1gina de Perfil conta com as principais informa\u00e7\u00f5es do Estabelecimento, descri\u00e7\u00e3o do mesmo (afim de engajar o cliente), e um menu onde o cliente pode visualizar por: Trabalhos realizados Posi\u00e7\u00e3o no Mapa Coment\u00e1rios de clientes daquele estabelecimento P\u00e1gina de perfil do Estabelecimento - Hugo Filtro de Estabelecimentos A p\u00e1gina de Filtro Avan\u00e7ado foi criada para permitir que o usu\u00e1rio pudesse fazer uma busca personalizada, de forma a economizar tempo buscando por tipo de servi\u00e7o ou dist\u00e2ncia, por exemplo. P\u00e1gina de Filtro Avan\u00e7ado - Hugo Vers\u00e3o 1 Caso haja problema na visualiza\u00e7\u00e3o, Clicar aqui . Refer\u00eancias Prototipagem de alta fidelidade: o que \u00e9, quando, por que e como usar?. Medium. Dispon\u00edvel em: http://medium.com/somos-tera/prototipagem-de-alta-fidelidade-635d745b662b . Acesso em: 18 de mar\u00e7o de 2021. ALEX, Jefferson. Prot\u00f3tipos de baixa, m\u00e9dia e alta fidelidade. Dispon\u00edvel em: https://jeffersonalex.medium.com/prot%C3%B3tipos-de-baixa-m%C3%A9dia-e-alta-fidelidade-bf04870325a6 . Acesso em: 18 de mar\u00e7o de 2021. BECKER, Lauro. Wireframes, o que s\u00e3o e por que os utilizamos?. Org\u00e2nica Natural Marketing. Dispon\u00edvel em: https://www.organicadigital.com/blog/o-que-sao-wireframes-e-por-que-os-utilizamos/. Acesso em 25/03/2021 Versionamento Data Descri\u00e7\u00e3o Autor(es) Vers\u00e3o 18/03/2021 Cria\u00e7\u00e3o do documento N\u00edcalo, Gustavo, Hugo 0.1 18/03/2021 Estrutura\u00e7\u00e3o do documento N\u00edcalo, Gustavo, Hugo 0.2 18/03/2021 Adicao do prototipo de m\u00e9dia 01 N\u00edcalo 0.3 18/03/2021 Adi\u00e7\u00e3o da primeira vers\u00e3o do prot\u00f3tipo de alta fidelidade N\u00edcalo 0.4 18/03/2021 Adi\u00e7\u00e3o dos prot\u00f3tipos do Hugo e Do Gustavo Gustavo, Hugo, N\u00edcalo 0.5 19/03/2021 Adi\u00e7\u00e3o de alguns ajustes na p\u00e1gina Gustavo 0.6 25/03/2021 Adi\u00e7\u00e3o do Wireframe Home Hugo 0.7 25/03/2021 Adi\u00e7\u00e3o do Wireframe Perfil e Descri\u00e7\u00e3o das pages Hugo 0.8 08/04/2021 Adi\u00e7\u00e3o do Wireframe Filtro Hugo 0.9 08/04/2021 Adi\u00e7\u00e3o da descri\u00e7\u00e3o do prot\u00f3tipo de baixa (Hugo) Hugo 1.0","title":"Prot\u00f3tipo de Alta Fidelidade"},{"location":"Padroes/prototipos/prototipo_alta/#prototipos","text":"","title":"Prot\u00f3tipos"},{"location":"Padroes/prototipos/prototipo_alta/#introducao","text":"Uma das t\u00e9cnicas mais usadas para garantir que o produto ser\u00e1 bem aceito ou que n\u00e3o causar\u00e1 problemas ao usu\u00e1rio \u00e9 a prototipa\u00e7\u00e3o. \u00c9 um m\u00e9todo que ajuda a desenvolver rapidamente uma vers\u00e3o \u201ctest\u00e1vel\u201d do seu projeto, seja ele um produto ou servi\u00e7o. Para essa prototipa\u00e7\u00e3o, ser\u00e1 utilizado a ferramenta Figma . Ser\u00e1 adotado um modelo evolucion\u00e1rio de prototipa\u00e7\u00e3o, que consiste em produzir um modelo inicial de prot\u00f3tipo e ir refinando-o ao longo das v\u00e1rias fases do desenvolvimento do projeto at\u00e9 atingir sua forma final.","title":"Introdu\u00e7\u00e3o"},{"location":"Padroes/prototipos/prototipo_alta/#prototipo-de-alta-fidelidade","text":"Um prot\u00f3tipo de alta fidelidade (\u00e0s vezes chamado de high-fi ou hi-fi) \u00e9 uma representa\u00e7\u00e3o interativa do produto, baseada no computador ou em dispositivos m\u00f3veis. Esse prot\u00f3tipo j\u00e1 apresenta maior semelhan\u00e7a com o design final em termos de detalhes e funcionalidade.","title":"Prot\u00f3tipo de Alta Fidelidade"},{"location":"Padroes/prototipos/prototipo_alta/#prototipo-de-media-fidelidade","text":"Um prot\u00f3tipo de m\u00e9dia fidelidade visa definir a estrutura de conte\u00fado da interface, definir o peso, relev\u00e2ncia e rela\u00e7\u00e3o entre os elementos e criar um layout b\u00e1sico (com conte\u00fados e imagens de marca\u00e7\u00e3o). Para chegar \u00e0 primeira vers\u00e3o do prot\u00f3tipo de alta fidelidade, os membros do grupo elaboraram alguns prot\u00f3tipos de m\u00e9dia fidelidade para conciliar ideias e construir um prot\u00f3tipo de alta fidelidade mais pr\u00f3ximo ao ideal.","title":"Prot\u00f3tipo de M\u00e9dia Fidelidade"},{"location":"Padroes/prototipos/prototipo_alta/#prototipo-01","text":"","title":"Prot\u00f3tipo 01"},{"location":"Padroes/prototipos/prototipo_alta/#autor-nicalo-ribeiro","text":"","title":"Autor: N\u00edcalo Ribeiro"},{"location":"Padroes/prototipos/prototipo_alta/#autor-hugo","text":"Essa parte do prot\u00f3tipo teve como objetivo principal compilar as ideias gerais da equipe sobre o produto, concebido ap\u00f3s as restri\u00e7\u00f5es da refatora\u00e7\u00e3o dos Requisitos do projeto. A primeira tela se refere \u00e0 uma tela principal, onde a maioria das frun\u00e7\u00f5es estariam dispon\u00edveis assim que o usu\u00e1rio come\u00e7asse sua experi\u00eancia. A segunda tela se refere ao perfil do Estabelecimento onde todas suas informa\u00e7\u00f5es estar\u00e3o dispostas, assim como as imagens de seus servi\u00e7os.","title":"Autor: Hugo"},{"location":"Padroes/prototipos/prototipo_alta/#autor-gustavo","text":"","title":"Autor: Gustavo"},{"location":"Padroes/prototipos/prototipo_alta/#prototipo-de-alta-fidelidade_1","text":"","title":"Prot\u00f3tipo de Alta Fidelidade"},{"location":"Padroes/prototipos/prototipo_alta/#wireframe","text":"Dessa vez a equipe decidiu produzir os prot\u00f3tipos passo-a-passo, de forma que as ideias tivessem mais espa\u00e7o para amadurecer e o front-end estivesse de acordo com os requisitos evoluidos ap\u00f3s a refatora\u00e7\u00e3o do escopo. Assim, antes de lan\u00e7armos a vers\u00e3o final, decidimos produzir um Wireframe . Wireframe pode ser definido como um esqueleto do produto final. Nele est\u00e1 contido o conjunto de estruturas do site e os principais elementos, organizados por formas geom\u00e9tricas que ajudam a visualizar um produto real. Home Na Home dispusemos os elementos de forma que simplificasse cada sess\u00e3o de servi\u00e7o para o usu\u00e1rio, dividindo em quatro os atributos: Menu Apresent\u00e7\u00e3o Mapa Feed de servi\u00e7os Homepage do site - Hugo Perfil do Estabelecimento A p\u00e1gina de Perfil conta com as principais informa\u00e7\u00f5es do Estabelecimento, descri\u00e7\u00e3o do mesmo (afim de engajar o cliente), e um menu onde o cliente pode visualizar por: Trabalhos realizados Posi\u00e7\u00e3o no Mapa Coment\u00e1rios de clientes daquele estabelecimento P\u00e1gina de perfil do Estabelecimento - Hugo Filtro de Estabelecimentos A p\u00e1gina de Filtro Avan\u00e7ado foi criada para permitir que o usu\u00e1rio pudesse fazer uma busca personalizada, de forma a economizar tempo buscando por tipo de servi\u00e7o ou dist\u00e2ncia, por exemplo. P\u00e1gina de Filtro Avan\u00e7ado - Hugo","title":"Wireframe"},{"location":"Padroes/prototipos/prototipo_alta/#versao-1","text":"Caso haja problema na visualiza\u00e7\u00e3o, Clicar aqui .","title":"Vers\u00e3o 1"},{"location":"Padroes/prototipos/prototipo_alta/#referencias","text":"Prototipagem de alta fidelidade: o que \u00e9, quando, por que e como usar?. Medium. Dispon\u00edvel em: http://medium.com/somos-tera/prototipagem-de-alta-fidelidade-635d745b662b . Acesso em: 18 de mar\u00e7o de 2021. ALEX, Jefferson. Prot\u00f3tipos de baixa, m\u00e9dia e alta fidelidade. Dispon\u00edvel em: https://jeffersonalex.medium.com/prot%C3%B3tipos-de-baixa-m%C3%A9dia-e-alta-fidelidade-bf04870325a6 . Acesso em: 18 de mar\u00e7o de 2021. BECKER, Lauro. Wireframes, o que s\u00e3o e por que os utilizamos?. Org\u00e2nica Natural Marketing. Dispon\u00edvel em: https://www.organicadigital.com/blog/o-que-sao-wireframes-e-por-que-os-utilizamos/. Acesso em 25/03/2021","title":"Refer\u00eancias"},{"location":"Padroes/prototipos/prototipo_alta/#versionamento","text":"Data Descri\u00e7\u00e3o Autor(es) Vers\u00e3o 18/03/2021 Cria\u00e7\u00e3o do documento N\u00edcalo, Gustavo, Hugo 0.1 18/03/2021 Estrutura\u00e7\u00e3o do documento N\u00edcalo, Gustavo, Hugo 0.2 18/03/2021 Adicao do prototipo de m\u00e9dia 01 N\u00edcalo 0.3 18/03/2021 Adi\u00e7\u00e3o da primeira vers\u00e3o do prot\u00f3tipo de alta fidelidade N\u00edcalo 0.4 18/03/2021 Adi\u00e7\u00e3o dos prot\u00f3tipos do Hugo e Do Gustavo Gustavo, Hugo, N\u00edcalo 0.5 19/03/2021 Adi\u00e7\u00e3o de alguns ajustes na p\u00e1gina Gustavo 0.6 25/03/2021 Adi\u00e7\u00e3o do Wireframe Home Hugo 0.7 25/03/2021 Adi\u00e7\u00e3o do Wireframe Perfil e Descri\u00e7\u00e3o das pages Hugo 0.8 08/04/2021 Adi\u00e7\u00e3o do Wireframe Filtro Hugo 0.9 08/04/2021 Adi\u00e7\u00e3o da descri\u00e7\u00e3o do prot\u00f3tipo de baixa (Hugo) Hugo 1.0","title":"Versionamento"},{"location":"Padroes_de_projeto/Escopo_aumentado/","text":"Escopo Aumentado Introdu\u00e7\u00e3o: O projeto atual tem um escopo bastante reduzido e por isso se viu a necessidade de criar um escopo aumentado para que possam ser melhor aplicados os padr\u00f5es de projeto. Tendo isso em mente, para uma aumento de escopo mais s\u00f3lido, cada membro participante da issue ir\u00e1 produzir sua pr\u00f3pria vis\u00e3o do aumento de escopo que ela imagina e ap\u00f3s isso ir\u00e1 se discutir quais s\u00e3o as melhores ideias convergindo para uma ideia final. Esse aumento servir\u00e1 de base para aplica\u00e7\u00e3o dos padr\u00f5es de projeto GOFs, e possivelmente dos padr\u00f5es emergentes. Assim busca-se adicionar v\u00e1rios pontos de vistas ao documento e tamb\u00e9m facilitar o brainstorm para a elabora\u00e7\u00e3o do documento final. Esbo\u00e7os de escopo: Jo\u00e3o Pedro Gustavo Nogueira Renato Britto Jo\u00e3o Luis Baraky Aumento de escopo final: Ap\u00f3s uma reuni\u00e3o entre os integrantes do grupo, decidimos as caracter\u00edsticas inspiridas pelos esbo\u00e7os acima que ir\u00e1 compor o escopo final. Resultando no seguinte diagrama de classes: Vers\u00e3o 1.0: Vers\u00e3o 2.0: Vers\u00e3o 3.0: Vers\u00e3o 4.0 (Padr\u00f5es de projeto): Vers\u00e3o 4.0 Ap\u00f3s uma reuni\u00e3o com toda equipe e com base nos aumentos de escopo anteriores foi decido que esse escopo ser\u00e1 usado para codifica\u00e7\u00e3o e para apresenta\u00e7\u00e3o do entreg\u00e1vel. A motiva\u00e7\u00e3o para a utiliza\u00e7\u00e3o desse escopo ao inv\u00e9s do planejado inicialmente \u00e9 para a implementa\u00e7\u00e3o na pr\u00e1tica dos padr\u00f5es GRASPs e GOFs aplicados. Al\u00e9m disso com uma modelagem de tamanho maior \u00e9 poss\u00edvel fazer uma an\u00e1lise mais profunda nos documentos de arquitetura e de reutiliza\u00e7\u00e3o culminando num aprendizagem melhor. Ser\u00e1 levado em conta todos os artefatos gerados at\u00e9 ent\u00e3o, entretanto como o prazo n\u00e3o permite uma refatora\u00e7\u00e3o completa , a equipe nessa mesma reuni\u00e3o decidiu dar mais prioridade em gerar o aplicativo final. Diagrama de Casos de Uso Com o aumento de escopo definido, tamb\u00e9m foi criado um diagrama de casos de uso cujo objetivo \u00e9 servir de apoio em casos onde a intera\u00e7\u00e3o do usu\u00e1rio tenha que ser considerada. Vers\u00e3o 1.0: Conclus\u00e3o: Com isso, acreditamos que a adi\u00e7\u00e3o das novas classes e features ao projeto agrega uma complexidade interessante e possibilitar\u00e1 uma aplica\u00e7\u00e3o completa dos GOFs e padr\u00f5es emergentes. Al\u00e9m disso, chegamos a conclus\u00e3o em equipe que o aumento de escopo resultante pode ser aplicado no projeto por completo sem muitas dificuldades. Versionamento: Nome Data Detalhes Vers\u00e3o Jo\u00e3o Pedro Carvalho 23/03/2021 Adicionando introdu\u00e7\u00e3o e t\u00f3picos 0.1 Jo\u00e3o Pedro Carvalho 25/03/2021 Adicionando esbo\u00e7o de escopo 0.2 Jo\u00e3o Luis Baraky 27/03/2021 Adicionando esbo\u00e7o do aumento de escopo 0.3 Gustavo Nogueira 28/03/2021 Adicionando esbo\u00e7o do aumento de escopo 0.4 Todos 29/03/2021 Adiciona o escopo final resultante 0.5 Jo\u00e3o Luis Baraky 30/03/2021 Adiciona segunda vers\u00e3o do escopo final 0.6 Jo\u00e3o Luis Baraky 31/03/2021 Adiciona terceira vers\u00e3o do escopo final 0.7 Jo\u00e3o Luis Baraky 31/03/2021 Adiciona conclus\u00e3o do documento 1.0 Wagner Martins 09/04/2021 Adi\u00e7\u00e3o do diagrama de casos de uso 2.0 Todos 09/04/2021 Adicionando Modelagem com padr\u00f5es de projeto 3.0 Jo\u00e3o Pedro Carvalho 16/04/2021 Adi\u00e7\u00e3o da modelagem 4.0","title":"Aumento de Escopo"},{"location":"Padroes_de_projeto/Escopo_aumentado/#escopo-aumentado","text":"","title":"Escopo Aumentado"},{"location":"Padroes_de_projeto/Escopo_aumentado/#introducao","text":"O projeto atual tem um escopo bastante reduzido e por isso se viu a necessidade de criar um escopo aumentado para que possam ser melhor aplicados os padr\u00f5es de projeto. Tendo isso em mente, para uma aumento de escopo mais s\u00f3lido, cada membro participante da issue ir\u00e1 produzir sua pr\u00f3pria vis\u00e3o do aumento de escopo que ela imagina e ap\u00f3s isso ir\u00e1 se discutir quais s\u00e3o as melhores ideias convergindo para uma ideia final. Esse aumento servir\u00e1 de base para aplica\u00e7\u00e3o dos padr\u00f5es de projeto GOFs, e possivelmente dos padr\u00f5es emergentes. Assim busca-se adicionar v\u00e1rios pontos de vistas ao documento e tamb\u00e9m facilitar o brainstorm para a elabora\u00e7\u00e3o do documento final.","title":"Introdu\u00e7\u00e3o:"},{"location":"Padroes_de_projeto/Escopo_aumentado/#esbocos-de-escopo","text":"","title":"Esbo\u00e7os de escopo:"},{"location":"Padroes_de_projeto/Escopo_aumentado/#joao-pedro","text":"","title":"Jo\u00e3o Pedro"},{"location":"Padroes_de_projeto/Escopo_aumentado/#gustavo-nogueira","text":"","title":"Gustavo Nogueira"},{"location":"Padroes_de_projeto/Escopo_aumentado/#renato-britto","text":"","title":"Renato Britto"},{"location":"Padroes_de_projeto/Escopo_aumentado/#joao-luis-baraky","text":"","title":"Jo\u00e3o Luis Baraky"},{"location":"Padroes_de_projeto/Escopo_aumentado/#aumento-de-escopo-final","text":"Ap\u00f3s uma reuni\u00e3o entre os integrantes do grupo, decidimos as caracter\u00edsticas inspiridas pelos esbo\u00e7os acima que ir\u00e1 compor o escopo final. Resultando no seguinte diagrama de classes:","title":"Aumento de escopo final:"},{"location":"Padroes_de_projeto/Escopo_aumentado/#versao-10","text":"","title":"Vers\u00e3o 1.0:"},{"location":"Padroes_de_projeto/Escopo_aumentado/#versao-20","text":"","title":"Vers\u00e3o 2.0:"},{"location":"Padroes_de_projeto/Escopo_aumentado/#versao-30","text":"","title":"Vers\u00e3o 3.0:"},{"location":"Padroes_de_projeto/Escopo_aumentado/#versao-40-padroes-de-projeto","text":"","title":"Vers\u00e3o 4.0 (Padr\u00f5es de projeto):"},{"location":"Padroes_de_projeto/Escopo_aumentado/#versao-40","text":"Ap\u00f3s uma reuni\u00e3o com toda equipe e com base nos aumentos de escopo anteriores foi decido que esse escopo ser\u00e1 usado para codifica\u00e7\u00e3o e para apresenta\u00e7\u00e3o do entreg\u00e1vel. A motiva\u00e7\u00e3o para a utiliza\u00e7\u00e3o desse escopo ao inv\u00e9s do planejado inicialmente \u00e9 para a implementa\u00e7\u00e3o na pr\u00e1tica dos padr\u00f5es GRASPs e GOFs aplicados. Al\u00e9m disso com uma modelagem de tamanho maior \u00e9 poss\u00edvel fazer uma an\u00e1lise mais profunda nos documentos de arquitetura e de reutiliza\u00e7\u00e3o culminando num aprendizagem melhor. Ser\u00e1 levado em conta todos os artefatos gerados at\u00e9 ent\u00e3o, entretanto como o prazo n\u00e3o permite uma refatora\u00e7\u00e3o completa , a equipe nessa mesma reuni\u00e3o decidiu dar mais prioridade em gerar o aplicativo final.","title":"Vers\u00e3o 4.0"},{"location":"Padroes_de_projeto/Escopo_aumentado/#diagrama-de-casos-de-uso","text":"Com o aumento de escopo definido, tamb\u00e9m foi criado um diagrama de casos de uso cujo objetivo \u00e9 servir de apoio em casos onde a intera\u00e7\u00e3o do usu\u00e1rio tenha que ser considerada.","title":"Diagrama de Casos de Uso"},{"location":"Padroes_de_projeto/Escopo_aumentado/#versao-10_1","text":"","title":"Vers\u00e3o 1.0:"},{"location":"Padroes_de_projeto/Escopo_aumentado/#conclusao","text":"Com isso, acreditamos que a adi\u00e7\u00e3o das novas classes e features ao projeto agrega uma complexidade interessante e possibilitar\u00e1 uma aplica\u00e7\u00e3o completa dos GOFs e padr\u00f5es emergentes. Al\u00e9m disso, chegamos a conclus\u00e3o em equipe que o aumento de escopo resultante pode ser aplicado no projeto por completo sem muitas dificuldades.","title":"Conclus\u00e3o:"},{"location":"Padroes_de_projeto/Escopo_aumentado/#versionamento","text":"Nome Data Detalhes Vers\u00e3o Jo\u00e3o Pedro Carvalho 23/03/2021 Adicionando introdu\u00e7\u00e3o e t\u00f3picos 0.1 Jo\u00e3o Pedro Carvalho 25/03/2021 Adicionando esbo\u00e7o de escopo 0.2 Jo\u00e3o Luis Baraky 27/03/2021 Adicionando esbo\u00e7o do aumento de escopo 0.3 Gustavo Nogueira 28/03/2021 Adicionando esbo\u00e7o do aumento de escopo 0.4 Todos 29/03/2021 Adiciona o escopo final resultante 0.5 Jo\u00e3o Luis Baraky 30/03/2021 Adiciona segunda vers\u00e3o do escopo final 0.6 Jo\u00e3o Luis Baraky 31/03/2021 Adiciona terceira vers\u00e3o do escopo final 0.7 Jo\u00e3o Luis Baraky 31/03/2021 Adiciona conclus\u00e3o do documento 1.0 Wagner Martins 09/04/2021 Adi\u00e7\u00e3o do diagrama de casos de uso 2.0 Todos 09/04/2021 Adicionando Modelagem com padr\u00f5es de projeto 3.0 Jo\u00e3o Pedro Carvalho 16/04/2021 Adi\u00e7\u00e3o da modelagem 4.0","title":"Versionamento:"},{"location":"Padroes_de_projeto/GOFs/gof_comportamental/","text":"Padr\u00f5es de projeto GOFs Comportamentais 1. Introdu\u00e7\u00e3o Os padr\u00f5es comportamentais s\u00e3o voltados aos algoritmos e a designa\u00e7\u00e3o de responsabilidades entre objetos. Os padr\u00f5es comportamentais de classes utilizam a heran\u00e7a para distribuir o comportamento entre classes, e os padr\u00f5es de comportamento de objeto utilizam a composi\u00e7\u00e3o de objetos em contrapartida a heran\u00e7a. Alguns descrevem como grupos de objetos cooperam para a execu\u00e7\u00e3o de uma tarefa que n\u00e3o poderia ser executada por um objeto sozinho. O documento apresenta uma vis\u00e3o geral dos GOFs Comportamentais, com descri\u00e7\u00e3o do o que \u00e9, a estrutura, vantagens e desvantagens e aplica\u00e7\u00e3o no projeto. Para a maioria s\u00e3o apresentadas apenas ideias da aplica\u00e7\u00e3o. Os padr\u00f5es que apresentados com exemplos de implementa\u00e7\u00e3o foram: Iterator Command 2. Chain of Responsibility O Chain of Responsibility \u00e9 um padr\u00e3o de projeto comportamental que permite que voc\u00ea passe pedidos por uma corrente de handlers. Ao receber um pedido, cada handler decide se processa o pedido ou o passa adiante para o pr\u00f3ximo handler na corrente. O Chain of Responsibility \u00e9 aplicado quando \u00e9 esperado que o programa processe diferentes tipos de pedidos em v\u00e1rias maneiras, mas os exatos tipos de pedidos e suas sequ\u00eancias s\u00e3o desconhecidos de antem\u00e3o. Estrutura Handler - declara a interface comum a todos os handlers concretos. Ele geralmente cont\u00e9m apenas um \u00fanico m\u00e9todo para lidar com pedidos, mas algumas vezes ele pode conter outro m\u00e9todo para configurar o pr\u00f3ximo handler da corrente. Handler Base - \u00e9 uma classe opcional onde \u00e9 poss\u00edvel colocar o c\u00f3digo padr\u00e3o que \u00e9 comum a todas as classes handler. Handlers Concretos - cont\u00e9m o c\u00f3digo real para processar pedidos. Ao receber um pedido, cada handler deve decidir se processa ele e, adicionalmente, se passa ele adiante na corrente. Os handlers s\u00e3o geralmente auto contidos e imut\u00e1veis, aceitando todos os dados necess\u00e1rios apenas uma vez atrav\u00e9s do construtor. Client - pode compor correntes apenas uma vez ou comp\u00f4-las dinamicamente, dependendo da l\u00f3gica da aplica\u00e7\u00e3o. 2.1 Vantagens \u00c9 poss\u00edvel controlar a ordem de tratamento dos pedidos. Princ\u00edpio de responsabilidade \u00fanica. \u00c9 poss\u00edvel desacoplar classes que invocam opera\u00e7\u00f5es de classes que realizam opera\u00e7\u00f5es. Princ\u00edpio aberto/fechado. \u00c9 poss\u00edvel introduzir novos handlers na aplica\u00e7\u00e3o sem quebrar o c\u00f3digo cliente existente. 2.2 Desvantagens Alguns pedidos podem acabar sem tratamento. 2.3 Aplica\u00e7\u00e3o no Projeto O padr\u00e3o Chain of Responsability pode ser exemplificado no QueryBuilder usado pela classe Filtro para a filtragem dos estabelecimentos de acordo com par\u00e2metros como dist\u00e2ncia, servi\u00e7os procurados e avalia\u00e7\u00e3o. A classe abstrata QueryBuilder cont\u00e9m a defini\u00e7\u00e3o b\u00e1sica para a chaining, enquanto que suas concretas RatingQuery, GeolocationQuery e ServiceQuery s\u00e3o respons\u00e1veis por montar, em ordem, o pedido que ser\u00e1 feito ao banco de dados. O Chain of Responsability poderia ser tamb\u00e9m aplicado na camada de controle da aplica\u00e7\u00e3o, de forma a realizar opera\u00e7\u00f5es de logging e autoriza\u00e7\u00e3o, por exemplo, antes de seguir para a l\u00f3gica de neg\u00f3cio propriamente. Entretanto, essas opera\u00e7\u00f5es geralmente j\u00e1 s\u00e3o implementadas por frameworks. 3. Command O Command \u00e9 um padr\u00e3o de projeto comportamental que transforma um pedido em um objeto independente que cont\u00e9m toda a informa\u00e7\u00e3o sobre o pedido. Essa transforma\u00e7\u00e3o permite que voc\u00ea parametrize m\u00e9todos com diferentes pedidos, atrase ou coloque a execu\u00e7\u00e3o do pedido em uma fila, e suporte opera\u00e7\u00f5es que n\u00e3o podem ser feitas. Estrutura Classe Remetente ou Invocadora (Invoker) - respons\u00e1vel por iniciar os pedidos. Essa classe deve ter um campo para armazenar a refer\u00eancia para um objeto comando. O remetente aciona aquele comando ao inv\u00e9s de enviar o pedido diretamente para o destinat\u00e1rio. Observe que o remetente n\u00e3o \u00e9 respons\u00e1vel por criar o objeto comando. Geralmente ele \u00e9 pr\u00e9 criado atrav\u00e9s de um construtor do cliente. Interface Comando (Command) - geralmente declara apenas um \u00fanico m\u00e9todo para executar o comando. Comandos Concretos (Concrete Command) - implementam v\u00e1rios tipos de pedidos. Um comando concreto n\u00e3o deve realizar o trabalho por conta pr\u00f3pria, mas passar a chamada para um dos objetos da l\u00f3gica do neg\u00f3cio. Classe Destinat\u00e1ria (Receiver) - cont\u00e9m a l\u00f3gica do neg\u00f3cio. Quase qualquer objeto pode servir como um destinat\u00e1rio. A maioria dos comandos apenas lida com os detalhes de como um pedido \u00e9 passado para o destinat\u00e1rio, enquanto que o destinat\u00e1rio em si executa o verdadeiro trabalho. Cliente (Client) - cria e configura objetos comando concretos. O cliente deve passar todos os par\u00e2metros do pedido, incluindo uma inst\u00e2ncia do destinat\u00e1rio, para o construtor do comando. Ap\u00f3s isso, o comando resultante pode ser associado com um ou m\u00faltiplos destinat\u00e1rios. 3.1 Vantagens Princ\u00edpio de responsabilidade \u00fanica. \u00c9 poss\u00edvel desacoplar classes que invocam opera\u00e7\u00f5es de classes que fazem essas opera\u00e7\u00f5es. Princ\u00edpio aberto/fechado. \u00c9 poss\u00edvel introduzir novos comandos na aplica\u00e7\u00e3o sem quebrar o c\u00f3digo cliente existente. \u00c9 poss\u00edvel implementar desfazer/refazer. \u00c9 poss\u00edvel implementar a execu\u00e7\u00e3o adiada de opera\u00e7\u00f5es. \u00c9 poss\u00edvel montar um conjunto de comandos simples em um complexo. 3.2 Desvantagens O c\u00f3digo pode ficar mais complicado uma vez que voc\u00ea est\u00e1 introduzindo uma nova camada entre remetentes e destinat\u00e1rios. 3.3 Aplica\u00e7\u00e3o no Projeto Exemplo toy ( Escopo estendido ) O padr\u00e3o command pode ser aplicado em locais que precisam da requisi\u00e7\u00e3o a API do Back-end. Neste exemplo, aplicamos o padr\u00e3o command no envio da avalia\u00e7\u00e3o de um estabelecimento por parte do usu\u00e1rio. Abaixo os c\u00f3digos do exemplo, feitos em typescript: function App() { const requestHandler : RequestHandler = new RequestHandler (); const ratingSender : RatingSender = new RatingSender ( \"Session User\" , \"Target Estabilishment\" , requestHandler ); return ( < div > < select name = \"rating\" id = \"ratingNumber\" > < option value = \"1\" > 1 < /option> < option value = \"2\" > 2 < /option> < option value = \"3\" > 3 < /option> < option value = \"4\" > 4 < /option> < option value = \"5\" > 5 < /option> < /select> < br /> < textarea name = \"estabilishmentReview\" id = \"ratingComment\" defaultValue = \"Some Placeholder text\" >< /textarea> < br /> < button onClick = { ratingSender . getCommandFunction ()} > Send Review < /button> < /div> ); } A pr\u00f3pria aplica\u00e7\u00e3o \u00e9 a cliente que usa a command. O bot\u00e3o \u00e9 a invoker, respons\u00e1vel por chamar a fun\u00e7\u00e3o de execu\u00e7\u00e3o da command. class RequestHandler { public constructor () { return this ; } public sendGetRequest ( path : string ) : any { console . log ( `Request to ${ path } ` ); } public sendPostRequest ( path : string , data : any ) : any { console . log ( `Request to ${ path } with` ) console . log ( data ) } } RequestHandler \u00e9 a receiver. Neste caso respons\u00e1vel pelas requisi\u00e7\u00f5es. Por se tratar de um exemplo toy, as fun\u00e7\u00f5es apenas logam no console os objetos que seriam passados pela requisi\u00e7\u00e3o. interface RequestSender { execute : { ( data : any ) : any } } class RatingSender implements RequestSender { private user : string ; private estabilishment : string ; private handler : RequestHandler ; public constructor ( user : string , estabilishment : string , handler : RequestHandler ) { this . user = user ; this . estabilishment = estabilishment ; this . handler = handler ; } public execute () : any { let rating = this . getFormData (); let data = { rating : rating.number , comment : rating.comment , user : this.user , estabilishment : this.estabilishment , } return this . handler . sendPostRequest ( `establishment/sendrating` , data ); } public getCommandFunction() { return () => { this . execute (); } } private getFormData = () => { let number : HTMLInputElement = document . getElementById ( \"ratingNumber\" ) as HTMLInputElement ; let comment : HTMLInputElement = document . getElementById ( \"ratingComment\" ) as HTMLInputElement ; let rating = { number : number . value , comment : comment.value } return rating ; } } RequestSender \u00e9 a interface do command. Suas implementa\u00e7\u00f5es concretas (neste caso a RatingSender) s\u00e3o respons\u00e1veis por fazer modifica\u00e7\u00f5es nos dados e pedir para a receiver executar a requisi\u00e7\u00e3o. 4. Iterator O Iterator \u00e9 um padr\u00e3o de projeto comportamental que permite a voc\u00ea percorrer elementos de uma cole\u00e7\u00e3o sem expor as representa\u00e7\u00f5es dele (lista, pilha, \u00e1rvore, etc.) Al\u00e9m de implementar o algoritmo em si, um objeto iterador encapsula todos os detalhes da travessia, tais como a posi\u00e7\u00e3o atual e quantos elementos faltam para chegar ao fim. Por causa disso, alguns iteradores podem averiguar a mesma cole\u00e7\u00e3o ao mesmo tempo, independentemente um do outro. O Iterator \u00e9 utilizado quando se quer que o c\u00f3digo seja capaz de percorrer diferentes estruturas de dados ou quando os tipos dessas estruturas s\u00e3o desconhecidos de antem\u00e3o. Estrutura Interface Iterador - declara as opera\u00e7\u00f5es necess\u00e1rias para percorrer uma cole\u00e7\u00e3o: buscar o pr\u00f3ximo elemento, pegar a posi\u00e7\u00e3o atual, recome\u00e7ar a itera\u00e7\u00e3o e outras Iteradores Concretos - implementam algoritmos espec\u00edficos para percorrer uma cole\u00e7\u00e3o. O objeto iterador deve monitorar o progresso da travessia por conta pr\u00f3pria. Isso permite que diversos iteradores percorram a mesma cole\u00e7\u00e3o independentemente de cada um. Interface Cole\u00e7\u00e3o - declara um ou mais m\u00e9todos para obter os iteradores compat\u00edveis com a cole\u00e7\u00e3o. Cole\u00e7\u00f5es Concretas - retornam novas inst\u00e2ncias de uma classe iterador concreta em particular cada vez que o cliente pede por uma. Client - trabalha tanto com as cole\u00e7\u00f5es como os iteradores atrav\u00e9s de suas interfaces. Dessa forma o cliente n\u00e3o fica acoplado a suas classes concretas, permitindo usar v\u00e1rias cole\u00e7\u00f5es e iteradores com o mesmo c\u00f3digo client. 4.1 Vantagens Princ\u00edpio de responsabilidade \u00fanica. \u00c9 poss\u00edvel limpar o c\u00f3digo cliente e as cole\u00e7\u00f5es ao extrair os pesados algoritmos de travessia para classes separadas. Princ\u00edpio aberto/fechado. \u00c9 poss\u00edvel implementar novos tipos de cole\u00e7\u00f5es e iteradores e pass\u00e1-los para o c\u00f3digo existente sem quebrar coisa alguma. \u00c9 poss\u00edvel iterar sobre a mesma cole\u00e7\u00e3o em paralelo porque cada objeto iterador cont\u00e9m seu pr\u00f3prio estado de itera\u00e7\u00e3o. Pelas mesmas raz\u00f5es, \u00e9 poss\u00edvel atrasar uma itera\u00e7\u00e3o e continu\u00e1-la quando necess\u00e1rio. 4.2 Desvantagens Aplicar o padr\u00e3o pode ser um preciosismo se sua aplica\u00e7\u00e3o s\u00f3 trabalha com cole\u00e7\u00f5es simples. Usar um iterador pode ser menos eficiente que percorrer elementos de algumas cole\u00e7\u00f5es especializadas diretamente. 4.3 Aplica\u00e7\u00e3o no Projeto No nosso projeto, v\u00e1rios tipos de listas ser\u00e3o obtidas do backend , a princ\u00edpio por meio de um objeto JSON, para serem tratadas exibidas ao usu\u00e1rio no frontend . Com isso, a constru\u00e7\u00e3o de um Iterator se torna interessante devido \u00e0 variedade das listas, assim como seu tamanho, permitindo re\u00faso. Abaixo temos um trecho de c\u00f3digo escrito em JavaScript, que ser\u00e1 usado pelo React, com a implementa\u00e7\u00e3o de um Iterator : const Iterator = function ( items ) { this . index = 0 ; this . items = items ; } Iterator . prototype = { first : function () { this . reset (); return this . next (); }, next : function () { return this . items [ this . index ++ ]; }, hasNext : function () { return this . index <= this . items . length ; }, reset : function () { this . index = 0 ; }, each : function ( callback ) { for ( var item = this . first (); this . hasNext (); item = this . next ()) { callback ( item ); } } } module . exports = Iterator ; Abaixo, temos um exemplo do uso do Iterator no React, onde uma lista, independente do que se trata, ser\u00e1 iterada e seus objetos ser\u00e3o adicionados a um state. A fun\u00e7\u00e3o useEffect executa a fun\u00e7\u00e3o de percorrer a lista quando o componente em quest\u00e3o \u00e9 montado. const [ data , setData ] = useState ([]); const loadData = () => { let iter = new Iterator ( list ); for ( let item = iter . first (); iter . hasNext (); item = iter . next ()){ setData ( data => [... data , item ]); } } useEffect (() => { loadData () }, []); 5. Mediator O Mediator \u00e9 um padr\u00e3o de projeto comportamental que permite que voc\u00ea reduza as depend\u00eancias ca\u00f3ticas entre objetos. O padr\u00e3o restringe comunica\u00e7\u00f5es diretas entre objetos e os for\u00e7a a colaborar apenas atrav\u00e9s do objeto mediador. Estrutura Componentes - s\u00e3o v\u00e1rias classes que cont\u00e9m alguma l\u00f3gica de neg\u00f3cio. Cada componente tem uma refer\u00eancia a um mediador, declarada com o tipo de interface do mediador. O componente n\u00e3o est\u00e1 ciente da classe atual do mediador, ent\u00e3o \u00e9 poss\u00edvel reutilizar o componente em outros programas ao lig\u00e1-lo com um mediador diferente. Interface do Mediador - declara m\u00e9todos de comunica\u00e7\u00e3o com os componentes, os quais geralmente incluem apenas um m\u00e9todo de notifica\u00e7\u00e3o. Os componentes podem passar qualquer contexto como argumentos desse m\u00e9todo, incluindo seus pr\u00f3prios objetos, mas apenas de tal forma que nenhum acoplamento ocorra entre um componente destinat\u00e1rio e a classe remetente. Mediadores Concretos - encapsulam as rela\u00e7\u00f5es entre v\u00e1rios componentes. Os mediadores concretos quase sempre mant\u00e9m refer\u00eancias de todos os componentes os quais gerenciam e, algumas vezes, at\u00e9 gerenciam o ciclo de vida deles. Componentes n\u00e3o devem estar cientes de outros componentes - se algo importante acontece dentro ou para um componente, ele deve apenas notificar o mediador. Quando o mediador recebe a notifica\u00e7\u00e3o, ele pode facilmente identificar o remetente, o que \u00e9 suficiente para decidir que componente deve ser acionado em retorno. Da perspectiva de um componente, tudo parece como uma caixa preta. O remetente n\u00e3o sabe quem vai acabar lidando com o seu pedido, e o destinat\u00e1rio n\u00e3o sabe quem enviou o pedido em primeiro lugar. 5.1 Vantagens Princ\u00edpio de responsabilidade \u00fanica. \u00c9 poss\u00edvel extrair as comunica\u00e7\u00f5es entre v\u00e1rios componentes para um \u00fanico lugar, tornando as de mais f\u00e1cil entendimento e manuten\u00e7\u00e3o. Princ\u00edpio aberto/fechado. \u00c9 poss\u00edvel introduzir novos mediadores sem ter que mudar os pr\u00f3prios componentes. \u00c9 poss\u00edvel reduzir o acoplamento entre os v\u00e1rios componentes de um programa. \u00c9 poss\u00edvel reutilizar componentes individuais mais facilmente. 5.2 Desvantagens Com o tempo um mediador pode evoluir para um Objeto Deus. Na programa\u00e7\u00e3o orientada a objetos, um Objeto Deus \u00e9 um objeto que sabe demais ou faz demais. O objeto deus \u00e9 um exemplo de um antipadr\u00e3o em projetos de software. 5.3 Aplica\u00e7\u00e3o no Projeto No escopo estendido da aplica\u00e7\u00e3o, o mediator pode se caracterizar como um mediador entre um usu\u00e1rio cliente (Customer) e um usu\u00e1rio dono de estabelecimento (Owner), por meio de um componente de chat. 6. Memento O Memento \u00e9 um padr\u00e3o de projeto comportamental que permite que voc\u00ea salve e restaure o estado anterior de um objeto sem revelar os detalhes de sua implementa\u00e7\u00e3o. O padr\u00e3o Memento \u00e9 usado quando se quer produzir retratos ( snapshots ) do estado de um objeto para ser capaz de restaurar um estado anterior do objeto. Estrutura Classe Originadora - pode produzir retratos de seu pr\u00f3prio estado, bem como restaurar seu estado de retratos quando necess\u00e1rio. Memento - \u00e9 um objeto de valor que age como um retrato do estado da originadora. \u00c9 uma pr\u00e1tica comum fazer o memento imut\u00e1vel e passar os dados para ele apenas uma vez, atrav\u00e9s do construtor. Cuidadora - sabe n\u00e3o s\u00f3 \u201cquando\u201d e \u201cpor qu\u00ea\u201d capturar o estado da originadora, mas tamb\u00e9m quando o estado deve ser restaurado. Nessa implementa\u00e7\u00e3o, a classe memento est\u00e1 aninhada dentro da originadora. Isso permite que a originadora acesse os campos e m\u00e9todos do memento, mesmo que eles tenham sido declarados privados. Por outro lado, a cuidadora tem um acesso muito limitado aos campos do memento, que permite ela armazenar os mementos em uma pilha, mas n\u00e3o permite mexer com seu estado. 6.1 Vantagens \u00c9 poss\u00edvel produzir retratos do estado de um objeto sem violar seu encapsulamento. \u00c9 poss\u00edvel simplificar o c\u00f3digo da originadora permitindo que a cuidadora mantenha o hist\u00f3rico do estado da originadora. 6.2 Desvantagens A aplica\u00e7\u00e3o pode consumir muita RAM se os clientes criarem mementos com muita frequ\u00eancia. Cuidadoras devem acompanhar o ciclo de vida da originadora para serem capazes de destruir mementos obsoletos. A maioria das linguagens de programa\u00e7\u00e3o din\u00e2micas, tais como PHP, Python, e JavaScript, n\u00e3o conseguem garantir que o estado dentro do memento permane\u00e7a intacto. 6.3 Aplica\u00e7\u00e3o no Projeto Esse comportamento pode ser usado em componentes de escrita, como no chat ou avalia\u00e7\u00e3o do estabelecimento. As tags de entreda do HTML cont\u00eam mec\u00e2nismos de um memento. 7. Observer O Observer \u00e9 um padr\u00e3o de projeto comportamental que permite que voc\u00ea defina um mecanismo de assinatura para notificar m\u00faltiplos objetos sobre quaisquer eventos que aconte\u00e7am com o objeto que eles est\u00e3o observando. Tamb\u00e9m pode ser conhecido como Observador, Assinante do evento, Event-Subscriber, Escutador, Listener. O padr\u00e3o Observer pode ser usado quando mudan\u00e7as no estado de um objeto podem precisar mudar outros objetos, e o atual conjunto de objetos \u00e9 desconhecido de antem\u00e3o ou muda dinamicamente. Estrutura Publicadora - manda eventos de interesse para outros objetos. Esses eventos ocorrem quando a publicadora muda seu estado ou executa algum comportamento. As publicadoras cont\u00eam uma infraestrutura de inscri\u00e7\u00e3o que permite novos assinantes se juntar aos atuais assinantes ou deixar a lista. Quando um novo evento acontece, a publicadora percorre a lista de assinantes e chama o m\u00e9todo de notifica\u00e7\u00e3o declarado na interface do assinante em cada objeto assinante. Interface Assinante - declara a interface de notifica\u00e7\u00e3o. Na maioria dos casos ela consiste de um \u00fanico m\u00e9todo atualizar. O m\u00e9todo pode ter v\u00e1rios par\u00e2metros que permite que a publicadora passe alguns detalhes do evento junto com a atualiza\u00e7\u00e3o. Assinantes Concretos - realizam algumas a\u00e7\u00f5es em resposta \u00e0s notifica\u00e7\u00f5es enviadas pela publicadora. Todas essas classes devem implementar a mesma interface para que a publicadora n\u00e3o fique acoplada \u00e0 classes concretas. Geralmente, assinantes precisam de alguma informa\u00e7\u00e3o contextual para lidar com a atualiza\u00e7\u00e3o corretamente. Por esse motivo, as publicadoras quase sempre passam algum dado de contexto como argumentos do m\u00e9todo de notifica\u00e7\u00e3o. A publicadora pode passar a si mesmo como um argumento, permitindo que o assinante recupere quaisquer dados diretamente. Cliente - cria a publicadora e os objetos assinantes separadamente e ent\u00e3o registra os assinantes para as atualiza\u00e7\u00f5es da publicadora. 7.1 Vantagens Princ\u00edpio aberto/fechado. \u00c9 poss\u00edvel introduzir novas classes assinantes sem ter que mudar o c\u00f3digo da publicadora (e vice versa se existe uma interface publicadora). \u00c9 poss\u00edvel estabelecer rela\u00e7\u00f5es entre objetos durante a execu\u00e7\u00e3o. 7.2 Desvantagens Assinantes s\u00e3o notificados em ordem aleat\u00f3ria 7.3 Aplica\u00e7\u00e3o no Projeto O chat, al\u00e9m de um mediator, tamb\u00e9m aplica o padr\u00e3o de Observer, uma vez que ele precisa manter uma lista dos usu\u00e1rios participantes, e precisa escutar os eventos de conex\u00e3o, desconex\u00e3o e envio de mensagens entre os usu\u00e1rios. 8. State O State \u00e9 um padr\u00e3o de projeto comportamental que permite que um objeto altere seu comportamento quando seu estado interno muda. \u00c9 como se o objeto mudasse de classe. O padr\u00e3o State pode ser usado quando se tem um objeto que se comporta de maneira diferente dependendo do seu estado atual, quando o n\u00famero de estados \u00e9 enorme, e quando o c\u00f3digo estado espec\u00edfico muda com frequ\u00eancia. Estrutura Contexto - armazena uma refer\u00eancia a um dos objetos concretos de estado e delega a eles todos os trabalhos espec\u00edficos de estado. O contexto se comunica com o objeto estado atrav\u00e9s da interface do estado. O contexto exp\u00f5e um setter para passar a ele um novo objeto de estado. Interface do Estado - declara m\u00e9todos espec\u00edficos a estados. Esses m\u00e9todos devem fazer sentido para todos os estados concretos porque voc\u00ea n\u00e3o quer alguns dos seus estados tendo m\u00e9todos in\u00fateis que nunca ir\u00e3o ser chamados. Estados Concretos - fornecem suas pr\u00f3prias implementa\u00e7\u00f5es para os m\u00e9todos espec\u00edficos de estados. Objetos de estado podem armazenar refer\u00eancias retroativas para o objeto de contexto. Atrav\u00e9s dessa refer\u00eancia o estado pode buscar qualquer informa\u00e7\u00e3o desejada do objeto contexto, assim como iniciar transi\u00e7\u00f5es de estado. Ambos os estados de contexto e concretos podem configurar o pr\u00f3ximo estado do contexto e realizar a atual transi\u00e7\u00e3o de estado ao substituir o objeto estado ligado ao contexto. 8.1 Vantagens Princ\u00edpio de responsabilidade \u00fanica. Organiza o c\u00f3digo relacionado a estados particulares em classes separadas. Princ\u00edpio aberto/fechado. Introduz novos estados sem mudar classes de estado ou contexto existentes. Simplifica o c\u00f3digo de contexto ao eliminar condicionais de m\u00e1quinas de estado pesadas 8.2 Desvantagens Aplicar o padr\u00e3o pode ser um exagero se a m\u00e1quina de estado s\u00f3 tem alguns estados ou raramente muda eles. 8.3 Aplica\u00e7\u00e3o no Projeto O gerenciamento de estado de componentes \u00e9 muito utilizado no frontend. Um exemplo disso pode ser a mudan\u00e7a de contexto entre a tela inicial e a visualiza\u00e7\u00e3o de algum estabelecimento espec\u00edfico. 9. Strategy O Strategy \u00e9 um padr\u00e3o de projeto comportamental que permite que voc\u00ea defina uma fam\u00edlia de algoritmos, coloque-os em classes separadas, e fa\u00e7a os objetos deles intercambi\u00e1veis. O padr\u00e3o Strategy sugere que se pegue uma classe que faz algo espec\u00edfico em diversas maneiras diferentes e extraia todos esses algoritmos para classes separadas chamadas estrat\u00e9gias. Pode ser utilizado quando se tem muitas classes parecidas que somente diferem na forma que elas executam algum comportamento. Estrutura Contexto - mant\u00e9m uma refer\u00eancia para uma das estrat\u00e9gias concretas e se comunica com esse objeto atrav\u00e9s da interface da estrat\u00e9gia. Interface Estrat\u00e9gia - \u00e9 comum \u00e0 todas as estrat\u00e9gias concretas. Ela declara um m\u00e9todo que o contexto usa para executar uma estrat\u00e9gia. Estrat\u00e9gias Concretas - implementam diferentes varia\u00e7\u00f5es de um algoritmo que o contexto usa. O contexto chama o m\u00e9todo de execu\u00e7\u00e3o no objeto estrat\u00e9gia ligado cada vez que ele precisa rodar um algoritmo. O contexto n\u00e3o sabe qual tipo de estrat\u00e9gia ele est\u00e1 trabalhando ou como o algoritmo \u00e9 executado. Client - cria um objeto estrat\u00e9gia espec\u00edfico e passa ele para o contexto. O contexto exp\u00f5e um setter que permite o cliente mudar a estrat\u00e9gia associada com contexto durante a execu\u00e7\u00e3o. 9.1 Vantagens \u00c9 poss\u00edvel trocar algoritmos usados dentro de um objeto durante a execu\u00e7\u00e3o. \u00c9 poss\u00edvel isolar os detalhes de implementa\u00e7\u00e3o de um algoritmo do c\u00f3digo que usa ele. \u00c9 poss\u00edvel substituir a heran\u00e7a por composi\u00e7\u00e3o. Princ\u00edpio aberto/fechado. \u00c9 poss\u00edvel introduzir novas estrat\u00e9gias sem mudar o contexto. 9.2 Desvantagens Se existe s\u00f3 tem um par de algoritmos e eles raramente mudam, n\u00e3o h\u00e1 motivo real para deixar o programa mais complicado com novas classes e interfaces que v\u00eam junto com o padr\u00e3o. Os Clientes devem estar cientes das diferen\u00e7as entre as estrat\u00e9gias para serem capazes de selecionar a adequada. Muitas linguagens de programa\u00e7\u00e3o modernas tem suporte do tipo funcional que permite que implemente diferentes vers\u00f5es de um algoritmo dentro de um conjunto de fun\u00e7\u00f5es an\u00f4nimas. Ent\u00e3o \u00e9 poss\u00edvel usar essas fun\u00e7\u00f5es exatamente como se estivesse usando objetos estrat\u00e9gia, mas sem inchar seu c\u00f3digo com classes e interfaces adicionais. 9.3 Aplica\u00e7\u00e3o no Projeto As classes User, Estabilishment e Service precisam ter inst\u00e2ncias salvas, atualizadas ou apagadas. Uma aplica\u00e7\u00e3o de Strategy nesse caso poderia usar uma interface Register, cujas classes concretas se encarregam dessas opera\u00e7\u00f5es de forma especializada para cada entidade que necessita dessas opera\u00e7\u00f5es. 10. Template Method Tamb\u00e9m conhecido como M\u00e9todo padr\u00e3o, \u00e9 um padr\u00e3o de projeto comportamental que define o esqueleto de um algoritmo na superclasse mas deixa as subclasses sobrescreverem etapas espec\u00edficas do algoritmo sem modificar sua estrutura. Pode ser utilizade quando se tem v\u00e1rias classes que cont\u00e9m algoritmos quase id\u00eanticos com algumas diferen\u00e7as menores. Como resultado, \u00e9 poss\u00edvel querer modificar todas as classes quando o algoritmo muda. Estrutura Classe Abstrata - declara m\u00e9todos que agem como etapas de um algoritmo, bem como o pr\u00f3prio m\u00e9todo padr\u00e3o que chama esses m\u00e9todos em uma ordem espec\u00edfica. Os passos podem ser declarados como abstratos ou ter alguma implementa\u00e7\u00e3o padr\u00e3o. Classes Concretas - podem sobrescrever todas as etapas, mas n\u00e3o o pr\u00f3prio m\u00e9todo padr\u00e3o. 10.1 Vantagens \u00c9 poss\u00edvel deixar clientes sobrescrever apenas certas partes de um algoritmo grande, tornando-os menos afetados por mudan\u00e7as que acontece por outras partes do algoritmo. \u00c9 poss\u00edvel elevar o c\u00f3digo duplicado para uma superclasse. 10.2 Desvantagens Alguns clientes podem ser limitados ao fornecer o esqueleto de um algoritmo. Implementa\u00e7\u00f5es do padr\u00e3o Template Method tendem a ser mais dif\u00edceis de se manter quanto mais etapas eles tiverem. 10.3 Aplica\u00e7\u00e3o no Projeto N\u00e3o foram identificados casos que o Template Method precise ser implementado no projeto. Entretanto esse padr\u00e3o pode ser observado em fun\u00e7\u00f5es muito usadas como filter ou order no Javascript, que recebem fun\u00e7\u00f5es para controlar os elementos internos de cole\u00e7\u00f5es. 11. Visitor O Visitor \u00e9 um padr\u00e3o de projeto comportamental que permite que voc\u00ea separe algoritmos dos objetos nos quais eles operam. O padr\u00e3o Visitor sugere que voc\u00ea coloque o novo comportamento em uma classe separada chamada visitante, ao inv\u00e9s de tentar integr\u00e1-lo em classes j\u00e1 existentes. \u00c9 poss\u00edvel utilizar o Visitor quando se quer fazer uma opera\u00e7\u00e3o em todos os elementos de uma estrutura de objetos complexa. Estrutura Interface Visitante - declara um conjunto de m\u00e9todos visitantes que podem receber elementos concretos de uma estrutura de objetos como argumentos. Esses m\u00e9todos podem ter os mesmos nomes se o programa \u00e9 escrito em uma linguagem que suporta sobrecarregamento, mas o tipo dos par\u00e2metros devem ser diferentes. Visitante Concreto - implementa diversas vers\u00f5es do mesmo comportamento, feitos sob medida para diferentes elementos concretos de classes. A interface Elemento - declara um m\u00e9todo para \u201caceitar\u201d visitantes. Esse m\u00e9todo deve ter um par\u00e2metro declarado com o tipo da interface do visitante. Elemento Concreto - deve implementar o m\u00e9todo de aceita\u00e7\u00e3o. O prop\u00f3sito desse m\u00e9todo \u00e9 redirecionar a chamada para o m\u00e9todo visitante apropriado que corresponde com a atual classe elemento. Esteja atento que mesmo se uma classe elemento base implemente esse m\u00e9todo, todas as subclasses deve ainda sobrescrever esse m\u00e9todo em suas pr\u00f3prias classes e chamar o m\u00e9todo apropriado no objeto visitante. Cliente - geralmente representa uma cole\u00e7\u00e3o de outros objetos complexos. Geralmente, os clientes n\u00e3o est\u00e3o cientes de todos as classes elemento concretas porque eles trabalham com objetos daquele cole\u00e7\u00e3o atrav\u00e9s de uma interface abstrata. 11.1 Vantagens Princ\u00edpio aberto/fechado. \u00c9 poss\u00edvel introduzir um novo comportamento que pode funcionar com objetos de diferentes classes sem mudar essas classes. Princ\u00edpio de responsabilidade \u00fanica. \u00c9 poss\u00edvel mover m\u00faltiplas vers\u00f5es do mesmo comportamento para dentro da mesma classe. Um objeto visitante pode acumular algumas informa\u00e7\u00f5es \u00fateis enquanto trabalha com v\u00e1rios objetos. Isso pode ser interessante quando se quer percorrer algum objeto de estrutura complexa e aplicar o visitante para cada objeto da estrutura. 11.2 Desvantagens \u00c9 necess\u00e1rio atualizar todos os visitantes a cada vez que a classe \u00e9 adicionada ou removida da hierarquia de elementos. Visitantes podem n\u00e3o ter seu acesso permitido para campos e m\u00e9todos privados dos elementos que eles deveriam estar trabalhando. 11.3 Aplica\u00e7\u00e3o no Projeto N\u00e3o foram identificadas aplica\u00e7\u00f5es para este padr\u00e3o. 13. Refer\u00eancias [1] - Padr\u00f5es de projeto comportamentais. Dispon\u00edvel em: https://refactoring.guru/pt-br/design-patterns/behavioral-patterns . [2] - ALESSANDRO FERREIRA LEITE. Conhe\u00e7a os Padr\u00f5es de Projeto. Dispon\u00edvel em: https://www.devmedia.com.br/conheca-os-padroes-de-projeto/957 . \u200c \u200c 14. Versionamento Data Nome Detalhes Vers\u00e3o 03/04/2021 N\u00edcalo Ribeiro Cria\u00e7\u00e3o da estrutura base do documento 0.1 03/04/2021 N\u00edcalo, Wagner, Hugo Adi\u00e7\u00e3o dos conceitos de Chain of Responsibility 0.2 03/04/2021 N\u00edcalo, Wagner, Hugo Adi\u00e7\u00e3o dos conceitos de Command e Iterator 0.3 03/04/2021 N\u00edcalo, Wagner, Hugo Adi\u00e7\u00e3o dos conceitos de Mediator, Memento, Observer e State 0.4 03/04/2021 N\u00edcalo, Wagner, Hugo Adi\u00e7\u00e3o dos conceitos de Strategy, Template Method e Visitor 0.5 08/04/2021 Wagner Martins Adi\u00e7\u00e3o da modelagem e c\u00f3digo do padr\u00e3o command 0.6 08/04/2021 N\u00edcalo Ribeiro Adi\u00e7\u00e3o do c\u00f3digo do padr\u00e3o Iterator 0.7 09/04/2021 Wagner Martins Adi\u00e7\u00e3o de ideias de aplica\u00e7\u00e3o no projeto para os outros padr\u00f5es 0.8 09/04/2021 Wagner Martins Atualiza\u00e7\u00e3o da aplica\u00e7\u00e3o no padr\u00e3o chain of responsability 0.9","title":"GoFs Comportamentais"},{"location":"Padroes_de_projeto/GOFs/gof_comportamental/#padroes-de-projeto-gofs-comportamentais","text":"","title":"Padr\u00f5es de projeto GOFs Comportamentais"},{"location":"Padroes_de_projeto/GOFs/gof_comportamental/#1-introducao","text":"Os padr\u00f5es comportamentais s\u00e3o voltados aos algoritmos e a designa\u00e7\u00e3o de responsabilidades entre objetos. Os padr\u00f5es comportamentais de classes utilizam a heran\u00e7a para distribuir o comportamento entre classes, e os padr\u00f5es de comportamento de objeto utilizam a composi\u00e7\u00e3o de objetos em contrapartida a heran\u00e7a. Alguns descrevem como grupos de objetos cooperam para a execu\u00e7\u00e3o de uma tarefa que n\u00e3o poderia ser executada por um objeto sozinho. O documento apresenta uma vis\u00e3o geral dos GOFs Comportamentais, com descri\u00e7\u00e3o do o que \u00e9, a estrutura, vantagens e desvantagens e aplica\u00e7\u00e3o no projeto. Para a maioria s\u00e3o apresentadas apenas ideias da aplica\u00e7\u00e3o. Os padr\u00f5es que apresentados com exemplos de implementa\u00e7\u00e3o foram: Iterator Command","title":"1. Introdu\u00e7\u00e3o"},{"location":"Padroes_de_projeto/GOFs/gof_comportamental/#2-chain-of-responsibility","text":"O Chain of Responsibility \u00e9 um padr\u00e3o de projeto comportamental que permite que voc\u00ea passe pedidos por uma corrente de handlers. Ao receber um pedido, cada handler decide se processa o pedido ou o passa adiante para o pr\u00f3ximo handler na corrente. O Chain of Responsibility \u00e9 aplicado quando \u00e9 esperado que o programa processe diferentes tipos de pedidos em v\u00e1rias maneiras, mas os exatos tipos de pedidos e suas sequ\u00eancias s\u00e3o desconhecidos de antem\u00e3o.","title":"2. Chain of Responsibility"},{"location":"Padroes_de_projeto/GOFs/gof_comportamental/#estrutura","text":"Handler - declara a interface comum a todos os handlers concretos. Ele geralmente cont\u00e9m apenas um \u00fanico m\u00e9todo para lidar com pedidos, mas algumas vezes ele pode conter outro m\u00e9todo para configurar o pr\u00f3ximo handler da corrente. Handler Base - \u00e9 uma classe opcional onde \u00e9 poss\u00edvel colocar o c\u00f3digo padr\u00e3o que \u00e9 comum a todas as classes handler. Handlers Concretos - cont\u00e9m o c\u00f3digo real para processar pedidos. Ao receber um pedido, cada handler deve decidir se processa ele e, adicionalmente, se passa ele adiante na corrente. Os handlers s\u00e3o geralmente auto contidos e imut\u00e1veis, aceitando todos os dados necess\u00e1rios apenas uma vez atrav\u00e9s do construtor. Client - pode compor correntes apenas uma vez ou comp\u00f4-las dinamicamente, dependendo da l\u00f3gica da aplica\u00e7\u00e3o.","title":"Estrutura"},{"location":"Padroes_de_projeto/GOFs/gof_comportamental/#21-vantagens","text":"\u00c9 poss\u00edvel controlar a ordem de tratamento dos pedidos. Princ\u00edpio de responsabilidade \u00fanica. \u00c9 poss\u00edvel desacoplar classes que invocam opera\u00e7\u00f5es de classes que realizam opera\u00e7\u00f5es. Princ\u00edpio aberto/fechado. \u00c9 poss\u00edvel introduzir novos handlers na aplica\u00e7\u00e3o sem quebrar o c\u00f3digo cliente existente.","title":"2.1 Vantagens"},{"location":"Padroes_de_projeto/GOFs/gof_comportamental/#22-desvantagens","text":"Alguns pedidos podem acabar sem tratamento.","title":"2.2 Desvantagens"},{"location":"Padroes_de_projeto/GOFs/gof_comportamental/#23-aplicacao-no-projeto","text":"O padr\u00e3o Chain of Responsability pode ser exemplificado no QueryBuilder usado pela classe Filtro para a filtragem dos estabelecimentos de acordo com par\u00e2metros como dist\u00e2ncia, servi\u00e7os procurados e avalia\u00e7\u00e3o. A classe abstrata QueryBuilder cont\u00e9m a defini\u00e7\u00e3o b\u00e1sica para a chaining, enquanto que suas concretas RatingQuery, GeolocationQuery e ServiceQuery s\u00e3o respons\u00e1veis por montar, em ordem, o pedido que ser\u00e1 feito ao banco de dados. O Chain of Responsability poderia ser tamb\u00e9m aplicado na camada de controle da aplica\u00e7\u00e3o, de forma a realizar opera\u00e7\u00f5es de logging e autoriza\u00e7\u00e3o, por exemplo, antes de seguir para a l\u00f3gica de neg\u00f3cio propriamente. Entretanto, essas opera\u00e7\u00f5es geralmente j\u00e1 s\u00e3o implementadas por frameworks.","title":"2.3 Aplica\u00e7\u00e3o no Projeto"},{"location":"Padroes_de_projeto/GOFs/gof_comportamental/#3-command","text":"O Command \u00e9 um padr\u00e3o de projeto comportamental que transforma um pedido em um objeto independente que cont\u00e9m toda a informa\u00e7\u00e3o sobre o pedido. Essa transforma\u00e7\u00e3o permite que voc\u00ea parametrize m\u00e9todos com diferentes pedidos, atrase ou coloque a execu\u00e7\u00e3o do pedido em uma fila, e suporte opera\u00e7\u00f5es que n\u00e3o podem ser feitas.","title":"3. Command"},{"location":"Padroes_de_projeto/GOFs/gof_comportamental/#estrutura_1","text":"Classe Remetente ou Invocadora (Invoker) - respons\u00e1vel por iniciar os pedidos. Essa classe deve ter um campo para armazenar a refer\u00eancia para um objeto comando. O remetente aciona aquele comando ao inv\u00e9s de enviar o pedido diretamente para o destinat\u00e1rio. Observe que o remetente n\u00e3o \u00e9 respons\u00e1vel por criar o objeto comando. Geralmente ele \u00e9 pr\u00e9 criado atrav\u00e9s de um construtor do cliente. Interface Comando (Command) - geralmente declara apenas um \u00fanico m\u00e9todo para executar o comando. Comandos Concretos (Concrete Command) - implementam v\u00e1rios tipos de pedidos. Um comando concreto n\u00e3o deve realizar o trabalho por conta pr\u00f3pria, mas passar a chamada para um dos objetos da l\u00f3gica do neg\u00f3cio. Classe Destinat\u00e1ria (Receiver) - cont\u00e9m a l\u00f3gica do neg\u00f3cio. Quase qualquer objeto pode servir como um destinat\u00e1rio. A maioria dos comandos apenas lida com os detalhes de como um pedido \u00e9 passado para o destinat\u00e1rio, enquanto que o destinat\u00e1rio em si executa o verdadeiro trabalho. Cliente (Client) - cria e configura objetos comando concretos. O cliente deve passar todos os par\u00e2metros do pedido, incluindo uma inst\u00e2ncia do destinat\u00e1rio, para o construtor do comando. Ap\u00f3s isso, o comando resultante pode ser associado com um ou m\u00faltiplos destinat\u00e1rios.","title":"Estrutura"},{"location":"Padroes_de_projeto/GOFs/gof_comportamental/#31-vantagens","text":"Princ\u00edpio de responsabilidade \u00fanica. \u00c9 poss\u00edvel desacoplar classes que invocam opera\u00e7\u00f5es de classes que fazem essas opera\u00e7\u00f5es. Princ\u00edpio aberto/fechado. \u00c9 poss\u00edvel introduzir novos comandos na aplica\u00e7\u00e3o sem quebrar o c\u00f3digo cliente existente. \u00c9 poss\u00edvel implementar desfazer/refazer. \u00c9 poss\u00edvel implementar a execu\u00e7\u00e3o adiada de opera\u00e7\u00f5es. \u00c9 poss\u00edvel montar um conjunto de comandos simples em um complexo.","title":"3.1 Vantagens"},{"location":"Padroes_de_projeto/GOFs/gof_comportamental/#32-desvantagens","text":"O c\u00f3digo pode ficar mais complicado uma vez que voc\u00ea est\u00e1 introduzindo uma nova camada entre remetentes e destinat\u00e1rios.","title":"3.2 Desvantagens"},{"location":"Padroes_de_projeto/GOFs/gof_comportamental/#33-aplicacao-no-projeto","text":"Exemplo toy ( Escopo estendido ) O padr\u00e3o command pode ser aplicado em locais que precisam da requisi\u00e7\u00e3o a API do Back-end. Neste exemplo, aplicamos o padr\u00e3o command no envio da avalia\u00e7\u00e3o de um estabelecimento por parte do usu\u00e1rio. Abaixo os c\u00f3digos do exemplo, feitos em typescript: function App() { const requestHandler : RequestHandler = new RequestHandler (); const ratingSender : RatingSender = new RatingSender ( \"Session User\" , \"Target Estabilishment\" , requestHandler ); return ( < div > < select name = \"rating\" id = \"ratingNumber\" > < option value = \"1\" > 1 < /option> < option value = \"2\" > 2 < /option> < option value = \"3\" > 3 < /option> < option value = \"4\" > 4 < /option> < option value = \"5\" > 5 < /option> < /select> < br /> < textarea name = \"estabilishmentReview\" id = \"ratingComment\" defaultValue = \"Some Placeholder text\" >< /textarea> < br /> < button onClick = { ratingSender . getCommandFunction ()} > Send Review < /button> < /div> ); } A pr\u00f3pria aplica\u00e7\u00e3o \u00e9 a cliente que usa a command. O bot\u00e3o \u00e9 a invoker, respons\u00e1vel por chamar a fun\u00e7\u00e3o de execu\u00e7\u00e3o da command. class RequestHandler { public constructor () { return this ; } public sendGetRequest ( path : string ) : any { console . log ( `Request to ${ path } ` ); } public sendPostRequest ( path : string , data : any ) : any { console . log ( `Request to ${ path } with` ) console . log ( data ) } } RequestHandler \u00e9 a receiver. Neste caso respons\u00e1vel pelas requisi\u00e7\u00f5es. Por se tratar de um exemplo toy, as fun\u00e7\u00f5es apenas logam no console os objetos que seriam passados pela requisi\u00e7\u00e3o. interface RequestSender { execute : { ( data : any ) : any } } class RatingSender implements RequestSender { private user : string ; private estabilishment : string ; private handler : RequestHandler ; public constructor ( user : string , estabilishment : string , handler : RequestHandler ) { this . user = user ; this . estabilishment = estabilishment ; this . handler = handler ; } public execute () : any { let rating = this . getFormData (); let data = { rating : rating.number , comment : rating.comment , user : this.user , estabilishment : this.estabilishment , } return this . handler . sendPostRequest ( `establishment/sendrating` , data ); } public getCommandFunction() { return () => { this . execute (); } } private getFormData = () => { let number : HTMLInputElement = document . getElementById ( \"ratingNumber\" ) as HTMLInputElement ; let comment : HTMLInputElement = document . getElementById ( \"ratingComment\" ) as HTMLInputElement ; let rating = { number : number . value , comment : comment.value } return rating ; } } RequestSender \u00e9 a interface do command. Suas implementa\u00e7\u00f5es concretas (neste caso a RatingSender) s\u00e3o respons\u00e1veis por fazer modifica\u00e7\u00f5es nos dados e pedir para a receiver executar a requisi\u00e7\u00e3o.","title":"3.3 Aplica\u00e7\u00e3o no Projeto"},{"location":"Padroes_de_projeto/GOFs/gof_comportamental/#4-iterator","text":"O Iterator \u00e9 um padr\u00e3o de projeto comportamental que permite a voc\u00ea percorrer elementos de uma cole\u00e7\u00e3o sem expor as representa\u00e7\u00f5es dele (lista, pilha, \u00e1rvore, etc.) Al\u00e9m de implementar o algoritmo em si, um objeto iterador encapsula todos os detalhes da travessia, tais como a posi\u00e7\u00e3o atual e quantos elementos faltam para chegar ao fim. Por causa disso, alguns iteradores podem averiguar a mesma cole\u00e7\u00e3o ao mesmo tempo, independentemente um do outro. O Iterator \u00e9 utilizado quando se quer que o c\u00f3digo seja capaz de percorrer diferentes estruturas de dados ou quando os tipos dessas estruturas s\u00e3o desconhecidos de antem\u00e3o.","title":"4. Iterator"},{"location":"Padroes_de_projeto/GOFs/gof_comportamental/#estrutura_2","text":"Interface Iterador - declara as opera\u00e7\u00f5es necess\u00e1rias para percorrer uma cole\u00e7\u00e3o: buscar o pr\u00f3ximo elemento, pegar a posi\u00e7\u00e3o atual, recome\u00e7ar a itera\u00e7\u00e3o e outras Iteradores Concretos - implementam algoritmos espec\u00edficos para percorrer uma cole\u00e7\u00e3o. O objeto iterador deve monitorar o progresso da travessia por conta pr\u00f3pria. Isso permite que diversos iteradores percorram a mesma cole\u00e7\u00e3o independentemente de cada um. Interface Cole\u00e7\u00e3o - declara um ou mais m\u00e9todos para obter os iteradores compat\u00edveis com a cole\u00e7\u00e3o. Cole\u00e7\u00f5es Concretas - retornam novas inst\u00e2ncias de uma classe iterador concreta em particular cada vez que o cliente pede por uma. Client - trabalha tanto com as cole\u00e7\u00f5es como os iteradores atrav\u00e9s de suas interfaces. Dessa forma o cliente n\u00e3o fica acoplado a suas classes concretas, permitindo usar v\u00e1rias cole\u00e7\u00f5es e iteradores com o mesmo c\u00f3digo client.","title":"Estrutura"},{"location":"Padroes_de_projeto/GOFs/gof_comportamental/#41-vantagens","text":"Princ\u00edpio de responsabilidade \u00fanica. \u00c9 poss\u00edvel limpar o c\u00f3digo cliente e as cole\u00e7\u00f5es ao extrair os pesados algoritmos de travessia para classes separadas. Princ\u00edpio aberto/fechado. \u00c9 poss\u00edvel implementar novos tipos de cole\u00e7\u00f5es e iteradores e pass\u00e1-los para o c\u00f3digo existente sem quebrar coisa alguma. \u00c9 poss\u00edvel iterar sobre a mesma cole\u00e7\u00e3o em paralelo porque cada objeto iterador cont\u00e9m seu pr\u00f3prio estado de itera\u00e7\u00e3o. Pelas mesmas raz\u00f5es, \u00e9 poss\u00edvel atrasar uma itera\u00e7\u00e3o e continu\u00e1-la quando necess\u00e1rio.","title":"4.1 Vantagens"},{"location":"Padroes_de_projeto/GOFs/gof_comportamental/#42-desvantagens","text":"Aplicar o padr\u00e3o pode ser um preciosismo se sua aplica\u00e7\u00e3o s\u00f3 trabalha com cole\u00e7\u00f5es simples. Usar um iterador pode ser menos eficiente que percorrer elementos de algumas cole\u00e7\u00f5es especializadas diretamente.","title":"4.2 Desvantagens"},{"location":"Padroes_de_projeto/GOFs/gof_comportamental/#43-aplicacao-no-projeto","text":"No nosso projeto, v\u00e1rios tipos de listas ser\u00e3o obtidas do backend , a princ\u00edpio por meio de um objeto JSON, para serem tratadas exibidas ao usu\u00e1rio no frontend . Com isso, a constru\u00e7\u00e3o de um Iterator se torna interessante devido \u00e0 variedade das listas, assim como seu tamanho, permitindo re\u00faso. Abaixo temos um trecho de c\u00f3digo escrito em JavaScript, que ser\u00e1 usado pelo React, com a implementa\u00e7\u00e3o de um Iterator : const Iterator = function ( items ) { this . index = 0 ; this . items = items ; } Iterator . prototype = { first : function () { this . reset (); return this . next (); }, next : function () { return this . items [ this . index ++ ]; }, hasNext : function () { return this . index <= this . items . length ; }, reset : function () { this . index = 0 ; }, each : function ( callback ) { for ( var item = this . first (); this . hasNext (); item = this . next ()) { callback ( item ); } } } module . exports = Iterator ; Abaixo, temos um exemplo do uso do Iterator no React, onde uma lista, independente do que se trata, ser\u00e1 iterada e seus objetos ser\u00e3o adicionados a um state. A fun\u00e7\u00e3o useEffect executa a fun\u00e7\u00e3o de percorrer a lista quando o componente em quest\u00e3o \u00e9 montado. const [ data , setData ] = useState ([]); const loadData = () => { let iter = new Iterator ( list ); for ( let item = iter . first (); iter . hasNext (); item = iter . next ()){ setData ( data => [... data , item ]); } } useEffect (() => { loadData () }, []);","title":"4.3 Aplica\u00e7\u00e3o no Projeto"},{"location":"Padroes_de_projeto/GOFs/gof_comportamental/#5-mediator","text":"O Mediator \u00e9 um padr\u00e3o de projeto comportamental que permite que voc\u00ea reduza as depend\u00eancias ca\u00f3ticas entre objetos. O padr\u00e3o restringe comunica\u00e7\u00f5es diretas entre objetos e os for\u00e7a a colaborar apenas atrav\u00e9s do objeto mediador.","title":"5. Mediator"},{"location":"Padroes_de_projeto/GOFs/gof_comportamental/#estrutura_3","text":"Componentes - s\u00e3o v\u00e1rias classes que cont\u00e9m alguma l\u00f3gica de neg\u00f3cio. Cada componente tem uma refer\u00eancia a um mediador, declarada com o tipo de interface do mediador. O componente n\u00e3o est\u00e1 ciente da classe atual do mediador, ent\u00e3o \u00e9 poss\u00edvel reutilizar o componente em outros programas ao lig\u00e1-lo com um mediador diferente. Interface do Mediador - declara m\u00e9todos de comunica\u00e7\u00e3o com os componentes, os quais geralmente incluem apenas um m\u00e9todo de notifica\u00e7\u00e3o. Os componentes podem passar qualquer contexto como argumentos desse m\u00e9todo, incluindo seus pr\u00f3prios objetos, mas apenas de tal forma que nenhum acoplamento ocorra entre um componente destinat\u00e1rio e a classe remetente. Mediadores Concretos - encapsulam as rela\u00e7\u00f5es entre v\u00e1rios componentes. Os mediadores concretos quase sempre mant\u00e9m refer\u00eancias de todos os componentes os quais gerenciam e, algumas vezes, at\u00e9 gerenciam o ciclo de vida deles. Componentes n\u00e3o devem estar cientes de outros componentes - se algo importante acontece dentro ou para um componente, ele deve apenas notificar o mediador. Quando o mediador recebe a notifica\u00e7\u00e3o, ele pode facilmente identificar o remetente, o que \u00e9 suficiente para decidir que componente deve ser acionado em retorno. Da perspectiva de um componente, tudo parece como uma caixa preta. O remetente n\u00e3o sabe quem vai acabar lidando com o seu pedido, e o destinat\u00e1rio n\u00e3o sabe quem enviou o pedido em primeiro lugar.","title":"Estrutura"},{"location":"Padroes_de_projeto/GOFs/gof_comportamental/#51-vantagens","text":"Princ\u00edpio de responsabilidade \u00fanica. \u00c9 poss\u00edvel extrair as comunica\u00e7\u00f5es entre v\u00e1rios componentes para um \u00fanico lugar, tornando as de mais f\u00e1cil entendimento e manuten\u00e7\u00e3o. Princ\u00edpio aberto/fechado. \u00c9 poss\u00edvel introduzir novos mediadores sem ter que mudar os pr\u00f3prios componentes. \u00c9 poss\u00edvel reduzir o acoplamento entre os v\u00e1rios componentes de um programa. \u00c9 poss\u00edvel reutilizar componentes individuais mais facilmente.","title":"5.1 Vantagens"},{"location":"Padroes_de_projeto/GOFs/gof_comportamental/#52-desvantagens","text":"Com o tempo um mediador pode evoluir para um Objeto Deus. Na programa\u00e7\u00e3o orientada a objetos, um Objeto Deus \u00e9 um objeto que sabe demais ou faz demais. O objeto deus \u00e9 um exemplo de um antipadr\u00e3o em projetos de software.","title":"5.2 Desvantagens"},{"location":"Padroes_de_projeto/GOFs/gof_comportamental/#53-aplicacao-no-projeto","text":"No escopo estendido da aplica\u00e7\u00e3o, o mediator pode se caracterizar como um mediador entre um usu\u00e1rio cliente (Customer) e um usu\u00e1rio dono de estabelecimento (Owner), por meio de um componente de chat.","title":"5.3 Aplica\u00e7\u00e3o no Projeto"},{"location":"Padroes_de_projeto/GOFs/gof_comportamental/#6-memento","text":"O Memento \u00e9 um padr\u00e3o de projeto comportamental que permite que voc\u00ea salve e restaure o estado anterior de um objeto sem revelar os detalhes de sua implementa\u00e7\u00e3o. O padr\u00e3o Memento \u00e9 usado quando se quer produzir retratos ( snapshots ) do estado de um objeto para ser capaz de restaurar um estado anterior do objeto.","title":"6. Memento"},{"location":"Padroes_de_projeto/GOFs/gof_comportamental/#estrutura_4","text":"Classe Originadora - pode produzir retratos de seu pr\u00f3prio estado, bem como restaurar seu estado de retratos quando necess\u00e1rio. Memento - \u00e9 um objeto de valor que age como um retrato do estado da originadora. \u00c9 uma pr\u00e1tica comum fazer o memento imut\u00e1vel e passar os dados para ele apenas uma vez, atrav\u00e9s do construtor. Cuidadora - sabe n\u00e3o s\u00f3 \u201cquando\u201d e \u201cpor qu\u00ea\u201d capturar o estado da originadora, mas tamb\u00e9m quando o estado deve ser restaurado. Nessa implementa\u00e7\u00e3o, a classe memento est\u00e1 aninhada dentro da originadora. Isso permite que a originadora acesse os campos e m\u00e9todos do memento, mesmo que eles tenham sido declarados privados. Por outro lado, a cuidadora tem um acesso muito limitado aos campos do memento, que permite ela armazenar os mementos em uma pilha, mas n\u00e3o permite mexer com seu estado.","title":"Estrutura"},{"location":"Padroes_de_projeto/GOFs/gof_comportamental/#61-vantagens","text":"\u00c9 poss\u00edvel produzir retratos do estado de um objeto sem violar seu encapsulamento. \u00c9 poss\u00edvel simplificar o c\u00f3digo da originadora permitindo que a cuidadora mantenha o hist\u00f3rico do estado da originadora.","title":"6.1 Vantagens"},{"location":"Padroes_de_projeto/GOFs/gof_comportamental/#62-desvantagens","text":"A aplica\u00e7\u00e3o pode consumir muita RAM se os clientes criarem mementos com muita frequ\u00eancia. Cuidadoras devem acompanhar o ciclo de vida da originadora para serem capazes de destruir mementos obsoletos. A maioria das linguagens de programa\u00e7\u00e3o din\u00e2micas, tais como PHP, Python, e JavaScript, n\u00e3o conseguem garantir que o estado dentro do memento permane\u00e7a intacto.","title":"6.2 Desvantagens"},{"location":"Padroes_de_projeto/GOFs/gof_comportamental/#63-aplicacao-no-projeto","text":"Esse comportamento pode ser usado em componentes de escrita, como no chat ou avalia\u00e7\u00e3o do estabelecimento. As tags de entreda do HTML cont\u00eam mec\u00e2nismos de um memento.","title":"6.3 Aplica\u00e7\u00e3o no Projeto"},{"location":"Padroes_de_projeto/GOFs/gof_comportamental/#7-observer","text":"O Observer \u00e9 um padr\u00e3o de projeto comportamental que permite que voc\u00ea defina um mecanismo de assinatura para notificar m\u00faltiplos objetos sobre quaisquer eventos que aconte\u00e7am com o objeto que eles est\u00e3o observando. Tamb\u00e9m pode ser conhecido como Observador, Assinante do evento, Event-Subscriber, Escutador, Listener. O padr\u00e3o Observer pode ser usado quando mudan\u00e7as no estado de um objeto podem precisar mudar outros objetos, e o atual conjunto de objetos \u00e9 desconhecido de antem\u00e3o ou muda dinamicamente.","title":"7. Observer"},{"location":"Padroes_de_projeto/GOFs/gof_comportamental/#estrutura_5","text":"Publicadora - manda eventos de interesse para outros objetos. Esses eventos ocorrem quando a publicadora muda seu estado ou executa algum comportamento. As publicadoras cont\u00eam uma infraestrutura de inscri\u00e7\u00e3o que permite novos assinantes se juntar aos atuais assinantes ou deixar a lista. Quando um novo evento acontece, a publicadora percorre a lista de assinantes e chama o m\u00e9todo de notifica\u00e7\u00e3o declarado na interface do assinante em cada objeto assinante. Interface Assinante - declara a interface de notifica\u00e7\u00e3o. Na maioria dos casos ela consiste de um \u00fanico m\u00e9todo atualizar. O m\u00e9todo pode ter v\u00e1rios par\u00e2metros que permite que a publicadora passe alguns detalhes do evento junto com a atualiza\u00e7\u00e3o. Assinantes Concretos - realizam algumas a\u00e7\u00f5es em resposta \u00e0s notifica\u00e7\u00f5es enviadas pela publicadora. Todas essas classes devem implementar a mesma interface para que a publicadora n\u00e3o fique acoplada \u00e0 classes concretas. Geralmente, assinantes precisam de alguma informa\u00e7\u00e3o contextual para lidar com a atualiza\u00e7\u00e3o corretamente. Por esse motivo, as publicadoras quase sempre passam algum dado de contexto como argumentos do m\u00e9todo de notifica\u00e7\u00e3o. A publicadora pode passar a si mesmo como um argumento, permitindo que o assinante recupere quaisquer dados diretamente. Cliente - cria a publicadora e os objetos assinantes separadamente e ent\u00e3o registra os assinantes para as atualiza\u00e7\u00f5es da publicadora.","title":"Estrutura"},{"location":"Padroes_de_projeto/GOFs/gof_comportamental/#71-vantagens","text":"Princ\u00edpio aberto/fechado. \u00c9 poss\u00edvel introduzir novas classes assinantes sem ter que mudar o c\u00f3digo da publicadora (e vice versa se existe uma interface publicadora). \u00c9 poss\u00edvel estabelecer rela\u00e7\u00f5es entre objetos durante a execu\u00e7\u00e3o.","title":"7.1 Vantagens"},{"location":"Padroes_de_projeto/GOFs/gof_comportamental/#72-desvantagens","text":"Assinantes s\u00e3o notificados em ordem aleat\u00f3ria","title":"7.2 Desvantagens"},{"location":"Padroes_de_projeto/GOFs/gof_comportamental/#73-aplicacao-no-projeto","text":"O chat, al\u00e9m de um mediator, tamb\u00e9m aplica o padr\u00e3o de Observer, uma vez que ele precisa manter uma lista dos usu\u00e1rios participantes, e precisa escutar os eventos de conex\u00e3o, desconex\u00e3o e envio de mensagens entre os usu\u00e1rios.","title":"7.3 Aplica\u00e7\u00e3o no Projeto"},{"location":"Padroes_de_projeto/GOFs/gof_comportamental/#8-state","text":"O State \u00e9 um padr\u00e3o de projeto comportamental que permite que um objeto altere seu comportamento quando seu estado interno muda. \u00c9 como se o objeto mudasse de classe. O padr\u00e3o State pode ser usado quando se tem um objeto que se comporta de maneira diferente dependendo do seu estado atual, quando o n\u00famero de estados \u00e9 enorme, e quando o c\u00f3digo estado espec\u00edfico muda com frequ\u00eancia.","title":"8. State"},{"location":"Padroes_de_projeto/GOFs/gof_comportamental/#estrutura_6","text":"Contexto - armazena uma refer\u00eancia a um dos objetos concretos de estado e delega a eles todos os trabalhos espec\u00edficos de estado. O contexto se comunica com o objeto estado atrav\u00e9s da interface do estado. O contexto exp\u00f5e um setter para passar a ele um novo objeto de estado. Interface do Estado - declara m\u00e9todos espec\u00edficos a estados. Esses m\u00e9todos devem fazer sentido para todos os estados concretos porque voc\u00ea n\u00e3o quer alguns dos seus estados tendo m\u00e9todos in\u00fateis que nunca ir\u00e3o ser chamados. Estados Concretos - fornecem suas pr\u00f3prias implementa\u00e7\u00f5es para os m\u00e9todos espec\u00edficos de estados. Objetos de estado podem armazenar refer\u00eancias retroativas para o objeto de contexto. Atrav\u00e9s dessa refer\u00eancia o estado pode buscar qualquer informa\u00e7\u00e3o desejada do objeto contexto, assim como iniciar transi\u00e7\u00f5es de estado. Ambos os estados de contexto e concretos podem configurar o pr\u00f3ximo estado do contexto e realizar a atual transi\u00e7\u00e3o de estado ao substituir o objeto estado ligado ao contexto.","title":"Estrutura"},{"location":"Padroes_de_projeto/GOFs/gof_comportamental/#81-vantagens","text":"Princ\u00edpio de responsabilidade \u00fanica. Organiza o c\u00f3digo relacionado a estados particulares em classes separadas. Princ\u00edpio aberto/fechado. Introduz novos estados sem mudar classes de estado ou contexto existentes. Simplifica o c\u00f3digo de contexto ao eliminar condicionais de m\u00e1quinas de estado pesadas","title":"8.1 Vantagens"},{"location":"Padroes_de_projeto/GOFs/gof_comportamental/#82-desvantagens","text":"Aplicar o padr\u00e3o pode ser um exagero se a m\u00e1quina de estado s\u00f3 tem alguns estados ou raramente muda eles.","title":"8.2 Desvantagens"},{"location":"Padroes_de_projeto/GOFs/gof_comportamental/#83-aplicacao-no-projeto","text":"O gerenciamento de estado de componentes \u00e9 muito utilizado no frontend. Um exemplo disso pode ser a mudan\u00e7a de contexto entre a tela inicial e a visualiza\u00e7\u00e3o de algum estabelecimento espec\u00edfico.","title":"8.3 Aplica\u00e7\u00e3o no Projeto"},{"location":"Padroes_de_projeto/GOFs/gof_comportamental/#9-strategy","text":"O Strategy \u00e9 um padr\u00e3o de projeto comportamental que permite que voc\u00ea defina uma fam\u00edlia de algoritmos, coloque-os em classes separadas, e fa\u00e7a os objetos deles intercambi\u00e1veis. O padr\u00e3o Strategy sugere que se pegue uma classe que faz algo espec\u00edfico em diversas maneiras diferentes e extraia todos esses algoritmos para classes separadas chamadas estrat\u00e9gias. Pode ser utilizado quando se tem muitas classes parecidas que somente diferem na forma que elas executam algum comportamento.","title":"9. Strategy"},{"location":"Padroes_de_projeto/GOFs/gof_comportamental/#estrutura_7","text":"Contexto - mant\u00e9m uma refer\u00eancia para uma das estrat\u00e9gias concretas e se comunica com esse objeto atrav\u00e9s da interface da estrat\u00e9gia. Interface Estrat\u00e9gia - \u00e9 comum \u00e0 todas as estrat\u00e9gias concretas. Ela declara um m\u00e9todo que o contexto usa para executar uma estrat\u00e9gia. Estrat\u00e9gias Concretas - implementam diferentes varia\u00e7\u00f5es de um algoritmo que o contexto usa. O contexto chama o m\u00e9todo de execu\u00e7\u00e3o no objeto estrat\u00e9gia ligado cada vez que ele precisa rodar um algoritmo. O contexto n\u00e3o sabe qual tipo de estrat\u00e9gia ele est\u00e1 trabalhando ou como o algoritmo \u00e9 executado. Client - cria um objeto estrat\u00e9gia espec\u00edfico e passa ele para o contexto. O contexto exp\u00f5e um setter que permite o cliente mudar a estrat\u00e9gia associada com contexto durante a execu\u00e7\u00e3o.","title":"Estrutura"},{"location":"Padroes_de_projeto/GOFs/gof_comportamental/#91-vantagens","text":"\u00c9 poss\u00edvel trocar algoritmos usados dentro de um objeto durante a execu\u00e7\u00e3o. \u00c9 poss\u00edvel isolar os detalhes de implementa\u00e7\u00e3o de um algoritmo do c\u00f3digo que usa ele. \u00c9 poss\u00edvel substituir a heran\u00e7a por composi\u00e7\u00e3o. Princ\u00edpio aberto/fechado. \u00c9 poss\u00edvel introduzir novas estrat\u00e9gias sem mudar o contexto.","title":"9.1 Vantagens"},{"location":"Padroes_de_projeto/GOFs/gof_comportamental/#92-desvantagens","text":"Se existe s\u00f3 tem um par de algoritmos e eles raramente mudam, n\u00e3o h\u00e1 motivo real para deixar o programa mais complicado com novas classes e interfaces que v\u00eam junto com o padr\u00e3o. Os Clientes devem estar cientes das diferen\u00e7as entre as estrat\u00e9gias para serem capazes de selecionar a adequada. Muitas linguagens de programa\u00e7\u00e3o modernas tem suporte do tipo funcional que permite que implemente diferentes vers\u00f5es de um algoritmo dentro de um conjunto de fun\u00e7\u00f5es an\u00f4nimas. Ent\u00e3o \u00e9 poss\u00edvel usar essas fun\u00e7\u00f5es exatamente como se estivesse usando objetos estrat\u00e9gia, mas sem inchar seu c\u00f3digo com classes e interfaces adicionais.","title":"9.2 Desvantagens"},{"location":"Padroes_de_projeto/GOFs/gof_comportamental/#93-aplicacao-no-projeto","text":"As classes User, Estabilishment e Service precisam ter inst\u00e2ncias salvas, atualizadas ou apagadas. Uma aplica\u00e7\u00e3o de Strategy nesse caso poderia usar uma interface Register, cujas classes concretas se encarregam dessas opera\u00e7\u00f5es de forma especializada para cada entidade que necessita dessas opera\u00e7\u00f5es.","title":"9.3 Aplica\u00e7\u00e3o no Projeto"},{"location":"Padroes_de_projeto/GOFs/gof_comportamental/#10-template-method","text":"Tamb\u00e9m conhecido como M\u00e9todo padr\u00e3o, \u00e9 um padr\u00e3o de projeto comportamental que define o esqueleto de um algoritmo na superclasse mas deixa as subclasses sobrescreverem etapas espec\u00edficas do algoritmo sem modificar sua estrutura. Pode ser utilizade quando se tem v\u00e1rias classes que cont\u00e9m algoritmos quase id\u00eanticos com algumas diferen\u00e7as menores. Como resultado, \u00e9 poss\u00edvel querer modificar todas as classes quando o algoritmo muda.","title":"10. Template Method"},{"location":"Padroes_de_projeto/GOFs/gof_comportamental/#estrutura_8","text":"Classe Abstrata - declara m\u00e9todos que agem como etapas de um algoritmo, bem como o pr\u00f3prio m\u00e9todo padr\u00e3o que chama esses m\u00e9todos em uma ordem espec\u00edfica. Os passos podem ser declarados como abstratos ou ter alguma implementa\u00e7\u00e3o padr\u00e3o. Classes Concretas - podem sobrescrever todas as etapas, mas n\u00e3o o pr\u00f3prio m\u00e9todo padr\u00e3o.","title":"Estrutura"},{"location":"Padroes_de_projeto/GOFs/gof_comportamental/#101-vantagens","text":"\u00c9 poss\u00edvel deixar clientes sobrescrever apenas certas partes de um algoritmo grande, tornando-os menos afetados por mudan\u00e7as que acontece por outras partes do algoritmo. \u00c9 poss\u00edvel elevar o c\u00f3digo duplicado para uma superclasse.","title":"10.1 Vantagens"},{"location":"Padroes_de_projeto/GOFs/gof_comportamental/#102-desvantagens","text":"Alguns clientes podem ser limitados ao fornecer o esqueleto de um algoritmo. Implementa\u00e7\u00f5es do padr\u00e3o Template Method tendem a ser mais dif\u00edceis de se manter quanto mais etapas eles tiverem.","title":"10.2 Desvantagens"},{"location":"Padroes_de_projeto/GOFs/gof_comportamental/#103-aplicacao-no-projeto","text":"N\u00e3o foram identificados casos que o Template Method precise ser implementado no projeto. Entretanto esse padr\u00e3o pode ser observado em fun\u00e7\u00f5es muito usadas como filter ou order no Javascript, que recebem fun\u00e7\u00f5es para controlar os elementos internos de cole\u00e7\u00f5es.","title":"10.3 Aplica\u00e7\u00e3o no Projeto"},{"location":"Padroes_de_projeto/GOFs/gof_comportamental/#11-visitor","text":"O Visitor \u00e9 um padr\u00e3o de projeto comportamental que permite que voc\u00ea separe algoritmos dos objetos nos quais eles operam. O padr\u00e3o Visitor sugere que voc\u00ea coloque o novo comportamento em uma classe separada chamada visitante, ao inv\u00e9s de tentar integr\u00e1-lo em classes j\u00e1 existentes. \u00c9 poss\u00edvel utilizar o Visitor quando se quer fazer uma opera\u00e7\u00e3o em todos os elementos de uma estrutura de objetos complexa.","title":"11. Visitor"},{"location":"Padroes_de_projeto/GOFs/gof_comportamental/#estrutura_9","text":"Interface Visitante - declara um conjunto de m\u00e9todos visitantes que podem receber elementos concretos de uma estrutura de objetos como argumentos. Esses m\u00e9todos podem ter os mesmos nomes se o programa \u00e9 escrito em uma linguagem que suporta sobrecarregamento, mas o tipo dos par\u00e2metros devem ser diferentes. Visitante Concreto - implementa diversas vers\u00f5es do mesmo comportamento, feitos sob medida para diferentes elementos concretos de classes. A interface Elemento - declara um m\u00e9todo para \u201caceitar\u201d visitantes. Esse m\u00e9todo deve ter um par\u00e2metro declarado com o tipo da interface do visitante. Elemento Concreto - deve implementar o m\u00e9todo de aceita\u00e7\u00e3o. O prop\u00f3sito desse m\u00e9todo \u00e9 redirecionar a chamada para o m\u00e9todo visitante apropriado que corresponde com a atual classe elemento. Esteja atento que mesmo se uma classe elemento base implemente esse m\u00e9todo, todas as subclasses deve ainda sobrescrever esse m\u00e9todo em suas pr\u00f3prias classes e chamar o m\u00e9todo apropriado no objeto visitante. Cliente - geralmente representa uma cole\u00e7\u00e3o de outros objetos complexos. Geralmente, os clientes n\u00e3o est\u00e3o cientes de todos as classes elemento concretas porque eles trabalham com objetos daquele cole\u00e7\u00e3o atrav\u00e9s de uma interface abstrata.","title":"Estrutura"},{"location":"Padroes_de_projeto/GOFs/gof_comportamental/#111-vantagens","text":"Princ\u00edpio aberto/fechado. \u00c9 poss\u00edvel introduzir um novo comportamento que pode funcionar com objetos de diferentes classes sem mudar essas classes. Princ\u00edpio de responsabilidade \u00fanica. \u00c9 poss\u00edvel mover m\u00faltiplas vers\u00f5es do mesmo comportamento para dentro da mesma classe. Um objeto visitante pode acumular algumas informa\u00e7\u00f5es \u00fateis enquanto trabalha com v\u00e1rios objetos. Isso pode ser interessante quando se quer percorrer algum objeto de estrutura complexa e aplicar o visitante para cada objeto da estrutura.","title":"11.1 Vantagens"},{"location":"Padroes_de_projeto/GOFs/gof_comportamental/#112-desvantagens","text":"\u00c9 necess\u00e1rio atualizar todos os visitantes a cada vez que a classe \u00e9 adicionada ou removida da hierarquia de elementos. Visitantes podem n\u00e3o ter seu acesso permitido para campos e m\u00e9todos privados dos elementos que eles deveriam estar trabalhando.","title":"11.2 Desvantagens"},{"location":"Padroes_de_projeto/GOFs/gof_comportamental/#113-aplicacao-no-projeto","text":"N\u00e3o foram identificadas aplica\u00e7\u00f5es para este padr\u00e3o.","title":"11.3 Aplica\u00e7\u00e3o no Projeto"},{"location":"Padroes_de_projeto/GOFs/gof_comportamental/#13-referencias","text":"[1] - Padr\u00f5es de projeto comportamentais. Dispon\u00edvel em: https://refactoring.guru/pt-br/design-patterns/behavioral-patterns . [2] - ALESSANDRO FERREIRA LEITE. Conhe\u00e7a os Padr\u00f5es de Projeto. Dispon\u00edvel em: https://www.devmedia.com.br/conheca-os-padroes-de-projeto/957 . \u200c \u200c","title":"13. Refer\u00eancias"},{"location":"Padroes_de_projeto/GOFs/gof_comportamental/#14-versionamento","text":"Data Nome Detalhes Vers\u00e3o 03/04/2021 N\u00edcalo Ribeiro Cria\u00e7\u00e3o da estrutura base do documento 0.1 03/04/2021 N\u00edcalo, Wagner, Hugo Adi\u00e7\u00e3o dos conceitos de Chain of Responsibility 0.2 03/04/2021 N\u00edcalo, Wagner, Hugo Adi\u00e7\u00e3o dos conceitos de Command e Iterator 0.3 03/04/2021 N\u00edcalo, Wagner, Hugo Adi\u00e7\u00e3o dos conceitos de Mediator, Memento, Observer e State 0.4 03/04/2021 N\u00edcalo, Wagner, Hugo Adi\u00e7\u00e3o dos conceitos de Strategy, Template Method e Visitor 0.5 08/04/2021 Wagner Martins Adi\u00e7\u00e3o da modelagem e c\u00f3digo do padr\u00e3o command 0.6 08/04/2021 N\u00edcalo Ribeiro Adi\u00e7\u00e3o do c\u00f3digo do padr\u00e3o Iterator 0.7 09/04/2021 Wagner Martins Adi\u00e7\u00e3o de ideias de aplica\u00e7\u00e3o no projeto para os outros padr\u00f5es 0.8 09/04/2021 Wagner Martins Atualiza\u00e7\u00e3o da aplica\u00e7\u00e3o no padr\u00e3o chain of responsability 0.9","title":"14. Versionamento"},{"location":"Padroes_de_projeto/GOFs/gof_criacional/","text":"GoFs Criacionais 1. Introdu\u00e7\u00e3o Os padr\u00f5es de projeto criacionais abstraem o proceso de instancia\u00e7\u00e3o do objeto. Eles ajudam a fazer o sistema independente na maneira em que s\u00e3o criados, compostos e representados. Em outras palavras esse padr\u00f5es se concentram em oferecer solu\u00e7\u00f5es para problemas recorrentes principalmente na cria\u00e7\u00e3o/instancia\u00e7\u00e3o de objetos. A seguir iremos apresentar os principais padr\u00f5es criacionais e como eles se aplicam o projeto, explicando tamb\u00e9m o problema/solu\u00e7\u00e3o. Ser\u00e1 apresentado tamb\u00e9m os casos em que os padr\u00f5es n\u00e3o ser\u00e3o aplicados e o motivo. 2. Factory Method O factory method (m\u00e9todo de f\u00e1brica) consiste no instanciamento de um produto concreto que usa uma interface, por exemplo, uma aplica\u00e7\u00e3o que requer um objeto com uma interface espec\u00edfica para realizar as tarefas. Em termos pr\u00e1ticos \u00e9 uma cria\u00e7\u00e3o de uma classe que ser\u00e1 f\u00e1brica de um determinando produto. Exixtem duas implementa\u00e7\u00f5es encontrada: a primeira \u00e9 uma f\u00e1brica concreta para todos as classes que implementam uma interface e a segunda \u00e9 uma f\u00e1brica para cada produto que implementa a interface. Enquanto a primeira seja mais simples de ser implementada, apenas a segunda atende o principio do open/close. Estrutura \u00c9 declarada uma interface , que \u00e9 comum a todos os objetos que podem ser produzidos pelo criador pelo criador e suas subclasses. Em seguida as classes criadas ser\u00e3o implementa\u00e7\u00f5es dessa interface . A classe Criadora declara o m\u00e9todo f\u00e1brica que retorna novos objetos produto, e logo ap\u00f3s retornando o resultado para a interface . As classes criadoras filhas sobrescrevem o m\u00e9todo f\u00e1brica da Criadora , logo ap\u00f3s retornando um tipo diferente de produto. 2.1. Vantagens Poder facilmente adicionar mais produtos concretos que utilizam a mesma interface. Evitar um alto grau de acoplamento no c\u00f3digo. Obedece ao princ\u00edpio da responsabilidade \u00fanica. 2.2. Desvantagens Caso seu uso seja excessivo pode acarretar a um grande n\u00famero de subclasses e de arquivos dentro do software. 2.3. Aplica\u00e7\u00e3o no projeto Na nossa aplica\u00e7\u00e3o ir\u00e1 existir tr\u00eas tipos de usu\u00e1rios: Admin , Owner e Costumer . Dado essa situa\u00e7\u00e3o, a equipe decidiu por aplicar o factory method por facilitar\u00e1 o instanciamento dessas classes. Esse tr\u00eas tipos de usu\u00e1rios ser\u00e3o classes que herdar\u00e3o de uma classe User possibilitando a aplica\u00e7\u00e3o desse padr\u00e3o de projeto. A implementa\u00e7\u00e3o em c\u00f3digo seria, por exemplo: from abc import ABC , abstractmethod class UserFactory ( ABC ): @abstractmethod def getUser ( self , username , password ): pass class AdminFactory ( UserFactory ): def getUser ( self , username , password ) -> User : return Admin ( username , password ) class CustomerFactory ( UserFactory ): def getUser ( self , username , password , name ) -> User : return Customer ( username , password , name ) class OwnerFactory ( UserFactory ): def getUser ( self , username , password , name ) -> User : return Owner ( username , password , name ) 3. Builder O padr\u00e3o de projeto Builder tem como objetivo separar a constru\u00e7\u00e3o de objetos complexos da sua representa\u00e7\u00e3o de modo que o mesmo processo de constru\u00e7\u00e3o pode criar v\u00e1rias representa\u00e7\u00f5es. Seu funcionamento come\u00e7a na classe Director que possui o m\u00e9todo que chama o ConcrectBuilder espec\u00edfico, de acordo com os par\u00e2metros especificados. Essa classe n\u00e3o \u00e9 essencial nesse padr\u00e3o, mas \u00e9 importante. Outra parte desse processo s\u00e3o as classes Builders ; a primeira \u00e9 uma classe abstrata que declara os m\u00e9todos que devem ser implementados por um ConcrectBuilder ; esta classe \u00e9 uma classe concreta que implementa os m\u00e9todos necess\u00e1rios para a constru\u00e7\u00e3o do produto e, por fim, a classe Product \u00e9 o resutado da constru\u00e7\u00e3o implementada no ConcrectBuilder . Tendo em vista esse processo, ess padr\u00e3o de projeto \u00e9 vantajoso somente se o processo de contru\u00e7\u00e3o do produto em s\u00ed \u00e9 muito complexo, sendo necess\u00e1rio a separa\u00e7\u00e3o de responsabilidades entre as classes. Estrutura A interface Builder declara etapas de constru\u00e7\u00e3o do produto que s\u00e3o comuns a todos os tipos de de builders. Os Builders Concretos trazem diferentes implementa\u00e7\u00f5es das etapas de constru\u00e7\u00e3o. Builders Concretos podem produzir podem produzir produtos que n\u00e3o seguem a interface comum. Os Produtos s\u00e3o objetos resultantes. Produtos constru\u00eddos pode diferentes builders n\u00e3o precisam pertencer a mesma interface ou hierarquia da classe. Uma classe chamada Diretor define a ordem na qual as etapas de constru\u00e7\u00e3o s\u00e3o chamadas, ent\u00e3o voc\u00ea pode criar e reutilizar configura\u00e7\u00f5es espec\u00edficas de produtos. Uma classe Cliente deve associas um dos objetos builders como o construtor do Diretor . Geralmente isso \u00e9 feito apenas uma vez, atrav\u00e9s de par\u00e2metros do construtor do diretor. O Diretor ent\u00e3o usa aquele objeto builder para todas as futuras constru\u00e7\u00f5es. 3.1. Vantagens Pode-se usar a mesma constru\u00e7\u00e3o para diversas representa\u00e7\u00f5es do produto. Em outras palavras favorece a reusabilidade do c\u00f3digo. Pelo princ\u00edpio da \u00fanica responsabilidade, \u00e9 separado a responsabilidade de construir o objeto de quem o usa. \u00c9 poss\u00edvel criar uma constru\u00e7\u00e3o de um objeto em etapas. Entrega um maior controle sobre a constru\u00e7\u00e3o de um objeto. 3.2. Desvantagens Aumenta a complexidade do c\u00f3digo, ja que esse padr\u00e3o requer a cria\u00e7\u00e3o de m\u00faltiplas classes. Requer que a classe Builder seja mut\u00e1vel. 3.3. Aplica\u00e7\u00e3o no projeto Todas as classes do projeto n\u00e3o t\u00eam mais de 4 atributos que necessitam ser inicializados junto ao objeto, oque torna a cria\u00e7\u00e3o da maioria das classes simples ao ponto de o padr\u00e3o de projeto builder se tornar desisteressante. H\u00e1 apenas uma classe que pode ser usada para aplicar o m\u00e9todo Builder que \u00e9 a OpeningHours , ja que os hor\u00e1rios de abertura e fechamento est\u00e3o em um formato espec\u00edfico e cada dia da semana tem um pr\u00f3prio funcionamento; atualmente a responsabilidade para contru\u00e7\u00e3o desse objeto \u00e9 da pr\u00f3pria classe Opening Hours . 4. Singleton Garante que uma classe tenha apenas uma inst\u00e2ncia em todo o c\u00f3digo e oferece um ponto de acesso global para essa classe. Em outras palavras, esse padr\u00e3o \u00e9 usada para quando precisa de uma classe de acesso global no c\u00f3digo, garantindo apenas uma inst\u00e2ncia. Para isso \u00e9 necess\u00e1rio a implementa\u00e7\u00e3o de uma classe que ir\u00e1 ser a vari\u00e1vel global e em caso de multithreading ir\u00e1 controlar tamb\u00e9m o acesso, sob risco de criar novas inst\u00e2ncias. Estrutura A classe Singleton declara o m\u00e9todo est\u00e1tico getInstancia que retorna a mesma inst\u00e2ncia de sua classe. O construtor da singleton deve ser escondido do c\u00f3digo client . Chamando o m\u00e9todo getInstancia deve ser o \u00fanico modo de obter o objeto singleton. 4.1. Vantagens Controla o acesso a essa inst\u00e2ncia. Facilidade em permitir um maior n\u00famero de inst\u00e2ncias (Multiton); Substitui vari\u00e1veis globais. 4.2. Desvantagens \u00c9 mais dif\u00edcil de testar, visto que v\u00e1rias partes do c\u00f3digo alteram essa classe. Viola o princ\u00edpio de responsabilidade \u00fanica Requer tratamento especial em caso de concorr\u00eancia. Em [5] O pr\u00f3prio autor fala que esse \u00e9 o \u00fanico padr\u00e3o de projeto que ele retiraria em uma refatora\u00e7\u00e3o do livro. 4.3. Aplica\u00e7\u00e3o no projeto Dentro da nossa modelagem, a principal classe que pode ser usada o padr\u00e3o singleton \u00e9 s\u00e3o as classes que geram autentica\u00e7\u00e3o: Costumer , Owner e Admin . Como elas podem ser acessadas de v\u00e1rias parte do c\u00f3digo, ent\u00e3o s\u00e3o as favoritas para serem aplicadas os padr\u00f5es de projeto. 5. Multiton Esse padr\u00e3o \u00e9 apenas uma generaliza\u00e7\u00e3o do Singleton sendo que este autoriza apenas uma inst\u00e2ncia, enquanto o Multiton permite uma quantidade controlada de inst\u00e2ncias. 5.1. Vantagens Controla o acesso a v\u00e1rias inst\u00e2ncias. Substitui vari\u00e1veis globais. 5.2. Desvantagens \u00c9 mais dif\u00edcil de testar, visto que v\u00e1rias partes do c\u00f3digo alteram essa classe. Viola o princ\u00edpio de responsabilidade \u00fanica Requer tratamento especial em caso de concorr\u00eancia. 5.3. Aplica\u00e7\u00e3o no projeto Assim como o singleton o escopo atual n\u00e3o permite o uso desse padr\u00e3o de forma se tornar vantajoso ao sistema. Por outro lado, assim como o singleton , na ferramenta usada no ReactJS, que \u00e9 o framework que ser\u00e1 usado no frontend, h\u00e1 a apari\u00e7\u00e3o do padr\u00e3o de projeto singleton / multiton no uso do Context API . 6. Object poll Esse padr\u00e3o permite uma boa economia de performace e sendo usado principalmente em casos em que o custo do instaciamento de uma classe \u00e9 bem pesado. Seu fucionamento se baseia no armazenamento de classes que n\u00e3o est\u00e3o sendo usadas e n\u00e3o destruindo-as podem ser usadas posteriormente. Um exemplo cl\u00e1ssico de seu uso s\u00e3o de classes que precisam ser renderizadas em games; ao inv\u00e9s de destruir, a classe \u00e9 armazenada para ser usada posteriormente, assim, o programa n\u00e3o precisa renderizar tudo novamente. 6.1. Vantagens Alta economia de desempenho. 6.2. Desvantagens Uso de mem\u00f3ria alto a depender da situa\u00e7\u00e3o. 6.3. Aplica\u00e7\u00e3o no projeto O Object pool se mostra vantajoso quando quando existem classes que demandam tempo e processamento para serem instanciadas. Essa condi\u00e7\u00e3o n\u00e3o se aplica ao projeto, visto que a implementa\u00e7\u00e3o das atuais classes n\u00e3o s\u00e3o pesadas em quest\u00e3o de performance. 7. Abstract factory \u00c9 um padr\u00e3o que \u00e9 usado no instanciamento de familias de objetos que possuem categorias em comum. \u00c9 criada uma classe abstrata factory e para cada categoria \u00e9 criada uma classe concreta implementando a factory abstrata. Cada classe concreta dessas \u00e9 respons\u00e1vel pelo instanciamento de classes de uma mesma categoria, mas de fam\u00edlias diferentes. Estrutura Produtos Abstratos declaram interfaces para um conjunto de produtos distintos mas relacionados que fazem parte de uma fam\u00edlia de produtos. Produtos Concretos s\u00e3o v\u00e1rias implementa\u00e7\u00f5es de produtos abstratos, agrupados por variantes. Cada produto abstrato deve ser implementado em todas as variantes dadas. A interface Fabrica Abstrata declara um conjunto de m\u00e9todos para a cria\u00e7\u00e3o de cada um dos produtos abstratos. F\u00e1bricas Concretas implementam m\u00e9todos de cria\u00e7\u00e3o f\u00e1bricas abstratas. Cada f\u00e1brica concreta corresponde a uma variante espec\u00edfica de produtos e cria apenas aquelas variantes de produto. Embora f\u00e1bricas concretas instanciam produtos concretos, assinaturas dos seus m\u00e9todos de cria\u00e7\u00e3o devem retornar produtos abstratos correspondentes. 7.1. Vantagens Aplica\u00e7\u00e3o do princ\u00edpio Open/Closed Principle. Aplica\u00e7\u00e3o do princ\u00edpio da responsabilidade \u00fanica. Os produtos sao compat\u00edveis entre si. 7.2. Desvantagens Adiciona bastante complexidade ao c\u00f3digo. 7.3. Aplica\u00e7\u00e3o no projeto A modelagem do nosso projeto n\u00e3o possui o principal ponto do abstract factory que \u00e9 fam\u00edlias de classes que podem ter categorias em comum. Como veremos a seguir, a nossa modelagem possui apenas uma fam\u00edlia de classes, o que inviabiliza o uso da abstract factory . 8. Prototype Esse padr\u00e3o cria um novo objeto a partir de uma c\u00f3pia de um objeto j\u00e1 existente. Isso evita muito processamento de instaciamento de classes, em caso de classes complexas. Estrutura A interface Prot\u00f3tipo declara os m\u00e9todos de clonagem. Na maioria dos casos \u00e9 apenas um m\u00e9todo clonar . A classe Prot\u00f3tipo Concreta implementa o m\u00e9todo de clonagem. Al\u00e9m de copiar os dados do objeto original para o clone, esses m\u00e9todos tamb\u00e9m podem lidar com alguns casos espec\u00edficos do processo de clonagem relacionados a colnar objetos ligados, desfazendo depend\u00eancias recursivas, etc. O Client pode, no caso, produzir uma c\u00f3pia de qualquer objeto que segue a interface do produto. 8.1. Vantagens Oculta as classes concretas do c\u00f3digo cliente. Ajuda na cria\u00e7\u00e3o de objetos caros/complexos Evita a explos\u00e3o de subclasses. 8.2. Desvantagens Clonar objetos que tem refer\u00eancias a outros objetos pode ser complexo. 8.3. Aplica\u00e7\u00e3o no projeto Esse padr\u00e3o ser\u00e1 aplicado no projeto na classe Establishment , pois \u00e9 uma das classes mais complexas do projeto e esse padr\u00e3o pode ajudar quando o usu\u00e1rio quer criar um novo estabelecimento a partir de um j\u00e1 existente, aproveitando a maior parte das informa\u00e7\u00f5es. Pensando nisso \u00e9 melhor usar um objeto existente e fazer uma c\u00f3pia do que instanciar e inicializar do zero. A implementa\u00e7\u00e3o em c\u00f3digo seria, por exemplo: import copy class Prototype : def clone ( self ) -> Establishment : pass class Establishment ( Prototype ): ... def clone ( self ) -> Establishment : return copy . copy ( self ) 9. Conclus\u00e3o: Aqui est\u00e1 a vers\u00e3o final da modelagem do projeto: Vers\u00e3o 1.0 Vers\u00e3o 2.0 10. Refer\u00eancias [1] - GAMMA, Erich; HELM, Richard; JOHNSON, Ralph; VLISSIDES, John. Design Patterns: Elements of Reusable Object-Oriented Software. Indianapolis: [s. n.], 1994. [2] - FACTORY method: Python Design Patterns. Dispon\u00edvel em: https://www.geeksforgeeks.org/factory-method-python-design-patterns/. Acesso em: 31 mar. 2021. [3] - Builder method: Python design patterns. Dispon\u00edvel em: https://www.geeksforgeeks.org/builder-method-python-design-patterns/. Acesso em 31 mar. 2021. [4] - Singleton design pattern: Implementation. Dispon\u00edvel em: https://www.geeksforgeeks.org/singleton-design-pattern/. Acesso em: 31 mar. 2021. [5] - Design Patterns 15 Years Later: An Interview with Erich Gamma, Richard Helm, and Ralph Johnson. Dispon\u00edvel em: https://www.informit.com/articles/article.aspx?p=1404056. Acesso em 31 mar. 2021. [6] - Multiton pattern. Dispon\u00edvel em: https://en.wikipedia.org/wiki/Multiton_pattern. Acesso em 1 abr. 2021. [7] - Object pool: Design pattern. Dispon\u00edvel em: https://sourcemaking.com/design_patterns/object_pool. Acesso em 1 abr. 2021. [8] - Obejct pool pattern. Dispon\u00edvel em: https://en.wikipedia.org/wiki/Object_pool_pattern. Acesso em 1 abr.2021. 11. Versionamento Data Nome Detalhes Vers\u00e3o 31/03/2021 Jo\u00e3o Pedro Carvalho Adicionando factory methodo e iniciando o documento 0.1 31/03/2021 Jo\u00e3o Pedro Carvalho Adicionando builder 0.2 31/03/2021 Jo\u00e3o Pedro Carvalho Adicionando singleton 0.3 01/04/2021 Jo\u00e3o Pedro Carvalho Adicionando multiton e object pool 0.4 01/04/2021 Jo\u00e3o Pedro Carvalho Adicionando abstract factory e prototype 0.5 02/04/2021 Jo\u00e3o Luis Baraky Corrige erros de ortografia 0.6 02/04/2021 Jo\u00e3o Luis Baraky Adiciona Factory Method \u00e0 modelagem (v2) 0.7 03/04/2021 Jo\u00e3o Pedro Carvalho Adicionando justificativa para factory method 1.0 04/04/2021 Hugo, Wagner, N\u00edcalo Revis\u00e3o do Documento 1.1 04/04/2021 Hugo, Wagner, N\u00edcalo Revis\u00e3o do Documento 1.0 09/04/2021 Hugo Arag\u00e3o Adiciona Estrutura Factory 1.1 09/04/2021 Hugo Arag\u00e3o Adiciona Estrutura Singleton e Builder 1.2 09/04/2021 Hugo Arag\u00e3o Adiciona Estrutura Prototype e Abstract Factory 1.3 09/04/2021 Jo\u00e3o Luis Baraky e Joao Pedro Carvalho Adiciona c\u00f3digos da implementa\u00e7\u00e3o do factory method e prototype 2.0","title":"GoFs Criacionais"},{"location":"Padroes_de_projeto/GOFs/gof_criacional/#gofs-criacionais","text":"","title":"GoFs Criacionais"},{"location":"Padroes_de_projeto/GOFs/gof_criacional/#1-introducao","text":"Os padr\u00f5es de projeto criacionais abstraem o proceso de instancia\u00e7\u00e3o do objeto. Eles ajudam a fazer o sistema independente na maneira em que s\u00e3o criados, compostos e representados. Em outras palavras esse padr\u00f5es se concentram em oferecer solu\u00e7\u00f5es para problemas recorrentes principalmente na cria\u00e7\u00e3o/instancia\u00e7\u00e3o de objetos. A seguir iremos apresentar os principais padr\u00f5es criacionais e como eles se aplicam o projeto, explicando tamb\u00e9m o problema/solu\u00e7\u00e3o. Ser\u00e1 apresentado tamb\u00e9m os casos em que os padr\u00f5es n\u00e3o ser\u00e3o aplicados e o motivo.","title":"1. Introdu\u00e7\u00e3o"},{"location":"Padroes_de_projeto/GOFs/gof_criacional/#2-factory-method","text":"O factory method (m\u00e9todo de f\u00e1brica) consiste no instanciamento de um produto concreto que usa uma interface, por exemplo, uma aplica\u00e7\u00e3o que requer um objeto com uma interface espec\u00edfica para realizar as tarefas. Em termos pr\u00e1ticos \u00e9 uma cria\u00e7\u00e3o de uma classe que ser\u00e1 f\u00e1brica de um determinando produto. Exixtem duas implementa\u00e7\u00f5es encontrada: a primeira \u00e9 uma f\u00e1brica concreta para todos as classes que implementam uma interface e a segunda \u00e9 uma f\u00e1brica para cada produto que implementa a interface. Enquanto a primeira seja mais simples de ser implementada, apenas a segunda atende o principio do open/close.","title":"2. Factory Method"},{"location":"Padroes_de_projeto/GOFs/gof_criacional/#estrutura","text":"\u00c9 declarada uma interface , que \u00e9 comum a todos os objetos que podem ser produzidos pelo criador pelo criador e suas subclasses. Em seguida as classes criadas ser\u00e3o implementa\u00e7\u00f5es dessa interface . A classe Criadora declara o m\u00e9todo f\u00e1brica que retorna novos objetos produto, e logo ap\u00f3s retornando o resultado para a interface . As classes criadoras filhas sobrescrevem o m\u00e9todo f\u00e1brica da Criadora , logo ap\u00f3s retornando um tipo diferente de produto.","title":"Estrutura"},{"location":"Padroes_de_projeto/GOFs/gof_criacional/#21-vantagens","text":"Poder facilmente adicionar mais produtos concretos que utilizam a mesma interface. Evitar um alto grau de acoplamento no c\u00f3digo. Obedece ao princ\u00edpio da responsabilidade \u00fanica.","title":"2.1. Vantagens"},{"location":"Padroes_de_projeto/GOFs/gof_criacional/#22-desvantagens","text":"Caso seu uso seja excessivo pode acarretar a um grande n\u00famero de subclasses e de arquivos dentro do software.","title":"2.2. Desvantagens"},{"location":"Padroes_de_projeto/GOFs/gof_criacional/#23-aplicacao-no-projeto","text":"Na nossa aplica\u00e7\u00e3o ir\u00e1 existir tr\u00eas tipos de usu\u00e1rios: Admin , Owner e Costumer . Dado essa situa\u00e7\u00e3o, a equipe decidiu por aplicar o factory method por facilitar\u00e1 o instanciamento dessas classes. Esse tr\u00eas tipos de usu\u00e1rios ser\u00e3o classes que herdar\u00e3o de uma classe User possibilitando a aplica\u00e7\u00e3o desse padr\u00e3o de projeto. A implementa\u00e7\u00e3o em c\u00f3digo seria, por exemplo: from abc import ABC , abstractmethod class UserFactory ( ABC ): @abstractmethod def getUser ( self , username , password ): pass class AdminFactory ( UserFactory ): def getUser ( self , username , password ) -> User : return Admin ( username , password ) class CustomerFactory ( UserFactory ): def getUser ( self , username , password , name ) -> User : return Customer ( username , password , name ) class OwnerFactory ( UserFactory ): def getUser ( self , username , password , name ) -> User : return Owner ( username , password , name )","title":"2.3. Aplica\u00e7\u00e3o no projeto"},{"location":"Padroes_de_projeto/GOFs/gof_criacional/#3-builder","text":"O padr\u00e3o de projeto Builder tem como objetivo separar a constru\u00e7\u00e3o de objetos complexos da sua representa\u00e7\u00e3o de modo que o mesmo processo de constru\u00e7\u00e3o pode criar v\u00e1rias representa\u00e7\u00f5es. Seu funcionamento come\u00e7a na classe Director que possui o m\u00e9todo que chama o ConcrectBuilder espec\u00edfico, de acordo com os par\u00e2metros especificados. Essa classe n\u00e3o \u00e9 essencial nesse padr\u00e3o, mas \u00e9 importante. Outra parte desse processo s\u00e3o as classes Builders ; a primeira \u00e9 uma classe abstrata que declara os m\u00e9todos que devem ser implementados por um ConcrectBuilder ; esta classe \u00e9 uma classe concreta que implementa os m\u00e9todos necess\u00e1rios para a constru\u00e7\u00e3o do produto e, por fim, a classe Product \u00e9 o resutado da constru\u00e7\u00e3o implementada no ConcrectBuilder . Tendo em vista esse processo, ess padr\u00e3o de projeto \u00e9 vantajoso somente se o processo de contru\u00e7\u00e3o do produto em s\u00ed \u00e9 muito complexo, sendo necess\u00e1rio a separa\u00e7\u00e3o de responsabilidades entre as classes.","title":"3. Builder"},{"location":"Padroes_de_projeto/GOFs/gof_criacional/#estrutura_1","text":"A interface Builder declara etapas de constru\u00e7\u00e3o do produto que s\u00e3o comuns a todos os tipos de de builders. Os Builders Concretos trazem diferentes implementa\u00e7\u00f5es das etapas de constru\u00e7\u00e3o. Builders Concretos podem produzir podem produzir produtos que n\u00e3o seguem a interface comum. Os Produtos s\u00e3o objetos resultantes. Produtos constru\u00eddos pode diferentes builders n\u00e3o precisam pertencer a mesma interface ou hierarquia da classe. Uma classe chamada Diretor define a ordem na qual as etapas de constru\u00e7\u00e3o s\u00e3o chamadas, ent\u00e3o voc\u00ea pode criar e reutilizar configura\u00e7\u00f5es espec\u00edficas de produtos. Uma classe Cliente deve associas um dos objetos builders como o construtor do Diretor . Geralmente isso \u00e9 feito apenas uma vez, atrav\u00e9s de par\u00e2metros do construtor do diretor. O Diretor ent\u00e3o usa aquele objeto builder para todas as futuras constru\u00e7\u00f5es.","title":"Estrutura"},{"location":"Padroes_de_projeto/GOFs/gof_criacional/#31-vantagens","text":"Pode-se usar a mesma constru\u00e7\u00e3o para diversas representa\u00e7\u00f5es do produto. Em outras palavras favorece a reusabilidade do c\u00f3digo. Pelo princ\u00edpio da \u00fanica responsabilidade, \u00e9 separado a responsabilidade de construir o objeto de quem o usa. \u00c9 poss\u00edvel criar uma constru\u00e7\u00e3o de um objeto em etapas. Entrega um maior controle sobre a constru\u00e7\u00e3o de um objeto.","title":"3.1. Vantagens"},{"location":"Padroes_de_projeto/GOFs/gof_criacional/#32-desvantagens","text":"Aumenta a complexidade do c\u00f3digo, ja que esse padr\u00e3o requer a cria\u00e7\u00e3o de m\u00faltiplas classes. Requer que a classe Builder seja mut\u00e1vel.","title":"3.2. Desvantagens"},{"location":"Padroes_de_projeto/GOFs/gof_criacional/#33-aplicacao-no-projeto","text":"Todas as classes do projeto n\u00e3o t\u00eam mais de 4 atributos que necessitam ser inicializados junto ao objeto, oque torna a cria\u00e7\u00e3o da maioria das classes simples ao ponto de o padr\u00e3o de projeto builder se tornar desisteressante. H\u00e1 apenas uma classe que pode ser usada para aplicar o m\u00e9todo Builder que \u00e9 a OpeningHours , ja que os hor\u00e1rios de abertura e fechamento est\u00e3o em um formato espec\u00edfico e cada dia da semana tem um pr\u00f3prio funcionamento; atualmente a responsabilidade para contru\u00e7\u00e3o desse objeto \u00e9 da pr\u00f3pria classe Opening Hours .","title":"3.3. Aplica\u00e7\u00e3o no projeto"},{"location":"Padroes_de_projeto/GOFs/gof_criacional/#4-singleton","text":"Garante que uma classe tenha apenas uma inst\u00e2ncia em todo o c\u00f3digo e oferece um ponto de acesso global para essa classe. Em outras palavras, esse padr\u00e3o \u00e9 usada para quando precisa de uma classe de acesso global no c\u00f3digo, garantindo apenas uma inst\u00e2ncia. Para isso \u00e9 necess\u00e1rio a implementa\u00e7\u00e3o de uma classe que ir\u00e1 ser a vari\u00e1vel global e em caso de multithreading ir\u00e1 controlar tamb\u00e9m o acesso, sob risco de criar novas inst\u00e2ncias.","title":"4. Singleton"},{"location":"Padroes_de_projeto/GOFs/gof_criacional/#estrutura_2","text":"A classe Singleton declara o m\u00e9todo est\u00e1tico getInstancia que retorna a mesma inst\u00e2ncia de sua classe. O construtor da singleton deve ser escondido do c\u00f3digo client . Chamando o m\u00e9todo getInstancia deve ser o \u00fanico modo de obter o objeto singleton.","title":"Estrutura"},{"location":"Padroes_de_projeto/GOFs/gof_criacional/#41-vantagens","text":"Controla o acesso a essa inst\u00e2ncia. Facilidade em permitir um maior n\u00famero de inst\u00e2ncias (Multiton); Substitui vari\u00e1veis globais.","title":"4.1. Vantagens"},{"location":"Padroes_de_projeto/GOFs/gof_criacional/#42-desvantagens","text":"\u00c9 mais dif\u00edcil de testar, visto que v\u00e1rias partes do c\u00f3digo alteram essa classe. Viola o princ\u00edpio de responsabilidade \u00fanica Requer tratamento especial em caso de concorr\u00eancia. Em [5] O pr\u00f3prio autor fala que esse \u00e9 o \u00fanico padr\u00e3o de projeto que ele retiraria em uma refatora\u00e7\u00e3o do livro.","title":"4.2. Desvantagens"},{"location":"Padroes_de_projeto/GOFs/gof_criacional/#43-aplicacao-no-projeto","text":"Dentro da nossa modelagem, a principal classe que pode ser usada o padr\u00e3o singleton \u00e9 s\u00e3o as classes que geram autentica\u00e7\u00e3o: Costumer , Owner e Admin . Como elas podem ser acessadas de v\u00e1rias parte do c\u00f3digo, ent\u00e3o s\u00e3o as favoritas para serem aplicadas os padr\u00f5es de projeto.","title":"4.3. Aplica\u00e7\u00e3o no projeto"},{"location":"Padroes_de_projeto/GOFs/gof_criacional/#5-multiton","text":"Esse padr\u00e3o \u00e9 apenas uma generaliza\u00e7\u00e3o do Singleton sendo que este autoriza apenas uma inst\u00e2ncia, enquanto o Multiton permite uma quantidade controlada de inst\u00e2ncias.","title":"5. Multiton"},{"location":"Padroes_de_projeto/GOFs/gof_criacional/#51-vantagens","text":"Controla o acesso a v\u00e1rias inst\u00e2ncias. Substitui vari\u00e1veis globais.","title":"5.1. Vantagens"},{"location":"Padroes_de_projeto/GOFs/gof_criacional/#52-desvantagens","text":"\u00c9 mais dif\u00edcil de testar, visto que v\u00e1rias partes do c\u00f3digo alteram essa classe. Viola o princ\u00edpio de responsabilidade \u00fanica Requer tratamento especial em caso de concorr\u00eancia.","title":"5.2. Desvantagens"},{"location":"Padroes_de_projeto/GOFs/gof_criacional/#53-aplicacao-no-projeto","text":"Assim como o singleton o escopo atual n\u00e3o permite o uso desse padr\u00e3o de forma se tornar vantajoso ao sistema. Por outro lado, assim como o singleton , na ferramenta usada no ReactJS, que \u00e9 o framework que ser\u00e1 usado no frontend, h\u00e1 a apari\u00e7\u00e3o do padr\u00e3o de projeto singleton / multiton no uso do Context API .","title":"5.3. Aplica\u00e7\u00e3o no projeto"},{"location":"Padroes_de_projeto/GOFs/gof_criacional/#6-object-poll","text":"Esse padr\u00e3o permite uma boa economia de performace e sendo usado principalmente em casos em que o custo do instaciamento de uma classe \u00e9 bem pesado. Seu fucionamento se baseia no armazenamento de classes que n\u00e3o est\u00e3o sendo usadas e n\u00e3o destruindo-as podem ser usadas posteriormente. Um exemplo cl\u00e1ssico de seu uso s\u00e3o de classes que precisam ser renderizadas em games; ao inv\u00e9s de destruir, a classe \u00e9 armazenada para ser usada posteriormente, assim, o programa n\u00e3o precisa renderizar tudo novamente.","title":"6. Object poll"},{"location":"Padroes_de_projeto/GOFs/gof_criacional/#61-vantagens","text":"Alta economia de desempenho.","title":"6.1. Vantagens"},{"location":"Padroes_de_projeto/GOFs/gof_criacional/#62-desvantagens","text":"Uso de mem\u00f3ria alto a depender da situa\u00e7\u00e3o.","title":"6.2. Desvantagens"},{"location":"Padroes_de_projeto/GOFs/gof_criacional/#63-aplicacao-no-projeto","text":"O Object pool se mostra vantajoso quando quando existem classes que demandam tempo e processamento para serem instanciadas. Essa condi\u00e7\u00e3o n\u00e3o se aplica ao projeto, visto que a implementa\u00e7\u00e3o das atuais classes n\u00e3o s\u00e3o pesadas em quest\u00e3o de performance.","title":"6.3. Aplica\u00e7\u00e3o no projeto"},{"location":"Padroes_de_projeto/GOFs/gof_criacional/#7-abstract-factory","text":"\u00c9 um padr\u00e3o que \u00e9 usado no instanciamento de familias de objetos que possuem categorias em comum. \u00c9 criada uma classe abstrata factory e para cada categoria \u00e9 criada uma classe concreta implementando a factory abstrata. Cada classe concreta dessas \u00e9 respons\u00e1vel pelo instanciamento de classes de uma mesma categoria, mas de fam\u00edlias diferentes.","title":"7. Abstract factory"},{"location":"Padroes_de_projeto/GOFs/gof_criacional/#estrutura_3","text":"Produtos Abstratos declaram interfaces para um conjunto de produtos distintos mas relacionados que fazem parte de uma fam\u00edlia de produtos. Produtos Concretos s\u00e3o v\u00e1rias implementa\u00e7\u00f5es de produtos abstratos, agrupados por variantes. Cada produto abstrato deve ser implementado em todas as variantes dadas. A interface Fabrica Abstrata declara um conjunto de m\u00e9todos para a cria\u00e7\u00e3o de cada um dos produtos abstratos. F\u00e1bricas Concretas implementam m\u00e9todos de cria\u00e7\u00e3o f\u00e1bricas abstratas. Cada f\u00e1brica concreta corresponde a uma variante espec\u00edfica de produtos e cria apenas aquelas variantes de produto. Embora f\u00e1bricas concretas instanciam produtos concretos, assinaturas dos seus m\u00e9todos de cria\u00e7\u00e3o devem retornar produtos abstratos correspondentes.","title":"Estrutura"},{"location":"Padroes_de_projeto/GOFs/gof_criacional/#71-vantagens","text":"Aplica\u00e7\u00e3o do princ\u00edpio Open/Closed Principle. Aplica\u00e7\u00e3o do princ\u00edpio da responsabilidade \u00fanica. Os produtos sao compat\u00edveis entre si.","title":"7.1. Vantagens"},{"location":"Padroes_de_projeto/GOFs/gof_criacional/#72-desvantagens","text":"Adiciona bastante complexidade ao c\u00f3digo.","title":"7.2. Desvantagens"},{"location":"Padroes_de_projeto/GOFs/gof_criacional/#73-aplicacao-no-projeto","text":"A modelagem do nosso projeto n\u00e3o possui o principal ponto do abstract factory que \u00e9 fam\u00edlias de classes que podem ter categorias em comum. Como veremos a seguir, a nossa modelagem possui apenas uma fam\u00edlia de classes, o que inviabiliza o uso da abstract factory .","title":"7.3. Aplica\u00e7\u00e3o no projeto"},{"location":"Padroes_de_projeto/GOFs/gof_criacional/#8-prototype","text":"Esse padr\u00e3o cria um novo objeto a partir de uma c\u00f3pia de um objeto j\u00e1 existente. Isso evita muito processamento de instaciamento de classes, em caso de classes complexas.","title":"8. Prototype"},{"location":"Padroes_de_projeto/GOFs/gof_criacional/#estrutura_4","text":"A interface Prot\u00f3tipo declara os m\u00e9todos de clonagem. Na maioria dos casos \u00e9 apenas um m\u00e9todo clonar . A classe Prot\u00f3tipo Concreta implementa o m\u00e9todo de clonagem. Al\u00e9m de copiar os dados do objeto original para o clone, esses m\u00e9todos tamb\u00e9m podem lidar com alguns casos espec\u00edficos do processo de clonagem relacionados a colnar objetos ligados, desfazendo depend\u00eancias recursivas, etc. O Client pode, no caso, produzir uma c\u00f3pia de qualquer objeto que segue a interface do produto.","title":"Estrutura"},{"location":"Padroes_de_projeto/GOFs/gof_criacional/#81-vantagens","text":"Oculta as classes concretas do c\u00f3digo cliente. Ajuda na cria\u00e7\u00e3o de objetos caros/complexos Evita a explos\u00e3o de subclasses.","title":"8.1. Vantagens"},{"location":"Padroes_de_projeto/GOFs/gof_criacional/#82-desvantagens","text":"Clonar objetos que tem refer\u00eancias a outros objetos pode ser complexo.","title":"8.2. Desvantagens"},{"location":"Padroes_de_projeto/GOFs/gof_criacional/#83-aplicacao-no-projeto","text":"Esse padr\u00e3o ser\u00e1 aplicado no projeto na classe Establishment , pois \u00e9 uma das classes mais complexas do projeto e esse padr\u00e3o pode ajudar quando o usu\u00e1rio quer criar um novo estabelecimento a partir de um j\u00e1 existente, aproveitando a maior parte das informa\u00e7\u00f5es. Pensando nisso \u00e9 melhor usar um objeto existente e fazer uma c\u00f3pia do que instanciar e inicializar do zero. A implementa\u00e7\u00e3o em c\u00f3digo seria, por exemplo: import copy class Prototype : def clone ( self ) -> Establishment : pass class Establishment ( Prototype ): ... def clone ( self ) -> Establishment : return copy . copy ( self )","title":"8.3. Aplica\u00e7\u00e3o no projeto"},{"location":"Padroes_de_projeto/GOFs/gof_criacional/#9-conclusao","text":"Aqui est\u00e1 a vers\u00e3o final da modelagem do projeto:","title":"9. Conclus\u00e3o:"},{"location":"Padroes_de_projeto/GOFs/gof_criacional/#versao-10","text":"","title":"Vers\u00e3o 1.0"},{"location":"Padroes_de_projeto/GOFs/gof_criacional/#versao-20","text":"","title":"Vers\u00e3o 2.0"},{"location":"Padroes_de_projeto/GOFs/gof_criacional/#10-referencias","text":"[1] - GAMMA, Erich; HELM, Richard; JOHNSON, Ralph; VLISSIDES, John. Design Patterns: Elements of Reusable Object-Oriented Software. Indianapolis: [s. n.], 1994. [2] - FACTORY method: Python Design Patterns. Dispon\u00edvel em: https://www.geeksforgeeks.org/factory-method-python-design-patterns/. Acesso em: 31 mar. 2021. [3] - Builder method: Python design patterns. Dispon\u00edvel em: https://www.geeksforgeeks.org/builder-method-python-design-patterns/. Acesso em 31 mar. 2021. [4] - Singleton design pattern: Implementation. Dispon\u00edvel em: https://www.geeksforgeeks.org/singleton-design-pattern/. Acesso em: 31 mar. 2021. [5] - Design Patterns 15 Years Later: An Interview with Erich Gamma, Richard Helm, and Ralph Johnson. Dispon\u00edvel em: https://www.informit.com/articles/article.aspx?p=1404056. Acesso em 31 mar. 2021. [6] - Multiton pattern. Dispon\u00edvel em: https://en.wikipedia.org/wiki/Multiton_pattern. Acesso em 1 abr. 2021. [7] - Object pool: Design pattern. Dispon\u00edvel em: https://sourcemaking.com/design_patterns/object_pool. Acesso em 1 abr. 2021. [8] - Obejct pool pattern. Dispon\u00edvel em: https://en.wikipedia.org/wiki/Object_pool_pattern. Acesso em 1 abr.2021.","title":"10. Refer\u00eancias"},{"location":"Padroes_de_projeto/GOFs/gof_criacional/#11-versionamento","text":"Data Nome Detalhes Vers\u00e3o 31/03/2021 Jo\u00e3o Pedro Carvalho Adicionando factory methodo e iniciando o documento 0.1 31/03/2021 Jo\u00e3o Pedro Carvalho Adicionando builder 0.2 31/03/2021 Jo\u00e3o Pedro Carvalho Adicionando singleton 0.3 01/04/2021 Jo\u00e3o Pedro Carvalho Adicionando multiton e object pool 0.4 01/04/2021 Jo\u00e3o Pedro Carvalho Adicionando abstract factory e prototype 0.5 02/04/2021 Jo\u00e3o Luis Baraky Corrige erros de ortografia 0.6 02/04/2021 Jo\u00e3o Luis Baraky Adiciona Factory Method \u00e0 modelagem (v2) 0.7 03/04/2021 Jo\u00e3o Pedro Carvalho Adicionando justificativa para factory method 1.0 04/04/2021 Hugo, Wagner, N\u00edcalo Revis\u00e3o do Documento 1.1 04/04/2021 Hugo, Wagner, N\u00edcalo Revis\u00e3o do Documento 1.0 09/04/2021 Hugo Arag\u00e3o Adiciona Estrutura Factory 1.1 09/04/2021 Hugo Arag\u00e3o Adiciona Estrutura Singleton e Builder 1.2 09/04/2021 Hugo Arag\u00e3o Adiciona Estrutura Prototype e Abstract Factory 1.3 09/04/2021 Jo\u00e3o Luis Baraky e Joao Pedro Carvalho Adiciona c\u00f3digos da implementa\u00e7\u00e3o do factory method e prototype 2.0","title":"11. Versionamento"},{"location":"Padroes_de_projeto/GOFs/gof_estrutural/","text":"GoFs Estruturais 1. Introdu\u00e7\u00e3o Seguindo com os padr\u00f5es de projeto GOFs temos os estruturais. Esses padr\u00f5es focam em como classes e objetos se comp\u00f5em para formar estruturas complexas. Sendo assim vamos apresentar os principais padr\u00f5es, suas vantagens e desvantagens e como eles podem ou n\u00e3o ser aplicados no projeto. 1.1. Siglas e Acr\u00f4nimos: Termo Representa\u00e7\u00e3o GOF Gang of Four (em refer\u00eancia aos 4 autores do livro em [1]) SRP Single Responsibility Principle OCP Open Close Principle DRF Django REST Framework SO Sistema operacional ISP Interface segregation principle 2. Adapter Converte a interface de uma classe em outra que o c\u00f3digo cliente espera. Esse padr\u00e3o permite que classes com interfaces compat\u00edveis trabalhem juntas. Tamb\u00e9m \u00e9 conhecida como Wrapper. Sua implementa\u00e7\u00e3o \u00e9 constitu\u00eddo por uma interface que servir\u00e1 a todas as classes Adapter , classes concretas Adapter e por fim os objetos/classes que ser\u00e3o adaptados. Observa-se ent\u00e3o que o padr\u00e3o de projeto se baseia na cria\u00e7\u00e3o de um intermediador entre o c\u00f3digo cliente e o objeto a ser utilizado. Metaforicamente, o adapter \u00e9 um adptador de tomada que permite que um plug se conecte a tomada sem ser compat\u00edvel, comportando como um intermediador. 2.1. Estrutura O Cliente \u00e9 uma classe que cont\u00e9m a l\u00f3gica de neg\u00f3cio do programa existente. A Interface do Cliente descreve um protocolo que outras classes devem seguir para ser capaz de colaborar com o c\u00f3digo cliente. O Servi\u00e7o \u00e9 alguma classe \u00fatil (geralmente de terceiros ou c\u00f3digo legado). O cliente n\u00e3o pode usar essa classe diretamente porque ela tem uma interface incompat\u00edvel. O Adaptador \u00e9 uma classe que \u00e9 capaz de trabalhar tanto com o cliente quanto o servi\u00e7o: ela implementa a interface do cliente enquanto encobre o objeto do servi\u00e7o. O adaptador recebe chamadas do cliente atrav\u00e9s da interface do adaptador e as traduz em chamadas para o objeto encobrido do servi\u00e7o em um formato que ele possa entender. 2.2. Vantagens Desacopla o c\u00f3digo da aplica\u00e7\u00e3o de terceiros. Aplica o SRP ao separar a convers\u00e3o da interface da l\u00f3gica da aplica\u00e7\u00e3o. Aplica o OCP ao permitir adicionar novos adapters no c\u00f3digo exixtente. 2.3. Desvantagens Aumenta a complexidade do c\u00f3digo. 2.4. Aplica\u00e7\u00e3o no Projeto O pr\u00f3prio DRF aplica em algumas classes o padr\u00e3o de projeto Adapter como podemos ver aqui . Para o projeto, as classes entre si, n\u00e3o h\u00e1 problemas de compatibilidade; por outro lado, a adapter pode ser usada para conversar com o banco de dados e fazer as devidas requisi\u00e7\u00f5es. Outro ponto interessante para o uso de adapteres \u00e9 em rela\u00e7\u00e3o as imagens que s\u00e3o recebidas por meio de requests em formato de bytes e tratadas no c\u00f3digo como uma classe picture. 3. Bridge O Bridge tem a inten\u00e7\u00e3o de desacoplar a abstra\u00e7\u00e3o da sua implementa\u00e7\u00e3o, de modo que as duas possam variar e evoluir independentemente. Outra utiliza\u00e7\u00e3o \u00e9 separar uma classe grande ou um conjunto de classes intimidamente ligadas em duas hierarquias. Segundo o livro Design Patterns [1], o padr\u00e3o Bridge est\u00e1 sendo descrito como \"Desacoplar a abstra\u00e7\u00e3o da sua implementa\u00e7\u00e3o ent\u00e3o ambas podem variar independentemente.\". Esses dois termos s\u00e3o chaves para o entendimento do padr\u00e3o. Abstra\u00e7\u00e3o \u00e9 uma camada de controle de alto n\u00edvel que n\u00e3o realiza o trabalho por si s\u00f3 e sim delega para uma camada de implementa\u00e7\u00e3o. Um bom exemplo sobre abstra\u00e7\u00e3o e implementa\u00e7\u00e3o \u00e9 a rela\u00e7\u00e3o entre a GUI e as APIs de um SO. A GUI (asbtra\u00e7\u00e3o) apenas transfere as a\u00e7\u00f5es do usu\u00e1rio para que a API (implementa\u00e7\u00e3o) realize o trabalho. 3.1. Estrutura A Abstra\u00e7\u00e3o fornece a l\u00f3gica de controle de alto n\u00edvel. Ela depende do objeto de implementa\u00e7\u00e3o para fazer o verdadeiro trabalho de baixo n\u00edvel. A Implementa\u00e7\u00e3o declara a interface que \u00e9 comum para todas as implementa\u00e7\u00f5es concretas. Um abstra\u00e7\u00e3o s\u00f3 pode se comunicar com um objeto de implementa\u00e7\u00e3o atrav\u00e9s de m\u00e9todos que s\u00e3o declarados aqui. Implementa\u00e7\u00f5es Concretas cont\u00e9m c\u00f3digo plataforma-espec\u00edficos. Abstra\u00e7\u00f5es Refinadas fornecem variantes para controle da l\u00f3gica. Como seu superior, trabalham com diferentes implementa\u00e7\u00f5es atrav\u00e9s da interface geral de implementa\u00e7\u00e3o. 3.2. Vantagens Desacopla o c\u00f3digo da abstra\u00e7\u00e3o do c\u00f3digo da implementa\u00e7\u00e3o (SRP) Insere o OCP para novas abstra\u00e7\u00f5es/implementa\u00e7\u00f5es para o c\u00f3digo existente. Tem as mesmas vantagens do Adapter. 3.3. Desvantagens Aumenta a complexidade do projeto quando aplicada em locais inapropriados. 3.4. Aplica\u00e7\u00e3o no Projeto Aplicar o Bridge no projeto ir\u00e1 aumentar a complexidade sem ter vantagens significativas, dado que poucos pontos do projeto tem essa rela\u00e7\u00e3o abstra\u00e7\u00e3o-implementa\u00e7\u00e3o. 4. Composite Composite \u00e9 um padr\u00e3o que permite que componha objetos em estruturas de \u00e1rvores e ent\u00e3o trabalhar com essas estruturas como se ela fosse objetos individuais. Esse padr\u00e3o s\u00f3 faz sentido se a estrutura central pode ser representada como uma \u00e1rvore. Simplificando, a Composite pode ser descrita como uma classe que represente toda a estrutura de \u00e1rvore. Um bom exemplo para ilustrar \u00e9 quando temos uma compra e a compra tem caixas que podem guardar tanto caixas quanto produtos. Essa situa\u00e7\u00e3o pode gerar uma \u00e1rvore com os produtos sendo as folhas e as caixas sendo os demais v\u00e9rtices. Calcular o pre\u00e7o nessa estrutura pode ser uma tarefa \u00e1rdua e nesse caso o Composite se torna bastante vantajoso de ser aplicado no c\u00f3digo. 4.1. Estrutura A interface Componente descreve opera\u00e7\u00f5es que s\u00e3o comuns tanto para elementos simples como para elementos complexos da \u00e1rvore. A Folha \u00e9 um elemento b\u00e1sico de uma \u00e1rvore que n\u00e3o tem sub-elementos. O Cont\u00eainer (ou composite) \u00e9 o elemento que tem sub-elementos: folhas ou outros cont\u00eaineres. Um cont\u00eainer n\u00e3o sabe a classe concreta de seus filhos. Ele trabalha com todos os sub-elementos apenas atrav\u00e9s da interface componente. O Cliente trabalha com todos os elementos atrav\u00e9s da interface componente. Como resultado, o cliente pode trabalhar da mesma forma tanto com elementos simples como elementos complexos da \u00e1rvore. 4.2. Vantagens Facilidae para criar objetos complexos por composi\u00e7\u00e3o. Facilidade para gerar uma hierarquia de objetos. Facilidade de usar polimorfismo e recurs\u00e3o. Aplica\u00e7\u00e3o do OCP. 4.3. Desvantagens Dependendo da estrutura pode quebrar o ISP em estruturas folhas que podem n\u00e3o usar alguns de seus m\u00e9todos. 4.4. Aplica\u00e7\u00e3o no Projeto Uma poss\u00edvel aplica\u00e7\u00e3o \u00e9 com rela\u00e7\u00e3o a estrutura englobada pela classe owner, estabeliciment e suas filhas. Essa estrutura se assemelha a uma \u00e1rvore, entretanto, possui v\u00e1rias fun\u00e7\u00f5es distintas, sendo assim, aplicar esse padr\u00e3o nesse caso acima fere o ISP. 5. Decorator Decorators se tratam de classes que permitem a adi\u00e7\u00e3o de funcionalidade sob uma outra classe base em tempo de execu\u00e7\u00e3o. Isto \u00e9 feito a partir da composi\u00e7\u00e3o de objetos do mesmo tipo ao inv\u00e9s da cria\u00e7\u00e3o de uma cadeia de heran\u00e7as e uma s\u00e9rie de estruturas condicionais. Este padr\u00e3o permite que novas responsabilidades sejam atribu\u00eddas sem, necessariamente, atribu\u00ed-las ao objeto pesado. Metaforicamente, decorators atribuem uma lista de responsabilidades din\u00e2micamente para a classe base alvo. 5.1. Estrutura O Componente declara a interface comum tanto para os envolt\u00f3rios como para os objetos envolvidos. O Componente Concreto \u00e9 uma classe de objetos sendo envolvidos. Ela define o comportamento b\u00e1sico, que pode ser alterado por decoradores. A classe Decorador Base tem um campo para referenciar um objeto envolvido. O tipo do campo deve ser declarado assim como a interface do componente para que possa conter ambos os componentes concretos e os decoradores. Os Decoradores Concretos definem os comportamentos adicionais que podem ser adicionados aos componentes dinamicamente. O Cliente pode envolver componentes em m\u00faltiplas camadas de decoradors, desde que trabalhe com todos os objetos atrav\u00e9s da interface do componente. 5.2. Vantagens Permite a adi\u00e7\u00e3o e remo\u00e7\u00e3o de funcionalidades em tempo de execu\u00e7\u00e3o. Evita heran\u00e7as quando n\u00e3o existe uma grande necessidade para heran\u00e7a. \u00c9 poss\u00edvel separar o estado interno de cada uma das funcionalidades, cada qual com seu pr\u00f3prio conjunto de regras e propriedades, sem que elas interfiram umas nas outras, sem alongar a classe original e sem heran\u00e7a. 5.3. Desvantagens \u00c9 poss\u00edvel argumentar que, em certos contextos, decorators apresentam problemas semelhantes aos causados por heran\u00e7a m\u00faltipla - problema do diamante . Neste sentido, se usados sem cuidado, podem causar uma refatora\u00e7\u00e3o geral das funcionalidades envolvidas. Caso muitas funcionalidades sejam adicionadas por meio de decorators, existe o risco de interfer\u00eancias entre si. Pelo fato de decorators separarem funcionalidades, fica mais dif\u00edcil de depurar qual \u00e9 a intera\u00e7\u00e3o de dois ou mais decorators que causam o problema. Neste contexto, classes herdadadas seriam mais f\u00e1ceis de serem consertadas. 5.4. Aplica\u00e7\u00e3o no Projeto Embora a arquitetura do projeto Encare n\u00e3o seja complexa o suficiente para se considerar a necessidade de adicionar um decotarator no seu stricto senso , seu uso poderia ser feito considerando em um contexto onde cada estabelecimento tenha um comportamento diferente quanto ao seu tipo: class Estabelecimento : ... class BarbeariaDecorator ( Estabelecimento ): ... class CabeleireiroDecorator ( Estabelecimento ): ... def estabelecimento_factory ( args ): \"\"\" Cria um novo estabelecimento a partir de keywords \"\"\" estabelecimento = Estabelecimento () if 'cabeleireiro' in args : estabelecimento = CabeleireiroDecorator ( estabelecimento ) if 'barbearia' in args : estabelecimento = BarbeariaDecorator ( estabelecimento ) return estabelecimento O conceito de decorators se provou t\u00e3o \u00fatil que foi abstra\u00eddo para mais contextos do que apenas o que foi citado. Por exemplo, o feature da linguagem python chamado de \"decorator\" foi inspirado na dinamicidade que o design pattern decorator prov\u00ea. Um decorator do python n\u00e3o \u00e9 um padr\u00e3o de projeto, mas foi inspirado no conceito. Este feature da linguagem pode vir a ser usado no Backend do projeto. 6. Facade Esse padr\u00e3o promove uma interface unificada para um conjunto de interfaces em um sub sistema. Facade define uma interface de maior n\u00edvel facilitando assim o uso do sistema. \u00c9 importante ressaltar que o objetivo n\u00e3o \u00e9 o desacoplamento e sim facilitar o uso do sistema por parte do c\u00f3digo cliente. Outro ponto importe \u00e9 com rela\u00e7\u00e3o a classes que tem muitas responsabilidades; o uso excessivo desse padr\u00e3o concentrado em poucas clases Facade pode quebrar o SRP e tamb\u00e9m o ISP, pois muitas fun\u00e7\u00f5es podem torna a classe de prop\u00f3sito geral. Por mais que seja bem simples o seu uso, esse padr\u00e3o requer um pouco de aten\u00e7\u00e3o em sua aplica\u00e7\u00e3o. 6.1. Estrutura A Fachada fornece um acesso conveniente para uma parte particular da funcionalidade do subsistema. Ela sabe onde direcionar o pedido do cliente e como operar todas as partes m\u00f3veis. Uma classe Fachada Adicional pode ser criada para prevenir a polui\u00e7\u00e3o de uma \u00fanica fachada com funcionalidades n\u00e3o relevantes que podem torn\u00e1-lo mais uma estrutura complexa. O Subsistema Complexo consiste em d\u00fazias de objetos variados. Para tornar todos eles em algo que signifique alguma coisa, voc\u00ea tem que mergulhar fundo nos detalhes de implementa\u00e7\u00e3o do subsistema, tais como objetos de inicializa\u00e7\u00e3o na ordem correta e supr\u00ed-los com dados no formato correto. O Cliente usa a fachada ao inv\u00e9s de chamar os objetos do subsistema diretamente. 6.2. Vantagens Isola o c\u00f3digo complexo do c\u00f3digo cliente. Facilita o uso do sistema Cria pontos de entrada para camadas da aplica\u00e7\u00e3o e servi\u00e7os de terceiros. 6.3. Desvantagens O ISP e o RSP pode ser facilmente quebrados. 6.4. Aplica\u00e7\u00e3o no projeto A ideia desta aplica\u00e7\u00e3o \u00e9 fornecer uma interface simplificada para a cria\u00e7\u00e3o de usu\u00e1rios a partir de um tipo de usu\u00e1rios( userType ). 6.4.1. Representa\u00e7\u00e3o 6.4.2. C\u00f3digo from constants import USER_TYPES import AdminFactory , CustomerFactory , OwnerFactory class UserFacade (): def getUser ( userType , userData ): if userType == USER_TYPES . ADMIN : adminFactory = AdminFactory () return adminFactory . getUser ( userData ) elif userType == USER_TYPES . CUSTOMER : customerFactory = CustomerFactory () return customerFactory . getUser ( userData ) elif userType == USER_TYPES . OWNER : ownerFactory = OwnerFactory () return ownerFactory . getUser ( userData ) else : raise AssertionError 7. Flyweight Esse padr\u00e3o de projeto tem como inten\u00e7\u00e3o usar compatilhamento para suportar um grande n\u00famero de objetos de baixa granularidade. Usado quando existem uma grande quantidade de objetos semelhantes e a partir desse ponto \u00e9 dividido essa classe entre um objeto que \u00e9 repetido com mais frequ\u00eancia com um que \u00e9 mais \u00fanico, podendo assim existir o compartilhamento e melhorando quest\u00f5es de desempenho. \u00c9 um padr\u00e3o de otimiza\u00e7\u00e3o que visa principalmente economizar mem\u00f3ria RAM diminuindo o n\u00famero de objetos. Deve ser usado somente se a aplica\u00e7\u00e3o estiver com alto consumo de RAM. No livro Design pattern [1], os autores listam uma s\u00e9rie de fatores para o uso do flyweight : A aplica\u00e7\u00e3o usa uma grande quantidade de objetos. Os custos de armazenamento s\u00e3o altos (mem\u00f3ria e tempo de processamento). A maioria dos estados dos objetos podem ser compartilhados. Muitos objetos podem ser substituidos por poucos objetos compatilhados. A aplica\u00e7a\u00f5 n\u00e3o depende da identidade dos objetos. 7.1. Estrutura A classe Flyweight cont\u00e9m a por\u00e7\u00e3o do estado do objeto original que pode ser compartilhada entre m\u00faltiplos objetos. O mesmo objeto flyweight pode ser usado em muitos contextos diferentes. A classe Contexto cont\u00e9m o estado extr\u00ednseco, \u00fanico para todos os objetos originais. Quando um contexto \u00e9 pareado com um dos objetos flyweight , ele representa o estado completo do objeto original. Geralmente, o comportamento do objeto original permanece na classe flyweight . Nesse caso, quem chamar o m\u00e9todo do flyweight deve tamb\u00e9m passar os dados apropriados do estado extr\u00ednseco nos par\u00e2metros do m\u00e9todo. O Cliente calcula ou armazena o estado extr\u00ednseco dos flyweights . A F\u00e1brica Flyweight gerencia um conjunto de flyweights existentes. Com a f\u00e1brica os clientes n\u00e3o precisam criar flyweights diretamente. Ao inv\u00e9s disso, eles chamam a f\u00e1brica, passam os dados de estado intr\u00ednseco para o flyweight desejado. 7.2. Vantagens Pode economizar RAM. 7.3. Desvantagens Muito complexo em n\u00edvel de c\u00f3digo. 7.4. Aplica\u00e7\u00e3o no Projeto Esse padr\u00e3o \u00e9 usado em uma situa\u00e7\u00e3o bem espec\u00edfica e possui v\u00e1rias condi\u00e7\u00f5es que precisam ser atendidas para que seja vantasojo ou mesmo seja poss\u00edvel aplicar no projeto. No caso do projeto Encare, a quantidade de objetos n\u00e3o \u00e9 grande em nenhum dos casos e n\u00e3o pode ser notado nenhum consumo excessivo de mem\u00f3ria nesse est\u00e1gio do desenvolvimento (modelagem), portanto \u00e9 invi\u00e1rio o uso desse padr\u00e3o de projeto. 8. Proxy De acordo com o Design Pattern[1], esse padr\u00e3o tem como inten\u00e7\u00e3o fornecer um substituo ou um marcador de localiza\u00e7\u00e3o para outro objeto com a finalidade de controlar o seu acesso. Em outras palavras o proxy funciona como um intermediador entre o c\u00f3digo cliente e o objeto que \u00e9 necessitado. Tem uma estrutra muito similar aos padr\u00f5es Composite e Decorator . O Proxy controla todo o fluxo de informa\u00e7\u00f5es entre o c\u00f3digo cliente e o objeto real, podendo escolher como e quando repassar as informa\u00e7\u00f5es inclusive. Al\u00e9m disso ele tem muitas varia\u00e7\u00f5es como: proxy virtual, proxy remoto, proxy de prote\u00e7\u00e3o, entre outros. 8.1. Estrutura A Interface do Servi\u00e7o declara a interface do Servi\u00e7o. O proxy deve seguir essa interface para ser capaz de se disfar\u00e7ar como um objeto do servi\u00e7o. O Servi\u00e7o \u00e9 uma classe que fornece alguma l\u00f3gica de neg\u00f3cio \u00fatil. A classe Proxy tem um campo de refer\u00eancia que aponta para um objeto do servi\u00e7o. Ap\u00f3s o proxy finalizar seu processamento (por exemplo: inicializa\u00e7\u00e3o pregui\u00e7osa, acesso, acessar controle, colocar em cache, etc.), ele passa o pedido para o objeto do servi\u00e7o. O Cliente deve trabalhar tanto com os servi\u00e7os e proxies atrav\u00e9s da mesma interface. Dessa forma voc\u00ea pode passar uma proxy para qualquer c\u00f3digo que espera um objeto do servi\u00e7o. 8.2. Vantagens O c\u00f3digo cliente n\u00e3o saber\u00e1 se esta usando ou n\u00e3o o Proxy . Voc\u00ea pode adicionar novos Proxies sem alterar o c\u00f3digo testado (OCP) O proxy funciona mesmo se o obejto real n\u00e3o estiver operacional ou pronto para uso. 8.3. Desvantagens Aumenta a complexidade do sistema. 8.4. Aplica\u00e7\u00e3o no Projeto \u00c9 um padr\u00e3o muito vers\u00e1til e ser\u00e1 utilizado no projeto como um intermediador na intera\u00e7\u00e3o da classe Geolocation com a API do Google Maps, validando a latitude e longitude e adicionando o Token da API antes de enviar o request . 8.4.1. Representa\u00e7\u00e3o 8.4.2. C\u00f3digo import re import googlemaps from abc import ABCMeta , abstractmethod class GoogleMapsInterface (): __metaclass__ = ABCMeta @abc . abstractmethod def getDistance (): raise NotImplementedError class ProxyGoogleMaps (): def __init__ ( self ): self . googleMapsServices = googlemaps . Client ( key = 'MY_KEY' ) def checkGeolocation ( coords ) -> bool : patternLat = 'regex_lat' patternLng = 'regex_lng' return re . search ( patternLat , coords . lat ) and re . search ( patternLng , coords . lng ) def getDistance ( self , source , destination ) -> float : if checkGeolocation ( source ) and checkGeolocation ( destination ): return self . googleMapsServices . distance_matrix ( origins = source , destinations = destination ) 10. Refer\u00eancias [1] - GAMMA, Erich; HELM, Richard; JOHNSON, Ralph; VLISSIDES, John. Design Patterns: Elements of Reusable Object-Oriented Software. Indianapolis: [s. n.], 1994. [2] - Design Pattern: Django REST Framework. Dispon\u00edvel em: https://davenathanaeld.medium.com/design-pattern-django-rest-framework-1e8c17946bce. Acesso em 4 abr. 2021. [3] - Bridge. Dispon\u00edvel em: https://refactoring.guru/pt-br/design-patterns/bridge. Acesso em 5 abr. 2021. [4] - Composite. Dispon\u00edvel em: https://refactoring.guru/pt-br/design-patterns/composite. acesso em 5 abr. 2021. 11. Versionamento Data Nome Detalhes Vers\u00e3o 4/4/2021 Jo\u00e3o Pedro Carvalho Adiciona padr\u00e3o Adapter 0.1 4/4/2021 Renato Britto Araujo Adiciona padr\u00e3o Decorator 0.2 4/4/2021 Jo\u00e3o Pedro Carvalho Adiciona padr\u00e3o Bridge 0.3 5/4/2021 Jo\u00e3o Pedro Carvalho Adiciona padr\u00e3o Composite 0.4 5/4/2021 Jo\u00e3o Pedro Carvalho Adiciona padr\u00e3o Facade 0.5 6/4/2021 Jo\u00e3o Pedro Carvalho Adiciona padr\u00e3o Flyweight 0.6 6/4/2021 Jo\u00e3o Pedro Carvalho Adiciona padr\u00e3o Proxy 0.7 8/4/2021 Jo\u00e3o Luis Baraky e Gustavo Nogueira Atualiza aplica\u00e7\u00e3o do projeto do Facade e Proxy 0.8 8/4/2021 Jo\u00e3o Luis Baraky e Gustavo Nogueira Atualiza aplica\u00e7\u00e3o do projeto do Proxy 0.9 8/4/2021 Gustavo Nogueira Atualiza aplica\u00e7\u00e3o do projeto do Facade 1.0 9/4/2021 Gustavo Nogueira Adi\u00e7\u00e3o do t\u00f3pico estrutura 1.1","title":"GoFs Estruturais"},{"location":"Padroes_de_projeto/GOFs/gof_estrutural/#gofs-estruturais","text":"","title":"GoFs Estruturais"},{"location":"Padroes_de_projeto/GOFs/gof_estrutural/#1-introducao","text":"Seguindo com os padr\u00f5es de projeto GOFs temos os estruturais. Esses padr\u00f5es focam em como classes e objetos se comp\u00f5em para formar estruturas complexas. Sendo assim vamos apresentar os principais padr\u00f5es, suas vantagens e desvantagens e como eles podem ou n\u00e3o ser aplicados no projeto.","title":"1. Introdu\u00e7\u00e3o"},{"location":"Padroes_de_projeto/GOFs/gof_estrutural/#11-siglas-e-acronimos","text":"Termo Representa\u00e7\u00e3o GOF Gang of Four (em refer\u00eancia aos 4 autores do livro em [1]) SRP Single Responsibility Principle OCP Open Close Principle DRF Django REST Framework SO Sistema operacional ISP Interface segregation principle","title":"1.1. Siglas e Acr\u00f4nimos:"},{"location":"Padroes_de_projeto/GOFs/gof_estrutural/#2-adapter","text":"Converte a interface de uma classe em outra que o c\u00f3digo cliente espera. Esse padr\u00e3o permite que classes com interfaces compat\u00edveis trabalhem juntas. Tamb\u00e9m \u00e9 conhecida como Wrapper. Sua implementa\u00e7\u00e3o \u00e9 constitu\u00eddo por uma interface que servir\u00e1 a todas as classes Adapter , classes concretas Adapter e por fim os objetos/classes que ser\u00e3o adaptados. Observa-se ent\u00e3o que o padr\u00e3o de projeto se baseia na cria\u00e7\u00e3o de um intermediador entre o c\u00f3digo cliente e o objeto a ser utilizado. Metaforicamente, o adapter \u00e9 um adptador de tomada que permite que um plug se conecte a tomada sem ser compat\u00edvel, comportando como um intermediador.","title":"2. Adapter"},{"location":"Padroes_de_projeto/GOFs/gof_estrutural/#21-estrutura","text":"O Cliente \u00e9 uma classe que cont\u00e9m a l\u00f3gica de neg\u00f3cio do programa existente. A Interface do Cliente descreve um protocolo que outras classes devem seguir para ser capaz de colaborar com o c\u00f3digo cliente. O Servi\u00e7o \u00e9 alguma classe \u00fatil (geralmente de terceiros ou c\u00f3digo legado). O cliente n\u00e3o pode usar essa classe diretamente porque ela tem uma interface incompat\u00edvel. O Adaptador \u00e9 uma classe que \u00e9 capaz de trabalhar tanto com o cliente quanto o servi\u00e7o: ela implementa a interface do cliente enquanto encobre o objeto do servi\u00e7o. O adaptador recebe chamadas do cliente atrav\u00e9s da interface do adaptador e as traduz em chamadas para o objeto encobrido do servi\u00e7o em um formato que ele possa entender.","title":"2.1. Estrutura"},{"location":"Padroes_de_projeto/GOFs/gof_estrutural/#22-vantagens","text":"Desacopla o c\u00f3digo da aplica\u00e7\u00e3o de terceiros. Aplica o SRP ao separar a convers\u00e3o da interface da l\u00f3gica da aplica\u00e7\u00e3o. Aplica o OCP ao permitir adicionar novos adapters no c\u00f3digo exixtente.","title":"2.2. Vantagens"},{"location":"Padroes_de_projeto/GOFs/gof_estrutural/#23-desvantagens","text":"Aumenta a complexidade do c\u00f3digo.","title":"2.3. Desvantagens"},{"location":"Padroes_de_projeto/GOFs/gof_estrutural/#24-aplicacao-no-projeto","text":"O pr\u00f3prio DRF aplica em algumas classes o padr\u00e3o de projeto Adapter como podemos ver aqui . Para o projeto, as classes entre si, n\u00e3o h\u00e1 problemas de compatibilidade; por outro lado, a adapter pode ser usada para conversar com o banco de dados e fazer as devidas requisi\u00e7\u00f5es. Outro ponto interessante para o uso de adapteres \u00e9 em rela\u00e7\u00e3o as imagens que s\u00e3o recebidas por meio de requests em formato de bytes e tratadas no c\u00f3digo como uma classe picture.","title":"2.4. Aplica\u00e7\u00e3o no Projeto"},{"location":"Padroes_de_projeto/GOFs/gof_estrutural/#3-bridge","text":"O Bridge tem a inten\u00e7\u00e3o de desacoplar a abstra\u00e7\u00e3o da sua implementa\u00e7\u00e3o, de modo que as duas possam variar e evoluir independentemente. Outra utiliza\u00e7\u00e3o \u00e9 separar uma classe grande ou um conjunto de classes intimidamente ligadas em duas hierarquias. Segundo o livro Design Patterns [1], o padr\u00e3o Bridge est\u00e1 sendo descrito como \"Desacoplar a abstra\u00e7\u00e3o da sua implementa\u00e7\u00e3o ent\u00e3o ambas podem variar independentemente.\". Esses dois termos s\u00e3o chaves para o entendimento do padr\u00e3o. Abstra\u00e7\u00e3o \u00e9 uma camada de controle de alto n\u00edvel que n\u00e3o realiza o trabalho por si s\u00f3 e sim delega para uma camada de implementa\u00e7\u00e3o. Um bom exemplo sobre abstra\u00e7\u00e3o e implementa\u00e7\u00e3o \u00e9 a rela\u00e7\u00e3o entre a GUI e as APIs de um SO. A GUI (asbtra\u00e7\u00e3o) apenas transfere as a\u00e7\u00f5es do usu\u00e1rio para que a API (implementa\u00e7\u00e3o) realize o trabalho.","title":"3. Bridge"},{"location":"Padroes_de_projeto/GOFs/gof_estrutural/#31-estrutura","text":"A Abstra\u00e7\u00e3o fornece a l\u00f3gica de controle de alto n\u00edvel. Ela depende do objeto de implementa\u00e7\u00e3o para fazer o verdadeiro trabalho de baixo n\u00edvel. A Implementa\u00e7\u00e3o declara a interface que \u00e9 comum para todas as implementa\u00e7\u00f5es concretas. Um abstra\u00e7\u00e3o s\u00f3 pode se comunicar com um objeto de implementa\u00e7\u00e3o atrav\u00e9s de m\u00e9todos que s\u00e3o declarados aqui. Implementa\u00e7\u00f5es Concretas cont\u00e9m c\u00f3digo plataforma-espec\u00edficos. Abstra\u00e7\u00f5es Refinadas fornecem variantes para controle da l\u00f3gica. Como seu superior, trabalham com diferentes implementa\u00e7\u00f5es atrav\u00e9s da interface geral de implementa\u00e7\u00e3o.","title":"3.1. Estrutura"},{"location":"Padroes_de_projeto/GOFs/gof_estrutural/#32-vantagens","text":"Desacopla o c\u00f3digo da abstra\u00e7\u00e3o do c\u00f3digo da implementa\u00e7\u00e3o (SRP) Insere o OCP para novas abstra\u00e7\u00f5es/implementa\u00e7\u00f5es para o c\u00f3digo existente. Tem as mesmas vantagens do Adapter.","title":"3.2. Vantagens"},{"location":"Padroes_de_projeto/GOFs/gof_estrutural/#33-desvantagens","text":"Aumenta a complexidade do projeto quando aplicada em locais inapropriados.","title":"3.3. Desvantagens"},{"location":"Padroes_de_projeto/GOFs/gof_estrutural/#34-aplicacao-no-projeto","text":"Aplicar o Bridge no projeto ir\u00e1 aumentar a complexidade sem ter vantagens significativas, dado que poucos pontos do projeto tem essa rela\u00e7\u00e3o abstra\u00e7\u00e3o-implementa\u00e7\u00e3o.","title":"3.4. Aplica\u00e7\u00e3o no Projeto"},{"location":"Padroes_de_projeto/GOFs/gof_estrutural/#4-composite","text":"Composite \u00e9 um padr\u00e3o que permite que componha objetos em estruturas de \u00e1rvores e ent\u00e3o trabalhar com essas estruturas como se ela fosse objetos individuais. Esse padr\u00e3o s\u00f3 faz sentido se a estrutura central pode ser representada como uma \u00e1rvore. Simplificando, a Composite pode ser descrita como uma classe que represente toda a estrutura de \u00e1rvore. Um bom exemplo para ilustrar \u00e9 quando temos uma compra e a compra tem caixas que podem guardar tanto caixas quanto produtos. Essa situa\u00e7\u00e3o pode gerar uma \u00e1rvore com os produtos sendo as folhas e as caixas sendo os demais v\u00e9rtices. Calcular o pre\u00e7o nessa estrutura pode ser uma tarefa \u00e1rdua e nesse caso o Composite se torna bastante vantajoso de ser aplicado no c\u00f3digo.","title":"4. Composite"},{"location":"Padroes_de_projeto/GOFs/gof_estrutural/#41-estrutura","text":"A interface Componente descreve opera\u00e7\u00f5es que s\u00e3o comuns tanto para elementos simples como para elementos complexos da \u00e1rvore. A Folha \u00e9 um elemento b\u00e1sico de uma \u00e1rvore que n\u00e3o tem sub-elementos. O Cont\u00eainer (ou composite) \u00e9 o elemento que tem sub-elementos: folhas ou outros cont\u00eaineres. Um cont\u00eainer n\u00e3o sabe a classe concreta de seus filhos. Ele trabalha com todos os sub-elementos apenas atrav\u00e9s da interface componente. O Cliente trabalha com todos os elementos atrav\u00e9s da interface componente. Como resultado, o cliente pode trabalhar da mesma forma tanto com elementos simples como elementos complexos da \u00e1rvore.","title":"4.1. Estrutura"},{"location":"Padroes_de_projeto/GOFs/gof_estrutural/#42-vantagens","text":"Facilidae para criar objetos complexos por composi\u00e7\u00e3o. Facilidade para gerar uma hierarquia de objetos. Facilidade de usar polimorfismo e recurs\u00e3o. Aplica\u00e7\u00e3o do OCP.","title":"4.2. Vantagens"},{"location":"Padroes_de_projeto/GOFs/gof_estrutural/#43-desvantagens","text":"Dependendo da estrutura pode quebrar o ISP em estruturas folhas que podem n\u00e3o usar alguns de seus m\u00e9todos.","title":"4.3. Desvantagens"},{"location":"Padroes_de_projeto/GOFs/gof_estrutural/#44-aplicacao-no-projeto","text":"Uma poss\u00edvel aplica\u00e7\u00e3o \u00e9 com rela\u00e7\u00e3o a estrutura englobada pela classe owner, estabeliciment e suas filhas. Essa estrutura se assemelha a uma \u00e1rvore, entretanto, possui v\u00e1rias fun\u00e7\u00f5es distintas, sendo assim, aplicar esse padr\u00e3o nesse caso acima fere o ISP.","title":"4.4. Aplica\u00e7\u00e3o no Projeto"},{"location":"Padroes_de_projeto/GOFs/gof_estrutural/#5-decorator","text":"Decorators se tratam de classes que permitem a adi\u00e7\u00e3o de funcionalidade sob uma outra classe base em tempo de execu\u00e7\u00e3o. Isto \u00e9 feito a partir da composi\u00e7\u00e3o de objetos do mesmo tipo ao inv\u00e9s da cria\u00e7\u00e3o de uma cadeia de heran\u00e7as e uma s\u00e9rie de estruturas condicionais. Este padr\u00e3o permite que novas responsabilidades sejam atribu\u00eddas sem, necessariamente, atribu\u00ed-las ao objeto pesado. Metaforicamente, decorators atribuem uma lista de responsabilidades din\u00e2micamente para a classe base alvo.","title":"5. Decorator"},{"location":"Padroes_de_projeto/GOFs/gof_estrutural/#51-estrutura","text":"O Componente declara a interface comum tanto para os envolt\u00f3rios como para os objetos envolvidos. O Componente Concreto \u00e9 uma classe de objetos sendo envolvidos. Ela define o comportamento b\u00e1sico, que pode ser alterado por decoradores. A classe Decorador Base tem um campo para referenciar um objeto envolvido. O tipo do campo deve ser declarado assim como a interface do componente para que possa conter ambos os componentes concretos e os decoradores. Os Decoradores Concretos definem os comportamentos adicionais que podem ser adicionados aos componentes dinamicamente. O Cliente pode envolver componentes em m\u00faltiplas camadas de decoradors, desde que trabalhe com todos os objetos atrav\u00e9s da interface do componente.","title":"5.1. Estrutura"},{"location":"Padroes_de_projeto/GOFs/gof_estrutural/#52-vantagens","text":"Permite a adi\u00e7\u00e3o e remo\u00e7\u00e3o de funcionalidades em tempo de execu\u00e7\u00e3o. Evita heran\u00e7as quando n\u00e3o existe uma grande necessidade para heran\u00e7a. \u00c9 poss\u00edvel separar o estado interno de cada uma das funcionalidades, cada qual com seu pr\u00f3prio conjunto de regras e propriedades, sem que elas interfiram umas nas outras, sem alongar a classe original e sem heran\u00e7a.","title":"5.2. Vantagens"},{"location":"Padroes_de_projeto/GOFs/gof_estrutural/#53-desvantagens","text":"\u00c9 poss\u00edvel argumentar que, em certos contextos, decorators apresentam problemas semelhantes aos causados por heran\u00e7a m\u00faltipla - problema do diamante . Neste sentido, se usados sem cuidado, podem causar uma refatora\u00e7\u00e3o geral das funcionalidades envolvidas. Caso muitas funcionalidades sejam adicionadas por meio de decorators, existe o risco de interfer\u00eancias entre si. Pelo fato de decorators separarem funcionalidades, fica mais dif\u00edcil de depurar qual \u00e9 a intera\u00e7\u00e3o de dois ou mais decorators que causam o problema. Neste contexto, classes herdadadas seriam mais f\u00e1ceis de serem consertadas.","title":"5.3. Desvantagens"},{"location":"Padroes_de_projeto/GOFs/gof_estrutural/#54-aplicacao-no-projeto","text":"Embora a arquitetura do projeto Encare n\u00e3o seja complexa o suficiente para se considerar a necessidade de adicionar um decotarator no seu stricto senso , seu uso poderia ser feito considerando em um contexto onde cada estabelecimento tenha um comportamento diferente quanto ao seu tipo: class Estabelecimento : ... class BarbeariaDecorator ( Estabelecimento ): ... class CabeleireiroDecorator ( Estabelecimento ): ... def estabelecimento_factory ( args ): \"\"\" Cria um novo estabelecimento a partir de keywords \"\"\" estabelecimento = Estabelecimento () if 'cabeleireiro' in args : estabelecimento = CabeleireiroDecorator ( estabelecimento ) if 'barbearia' in args : estabelecimento = BarbeariaDecorator ( estabelecimento ) return estabelecimento O conceito de decorators se provou t\u00e3o \u00fatil que foi abstra\u00eddo para mais contextos do que apenas o que foi citado. Por exemplo, o feature da linguagem python chamado de \"decorator\" foi inspirado na dinamicidade que o design pattern decorator prov\u00ea. Um decorator do python n\u00e3o \u00e9 um padr\u00e3o de projeto, mas foi inspirado no conceito. Este feature da linguagem pode vir a ser usado no Backend do projeto.","title":"5.4. Aplica\u00e7\u00e3o no Projeto"},{"location":"Padroes_de_projeto/GOFs/gof_estrutural/#6-facade","text":"Esse padr\u00e3o promove uma interface unificada para um conjunto de interfaces em um sub sistema. Facade define uma interface de maior n\u00edvel facilitando assim o uso do sistema. \u00c9 importante ressaltar que o objetivo n\u00e3o \u00e9 o desacoplamento e sim facilitar o uso do sistema por parte do c\u00f3digo cliente. Outro ponto importe \u00e9 com rela\u00e7\u00e3o a classes que tem muitas responsabilidades; o uso excessivo desse padr\u00e3o concentrado em poucas clases Facade pode quebrar o SRP e tamb\u00e9m o ISP, pois muitas fun\u00e7\u00f5es podem torna a classe de prop\u00f3sito geral. Por mais que seja bem simples o seu uso, esse padr\u00e3o requer um pouco de aten\u00e7\u00e3o em sua aplica\u00e7\u00e3o.","title":"6. Facade"},{"location":"Padroes_de_projeto/GOFs/gof_estrutural/#61-estrutura","text":"A Fachada fornece um acesso conveniente para uma parte particular da funcionalidade do subsistema. Ela sabe onde direcionar o pedido do cliente e como operar todas as partes m\u00f3veis. Uma classe Fachada Adicional pode ser criada para prevenir a polui\u00e7\u00e3o de uma \u00fanica fachada com funcionalidades n\u00e3o relevantes que podem torn\u00e1-lo mais uma estrutura complexa. O Subsistema Complexo consiste em d\u00fazias de objetos variados. Para tornar todos eles em algo que signifique alguma coisa, voc\u00ea tem que mergulhar fundo nos detalhes de implementa\u00e7\u00e3o do subsistema, tais como objetos de inicializa\u00e7\u00e3o na ordem correta e supr\u00ed-los com dados no formato correto. O Cliente usa a fachada ao inv\u00e9s de chamar os objetos do subsistema diretamente.","title":"6.1. Estrutura"},{"location":"Padroes_de_projeto/GOFs/gof_estrutural/#62-vantagens","text":"Isola o c\u00f3digo complexo do c\u00f3digo cliente. Facilita o uso do sistema Cria pontos de entrada para camadas da aplica\u00e7\u00e3o e servi\u00e7os de terceiros.","title":"6.2. Vantagens"},{"location":"Padroes_de_projeto/GOFs/gof_estrutural/#63-desvantagens","text":"O ISP e o RSP pode ser facilmente quebrados.","title":"6.3. Desvantagens"},{"location":"Padroes_de_projeto/GOFs/gof_estrutural/#64-aplicacao-no-projeto","text":"A ideia desta aplica\u00e7\u00e3o \u00e9 fornecer uma interface simplificada para a cria\u00e7\u00e3o de usu\u00e1rios a partir de um tipo de usu\u00e1rios( userType ).","title":"6.4. Aplica\u00e7\u00e3o no projeto"},{"location":"Padroes_de_projeto/GOFs/gof_estrutural/#641-representacao","text":"","title":"6.4.1. Representa\u00e7\u00e3o"},{"location":"Padroes_de_projeto/GOFs/gof_estrutural/#642-codigo","text":"from constants import USER_TYPES import AdminFactory , CustomerFactory , OwnerFactory class UserFacade (): def getUser ( userType , userData ): if userType == USER_TYPES . ADMIN : adminFactory = AdminFactory () return adminFactory . getUser ( userData ) elif userType == USER_TYPES . CUSTOMER : customerFactory = CustomerFactory () return customerFactory . getUser ( userData ) elif userType == USER_TYPES . OWNER : ownerFactory = OwnerFactory () return ownerFactory . getUser ( userData ) else : raise AssertionError","title":"6.4.2. C\u00f3digo"},{"location":"Padroes_de_projeto/GOFs/gof_estrutural/#7-flyweight","text":"Esse padr\u00e3o de projeto tem como inten\u00e7\u00e3o usar compatilhamento para suportar um grande n\u00famero de objetos de baixa granularidade. Usado quando existem uma grande quantidade de objetos semelhantes e a partir desse ponto \u00e9 dividido essa classe entre um objeto que \u00e9 repetido com mais frequ\u00eancia com um que \u00e9 mais \u00fanico, podendo assim existir o compartilhamento e melhorando quest\u00f5es de desempenho. \u00c9 um padr\u00e3o de otimiza\u00e7\u00e3o que visa principalmente economizar mem\u00f3ria RAM diminuindo o n\u00famero de objetos. Deve ser usado somente se a aplica\u00e7\u00e3o estiver com alto consumo de RAM. No livro Design pattern [1], os autores listam uma s\u00e9rie de fatores para o uso do flyweight : A aplica\u00e7\u00e3o usa uma grande quantidade de objetos. Os custos de armazenamento s\u00e3o altos (mem\u00f3ria e tempo de processamento). A maioria dos estados dos objetos podem ser compartilhados. Muitos objetos podem ser substituidos por poucos objetos compatilhados. A aplica\u00e7a\u00f5 n\u00e3o depende da identidade dos objetos.","title":"7. Flyweight"},{"location":"Padroes_de_projeto/GOFs/gof_estrutural/#71-estrutura","text":"A classe Flyweight cont\u00e9m a por\u00e7\u00e3o do estado do objeto original que pode ser compartilhada entre m\u00faltiplos objetos. O mesmo objeto flyweight pode ser usado em muitos contextos diferentes. A classe Contexto cont\u00e9m o estado extr\u00ednseco, \u00fanico para todos os objetos originais. Quando um contexto \u00e9 pareado com um dos objetos flyweight , ele representa o estado completo do objeto original. Geralmente, o comportamento do objeto original permanece na classe flyweight . Nesse caso, quem chamar o m\u00e9todo do flyweight deve tamb\u00e9m passar os dados apropriados do estado extr\u00ednseco nos par\u00e2metros do m\u00e9todo. O Cliente calcula ou armazena o estado extr\u00ednseco dos flyweights . A F\u00e1brica Flyweight gerencia um conjunto de flyweights existentes. Com a f\u00e1brica os clientes n\u00e3o precisam criar flyweights diretamente. Ao inv\u00e9s disso, eles chamam a f\u00e1brica, passam os dados de estado intr\u00ednseco para o flyweight desejado.","title":"7.1. Estrutura"},{"location":"Padroes_de_projeto/GOFs/gof_estrutural/#72-vantagens","text":"Pode economizar RAM.","title":"7.2. Vantagens"},{"location":"Padroes_de_projeto/GOFs/gof_estrutural/#73-desvantagens","text":"Muito complexo em n\u00edvel de c\u00f3digo.","title":"7.3. Desvantagens"},{"location":"Padroes_de_projeto/GOFs/gof_estrutural/#74-aplicacao-no-projeto","text":"Esse padr\u00e3o \u00e9 usado em uma situa\u00e7\u00e3o bem espec\u00edfica e possui v\u00e1rias condi\u00e7\u00f5es que precisam ser atendidas para que seja vantasojo ou mesmo seja poss\u00edvel aplicar no projeto. No caso do projeto Encare, a quantidade de objetos n\u00e3o \u00e9 grande em nenhum dos casos e n\u00e3o pode ser notado nenhum consumo excessivo de mem\u00f3ria nesse est\u00e1gio do desenvolvimento (modelagem), portanto \u00e9 invi\u00e1rio o uso desse padr\u00e3o de projeto.","title":"7.4. Aplica\u00e7\u00e3o no Projeto"},{"location":"Padroes_de_projeto/GOFs/gof_estrutural/#8-proxy","text":"De acordo com o Design Pattern[1], esse padr\u00e3o tem como inten\u00e7\u00e3o fornecer um substituo ou um marcador de localiza\u00e7\u00e3o para outro objeto com a finalidade de controlar o seu acesso. Em outras palavras o proxy funciona como um intermediador entre o c\u00f3digo cliente e o objeto que \u00e9 necessitado. Tem uma estrutra muito similar aos padr\u00f5es Composite e Decorator . O Proxy controla todo o fluxo de informa\u00e7\u00f5es entre o c\u00f3digo cliente e o objeto real, podendo escolher como e quando repassar as informa\u00e7\u00f5es inclusive. Al\u00e9m disso ele tem muitas varia\u00e7\u00f5es como: proxy virtual, proxy remoto, proxy de prote\u00e7\u00e3o, entre outros.","title":"8. Proxy"},{"location":"Padroes_de_projeto/GOFs/gof_estrutural/#81-estrutura","text":"A Interface do Servi\u00e7o declara a interface do Servi\u00e7o. O proxy deve seguir essa interface para ser capaz de se disfar\u00e7ar como um objeto do servi\u00e7o. O Servi\u00e7o \u00e9 uma classe que fornece alguma l\u00f3gica de neg\u00f3cio \u00fatil. A classe Proxy tem um campo de refer\u00eancia que aponta para um objeto do servi\u00e7o. Ap\u00f3s o proxy finalizar seu processamento (por exemplo: inicializa\u00e7\u00e3o pregui\u00e7osa, acesso, acessar controle, colocar em cache, etc.), ele passa o pedido para o objeto do servi\u00e7o. O Cliente deve trabalhar tanto com os servi\u00e7os e proxies atrav\u00e9s da mesma interface. Dessa forma voc\u00ea pode passar uma proxy para qualquer c\u00f3digo que espera um objeto do servi\u00e7o.","title":"8.1. Estrutura"},{"location":"Padroes_de_projeto/GOFs/gof_estrutural/#82-vantagens","text":"O c\u00f3digo cliente n\u00e3o saber\u00e1 se esta usando ou n\u00e3o o Proxy . Voc\u00ea pode adicionar novos Proxies sem alterar o c\u00f3digo testado (OCP) O proxy funciona mesmo se o obejto real n\u00e3o estiver operacional ou pronto para uso.","title":"8.2. Vantagens"},{"location":"Padroes_de_projeto/GOFs/gof_estrutural/#83-desvantagens","text":"Aumenta a complexidade do sistema.","title":"8.3. Desvantagens"},{"location":"Padroes_de_projeto/GOFs/gof_estrutural/#84-aplicacao-no-projeto","text":"\u00c9 um padr\u00e3o muito vers\u00e1til e ser\u00e1 utilizado no projeto como um intermediador na intera\u00e7\u00e3o da classe Geolocation com a API do Google Maps, validando a latitude e longitude e adicionando o Token da API antes de enviar o request .","title":"8.4. Aplica\u00e7\u00e3o no Projeto"},{"location":"Padroes_de_projeto/GOFs/gof_estrutural/#841-representacao","text":"","title":"8.4.1. Representa\u00e7\u00e3o"},{"location":"Padroes_de_projeto/GOFs/gof_estrutural/#842-codigo","text":"import re import googlemaps from abc import ABCMeta , abstractmethod class GoogleMapsInterface (): __metaclass__ = ABCMeta @abc . abstractmethod def getDistance (): raise NotImplementedError class ProxyGoogleMaps (): def __init__ ( self ): self . googleMapsServices = googlemaps . Client ( key = 'MY_KEY' ) def checkGeolocation ( coords ) -> bool : patternLat = 'regex_lat' patternLng = 'regex_lng' return re . search ( patternLat , coords . lat ) and re . search ( patternLng , coords . lng ) def getDistance ( self , source , destination ) -> float : if checkGeolocation ( source ) and checkGeolocation ( destination ): return self . googleMapsServices . distance_matrix ( origins = source , destinations = destination )","title":"8.4.2. C\u00f3digo"},{"location":"Padroes_de_projeto/GOFs/gof_estrutural/#10-referencias","text":"[1] - GAMMA, Erich; HELM, Richard; JOHNSON, Ralph; VLISSIDES, John. Design Patterns: Elements of Reusable Object-Oriented Software. Indianapolis: [s. n.], 1994. [2] - Design Pattern: Django REST Framework. Dispon\u00edvel em: https://davenathanaeld.medium.com/design-pattern-django-rest-framework-1e8c17946bce. Acesso em 4 abr. 2021. [3] - Bridge. Dispon\u00edvel em: https://refactoring.guru/pt-br/design-patterns/bridge. Acesso em 5 abr. 2021. [4] - Composite. Dispon\u00edvel em: https://refactoring.guru/pt-br/design-patterns/composite. acesso em 5 abr. 2021.","title":"10. Refer\u00eancias"},{"location":"Padroes_de_projeto/GOFs/gof_estrutural/#11-versionamento","text":"Data Nome Detalhes Vers\u00e3o 4/4/2021 Jo\u00e3o Pedro Carvalho Adiciona padr\u00e3o Adapter 0.1 4/4/2021 Renato Britto Araujo Adiciona padr\u00e3o Decorator 0.2 4/4/2021 Jo\u00e3o Pedro Carvalho Adiciona padr\u00e3o Bridge 0.3 5/4/2021 Jo\u00e3o Pedro Carvalho Adiciona padr\u00e3o Composite 0.4 5/4/2021 Jo\u00e3o Pedro Carvalho Adiciona padr\u00e3o Facade 0.5 6/4/2021 Jo\u00e3o Pedro Carvalho Adiciona padr\u00e3o Flyweight 0.6 6/4/2021 Jo\u00e3o Pedro Carvalho Adiciona padr\u00e3o Proxy 0.7 8/4/2021 Jo\u00e3o Luis Baraky e Gustavo Nogueira Atualiza aplica\u00e7\u00e3o do projeto do Facade e Proxy 0.8 8/4/2021 Jo\u00e3o Luis Baraky e Gustavo Nogueira Atualiza aplica\u00e7\u00e3o do projeto do Proxy 0.9 8/4/2021 Gustavo Nogueira Atualiza aplica\u00e7\u00e3o do projeto do Facade 1.0 9/4/2021 Gustavo Nogueira Adi\u00e7\u00e3o do t\u00f3pico estrutura 1.1","title":"11. Versionamento"},{"location":"Padroes_de_projeto/Padroes_emergentes/balking/","text":"Balking design pattern Descri\u00e7\u00e3o: O padr\u00e3o de projeto balking executa uma a\u00e7\u00e3o sobre um objeto apenas quando esse se encontra em um estado espec\u00edfico. Por exemplo, um arquivo em zip pode ser usado somente se estiver aberto, caso ele n\u00e3o esteja aberto e o software dever\u00e1 fazer um \"balk\" com a request. Em outras palavras, esse padr\u00e3o de projeto \u00e9 usado para rejeitar uma a\u00e7\u00e3o quando um estado ou uma condi\u00e7\u00e3o n\u00e3o \u00e9 satisfeita. Uso: \u00c9 muito vantajoso quando se trabalha com threads ou multiplos processos acessando um mesmo objeto ou um mesmo local de mem\u00f3ria. Quando o objeto a ser acessado precisa de um estado espec\u00edfico de projeto. Implementa\u00e7\u00e3o: Aqui est\u00e1 uma implementa\u00e7\u00e3o simples, mas que consegue mostrar em n\u00edvel de c\u00f3digo como o padr\u00e3o de projeto baking se comporta. basicamente tenta realizar a a\u00e7\u00e3o e caso a condi\u00e7\u00e3o de uso seja realizada a a\u00e7\u00e3o \u00e9 permitida, caso contr\u00e1rio ocorre o balking . class Exemple : def action (): if working : return working = true def complete_action (): working = false Refer\u00eancias: [1] - https://en.wikipedia.org/wiki/Software_design_pattern Acesso em 29/03/2021, as 22:35 [2] - https://social.technet.microsoft.com/wiki/contents/articles/13235.balking-design-pattern.aspx Acesso em 29/03/2021 Versionamento: Data Nome Detalhe Vers\u00e3o 29/03/2021 Jo\u00e3o Pedro Carvalho Adicionando Balking design pattern 1.0","title":"Balking"},{"location":"Padroes_de_projeto/Padroes_emergentes/balking/#balking-design-pattern","text":"","title":"Balking design pattern"},{"location":"Padroes_de_projeto/Padroes_emergentes/balking/#descricao","text":"O padr\u00e3o de projeto balking executa uma a\u00e7\u00e3o sobre um objeto apenas quando esse se encontra em um estado espec\u00edfico. Por exemplo, um arquivo em zip pode ser usado somente se estiver aberto, caso ele n\u00e3o esteja aberto e o software dever\u00e1 fazer um \"balk\" com a request. Em outras palavras, esse padr\u00e3o de projeto \u00e9 usado para rejeitar uma a\u00e7\u00e3o quando um estado ou uma condi\u00e7\u00e3o n\u00e3o \u00e9 satisfeita.","title":"Descri\u00e7\u00e3o:"},{"location":"Padroes_de_projeto/Padroes_emergentes/balking/#uso","text":"\u00c9 muito vantajoso quando se trabalha com threads ou multiplos processos acessando um mesmo objeto ou um mesmo local de mem\u00f3ria. Quando o objeto a ser acessado precisa de um estado espec\u00edfico de projeto.","title":"Uso:"},{"location":"Padroes_de_projeto/Padroes_emergentes/balking/#implementacao","text":"Aqui est\u00e1 uma implementa\u00e7\u00e3o simples, mas que consegue mostrar em n\u00edvel de c\u00f3digo como o padr\u00e3o de projeto baking se comporta. basicamente tenta realizar a a\u00e7\u00e3o e caso a condi\u00e7\u00e3o de uso seja realizada a a\u00e7\u00e3o \u00e9 permitida, caso contr\u00e1rio ocorre o balking . class Exemple : def action (): if working : return working = true def complete_action (): working = false","title":"Implementa\u00e7\u00e3o:"},{"location":"Padroes_de_projeto/Padroes_emergentes/balking/#referencias","text":"[1] - https://en.wikipedia.org/wiki/Software_design_pattern Acesso em 29/03/2021, as 22:35 [2] - https://social.technet.microsoft.com/wiki/contents/articles/13235.balking-design-pattern.aspx Acesso em 29/03/2021","title":"Refer\u00eancias:"},{"location":"Padroes_de_projeto/Padroes_emergentes/balking/#versionamento","text":"Data Nome Detalhe Vers\u00e3o 29/03/2021 Jo\u00e3o Pedro Carvalho Adicionando Balking design pattern 1.0","title":"Versionamento:"},{"location":"Padroes_de_projeto/Padroes_emergentes/interception_filter/","text":"Interception Filter Descri\u00e7\u00e3o Em aplica\u00e7\u00f5es web, principalmente, \u00e9 importante que as requisi\u00e7\u00f5es passem por algumas opera\u00e7\u00f5es de pr\u00e9 ou p\u00f3s processamento antes de seu processamento principal ser feito, como autentica\u00e7\u00e3o, autoriza\u00e7\u00e3o ou logging por exemplo. A solu\u00e7\u00e3o cl\u00e1ssica consiste em uma s\u00e9rie de checagens condicionais, e abortando a requisi\u00e7\u00e3o caso seja encontrada alguma falha. Declara\u00e7\u00f5es de if/else s\u00e3o a estrat\u00e9gia padr\u00e3o, mas essa solu\u00e7\u00e3o leva \u00e0 fragilidade do c\u00f3digo e um estilo de programa\u00e7\u00e3o de copia-cola, pois o fluxo de filtragem e a a\u00e7\u00e3o dos filtros s\u00e3o compiladas dentro da aplica\u00e7\u00e3o. [2] O padr\u00e3o de filtro interceptor consiste em ter um mec\u00e2nismo para adicionar e remover os componentes de processamento, de forma que cada componente realize uma a\u00e7\u00e3o de filtragem espec\u00edfica, fornecendo um maior n\u00edvel de coes\u00e3o e manutenabilidade. Os componentes participantes deste padr\u00e3o s\u00e3o descritos a seguir [1]: Gerenciador de filtros (Filter Manager): Gerencia o processamento dos filtros criando a corrente de filtros com os filtros corretos, na ordem correta, e inicializa o processamento. Corrente de filtros (FilterChain): \u00c9 uma cole\u00e7\u00e3o de filtros independentes. \u00c9 respons\u00e1vel por coordenar o processamento dos filtros. Filtro 1 e 2 (FilterOne/FilterTwo no diagrama): S\u00e3o filtros individuais mapeados para um alvo. Alvo (Target): \u00c9 o recurso requisitado pelo cliente. Cliente (Client): \u00c9 o objeto que envia a requisi\u00e7\u00e3o. Refer\u00eancias [1] - https://www.geeksforgeeks.org/intercepting-filter-pattern/ Acesso em 28/03/2021 [2] - https://www.tutorialspoint.com/design_pattern/intercepting_filter_pattern.htm Acesso em 28/03/2021 Versionamento Autor Data Vers\u00e3o Descri\u00e7\u00e3o Wagner Martins 28/03/2021 0.1 Adi\u00e7\u00e3o do padr\u00e3o Interception Filter","title":"Interception Filter"},{"location":"Padroes_de_projeto/Padroes_emergentes/interception_filter/#interception-filter","text":"","title":"Interception Filter"},{"location":"Padroes_de_projeto/Padroes_emergentes/interception_filter/#descricao","text":"Em aplica\u00e7\u00f5es web, principalmente, \u00e9 importante que as requisi\u00e7\u00f5es passem por algumas opera\u00e7\u00f5es de pr\u00e9 ou p\u00f3s processamento antes de seu processamento principal ser feito, como autentica\u00e7\u00e3o, autoriza\u00e7\u00e3o ou logging por exemplo. A solu\u00e7\u00e3o cl\u00e1ssica consiste em uma s\u00e9rie de checagens condicionais, e abortando a requisi\u00e7\u00e3o caso seja encontrada alguma falha. Declara\u00e7\u00f5es de if/else s\u00e3o a estrat\u00e9gia padr\u00e3o, mas essa solu\u00e7\u00e3o leva \u00e0 fragilidade do c\u00f3digo e um estilo de programa\u00e7\u00e3o de copia-cola, pois o fluxo de filtragem e a a\u00e7\u00e3o dos filtros s\u00e3o compiladas dentro da aplica\u00e7\u00e3o. [2] O padr\u00e3o de filtro interceptor consiste em ter um mec\u00e2nismo para adicionar e remover os componentes de processamento, de forma que cada componente realize uma a\u00e7\u00e3o de filtragem espec\u00edfica, fornecendo um maior n\u00edvel de coes\u00e3o e manutenabilidade. Os componentes participantes deste padr\u00e3o s\u00e3o descritos a seguir [1]: Gerenciador de filtros (Filter Manager): Gerencia o processamento dos filtros criando a corrente de filtros com os filtros corretos, na ordem correta, e inicializa o processamento. Corrente de filtros (FilterChain): \u00c9 uma cole\u00e7\u00e3o de filtros independentes. \u00c9 respons\u00e1vel por coordenar o processamento dos filtros. Filtro 1 e 2 (FilterOne/FilterTwo no diagrama): S\u00e3o filtros individuais mapeados para um alvo. Alvo (Target): \u00c9 o recurso requisitado pelo cliente. Cliente (Client): \u00c9 o objeto que envia a requisi\u00e7\u00e3o.","title":"Descri\u00e7\u00e3o"},{"location":"Padroes_de_projeto/Padroes_emergentes/interception_filter/#referencias","text":"[1] - https://www.geeksforgeeks.org/intercepting-filter-pattern/ Acesso em 28/03/2021 [2] - https://www.tutorialspoint.com/design_pattern/intercepting_filter_pattern.htm Acesso em 28/03/2021","title":"Refer\u00eancias"},{"location":"Padroes_de_projeto/Padroes_emergentes/interception_filter/#versionamento","text":"Autor Data Vers\u00e3o Descri\u00e7\u00e3o Wagner Martins 28/03/2021 0.1 Adi\u00e7\u00e3o do padr\u00e3o Interception Filter","title":"Versionamento"},{"location":"Padroes_de_projeto/Padroes_emergentes/lazy_loading/","text":"Lazy Loading O Lazy Loading ou carregamento pregui\u00e7oso , em tradu\u00e7\u00e3o livre, \u00e9 um padr\u00e3o usado afim de otimizar a execu\u00e7\u00e3o de um sistema, usado ao lado da fun\u00e7\u00e3o Code Splitting (que separa a demanda de carregamento), contribui para um fluxo de navega\u00e7\u00e3o mais amig\u00e1vel \u00e0 aparelhos de baixo desempenho ou conex\u00f5es lentas de internet. O conceito gira entorno de separar a demanda de acordo com a a\u00e7\u00e3o do usu\u00e1rio, executando um determinado bloco de c\u00f3digo apenas quando o usu\u00e1rio requisita uma a\u00e7\u00e3o direta relacionada ou indireta e dependente. Isso faz com que o tempo de resposta seja m\u00ednimo, como no caso de aplica\u00e7\u00f5es web. Um dos frameworks que utiliza esse conceito \u00e9 o Angular, que permite que os desenvolvedores decidam quais m\u00f3dulos ir\u00e3o executar assim que a aplica\u00e7\u00e3o iniciar. Implementa\u00e7\u00e3o Para a aplica\u00e7\u00e3o no Encare, este padr\u00e3o pode ser usado no Front-end pela fun\u00e7\u00e3o lazy do react, junto com o componente Suspense para exibir o status de loading . O carregamento do componente que mostra os dados do estabelecimento pode ser carregado depois, neste caso, assim que o usu\u00e1rio clicar para obter mais informa\u00e7\u00f5es de determinado estabelecimento. import React , { Suspense , lazy } from 'react' ; import { BrowserRouter as Router , Route , Switch } from 'react-router-dom' ; const Home = lazy (() => import ( './routes/Home' )); const Estabilishment = lazy (() => import ( './routes/Estabilishment' )); const App = () => ( < Router > < Suspense fallback = { < div > Loading ... < /div>}> < Switch > < Route exact path = \"/\" component = { Home } /> < Route path = \"/estabilishment\" component = { Estabilishment } /> < /Switch> < /Suspense> < /Router> ); export default App ; Refer\u00eancias [1] Site: Wikipedia - Lazy Loading. Dispon\u00edvel em: https://en.wikipedia.org/wiki/Lazy_loading Acesso 08/04/2021. [2] Site: Medium - Code Splitting e Lazy Loading em React. Dispon\u00edvel em https://medium.com/reactbrasil/code-splitting-e-lazy-loading-em-react-b1ce9870289f [3] Site: ReactJs Document - Dividindo o C\u00f3digo (Code-Splitting). Dispon\u00edvel em: https://pt-br.reactjs.org/docs/code-splitting.html . Acesso 08/04/2021 Versionamento Autor Data Descri\u00e7\u00e3o Vers\u00e3o Hugo e Wagner 08/04/2021 Cria\u00e7\u00e3o do documento e adi\u00e7\u00e3o de conceitos 0.1 Hugo e Wagner 08/04/2021 Adi\u00e7\u00e3o da implementa\u00e7\u00e3o 0.2","title":"Lazy Loading"},{"location":"Padroes_de_projeto/Padroes_emergentes/lazy_loading/#lazy-loading","text":"O Lazy Loading ou carregamento pregui\u00e7oso , em tradu\u00e7\u00e3o livre, \u00e9 um padr\u00e3o usado afim de otimizar a execu\u00e7\u00e3o de um sistema, usado ao lado da fun\u00e7\u00e3o Code Splitting (que separa a demanda de carregamento), contribui para um fluxo de navega\u00e7\u00e3o mais amig\u00e1vel \u00e0 aparelhos de baixo desempenho ou conex\u00f5es lentas de internet. O conceito gira entorno de separar a demanda de acordo com a a\u00e7\u00e3o do usu\u00e1rio, executando um determinado bloco de c\u00f3digo apenas quando o usu\u00e1rio requisita uma a\u00e7\u00e3o direta relacionada ou indireta e dependente. Isso faz com que o tempo de resposta seja m\u00ednimo, como no caso de aplica\u00e7\u00f5es web. Um dos frameworks que utiliza esse conceito \u00e9 o Angular, que permite que os desenvolvedores decidam quais m\u00f3dulos ir\u00e3o executar assim que a aplica\u00e7\u00e3o iniciar.","title":"Lazy Loading"},{"location":"Padroes_de_projeto/Padroes_emergentes/lazy_loading/#implementacao","text":"Para a aplica\u00e7\u00e3o no Encare, este padr\u00e3o pode ser usado no Front-end pela fun\u00e7\u00e3o lazy do react, junto com o componente Suspense para exibir o status de loading . O carregamento do componente que mostra os dados do estabelecimento pode ser carregado depois, neste caso, assim que o usu\u00e1rio clicar para obter mais informa\u00e7\u00f5es de determinado estabelecimento. import React , { Suspense , lazy } from 'react' ; import { BrowserRouter as Router , Route , Switch } from 'react-router-dom' ; const Home = lazy (() => import ( './routes/Home' )); const Estabilishment = lazy (() => import ( './routes/Estabilishment' )); const App = () => ( < Router > < Suspense fallback = { < div > Loading ... < /div>}> < Switch > < Route exact path = \"/\" component = { Home } /> < Route path = \"/estabilishment\" component = { Estabilishment } /> < /Switch> < /Suspense> < /Router> ); export default App ;","title":"Implementa\u00e7\u00e3o"},{"location":"Padroes_de_projeto/Padroes_emergentes/lazy_loading/#referencias","text":"[1] Site: Wikipedia - Lazy Loading. Dispon\u00edvel em: https://en.wikipedia.org/wiki/Lazy_loading Acesso 08/04/2021. [2] Site: Medium - Code Splitting e Lazy Loading em React. Dispon\u00edvel em https://medium.com/reactbrasil/code-splitting-e-lazy-loading-em-react-b1ce9870289f [3] Site: ReactJs Document - Dividindo o C\u00f3digo (Code-Splitting). Dispon\u00edvel em: https://pt-br.reactjs.org/docs/code-splitting.html . Acesso 08/04/2021","title":"Refer\u00eancias"},{"location":"Padroes_de_projeto/Padroes_emergentes/lazy_loading/#versionamento","text":"Autor Data Descri\u00e7\u00e3o Vers\u00e3o Hugo e Wagner 08/04/2021 Cria\u00e7\u00e3o do documento e adi\u00e7\u00e3o de conceitos 0.1 Hugo e Wagner 08/04/2021 Adi\u00e7\u00e3o da implementa\u00e7\u00e3o 0.2","title":"Versionamento"},{"location":"Padroes_de_projeto/Padroes_emergentes/objeto_mock/","text":"Objeto Mock O Objeto Mock \u00e9 um padr\u00e3o utilizado para construir objetos prot\u00f3tipos que simulam o comportamento de objetos reais. Sua utiliza\u00e7\u00e3o mais popular \u00e9 na implementa\u00e7\u00e3o de teste unit\u00e1rio , onde o mock \u00e9 usado na execu\u00e7\u00e3o de uma parte do sistema afim de contribuir para que sejam gerados os resultados dos testes, podendo eles serem: a velocidade de resposta do banco de dados; o desempenho do c\u00f3digo no tratamento dos dados; a qualidade da entrega do resultado dos dados computados; Algumas linguagens possuem bibliotecas espec\u00edficas para auxiliar na cria\u00e7\u00e3o de mocks , principalmente as direcionadas ao desenvolvimento WEB, o que facilita a visualiza\u00e7\u00e3o dos dados no front-end . Dentre alguns exemplos temos: Java: Easy Mock, Mockito, Jmock; Ruby: Mocha, RSpec e Flexmock; PHP: SimpleTest, SnapTest e PHPUnit Implementa\u00e7\u00e3o No exemplo a seguir, supomos que um banco de dados de produ\u00e7\u00e3o ser\u00e1 testado, o mesmo j\u00e1 possui uma quantidade relevante de registros e como consequ\u00eancia a busca se torna um processo lento. No caso atual, a classe MockOrderRepositoryService faz o papel de simular os dados do banco. public class Order { public int Id { get ; set ; } public string Client { get ; set ; } public double Value { get ; set ; } } public interface IOrderRepositoryService { void Add ( Order order ); Order Find ( int id ); } /// <summary> /// classe que simula o SGBD /// </summary> public class MockOrderRepositoryService : IOrderRepositoryService { private List < Order > orders ; public MockOrderRepositoryService () { this . orders = new List < Order >(); // para os testes \u00e9 necess\u00e1rio que // exista algum dado no banco this . orders . Add ( new Order () { Id = 1 , Value = 140.50 , Client = \"Lucas\" }); this . orders . Add ( new Order () { Id = 2 , Value = 95.40 , Client = \"Caroline\" }); this . orders . Add ( new Order () { Id = 3 , Value = 39.99 , Client = \"Bruna\" }); } public void Add ( Order order ) { this . orders . Add ( order ); } public Order Find ( int id ) { if ( id == 1 ) { // simulando uma falha do SGBD ao pesquisar pelo pedido com ID = 1 return null ; } return this . orders . Where ( x => x . Id == id ) . FirstOrDefault (); } } public class OrderRepository { public IOrderRepositoryService Service { get ; set ; } public OrderRepository ( IOrderRepositoryService service ) { this . Service = service ; } public void AddOrder ( Order order ) { this . Service . Add ( order ); } public Order FindOrder ( int id ) { return this . Service . Find ( id ); } } // Exemplo do artigo [1] Limita\u00e7\u00f5es e Compara\u00e7\u00f5es Um dos cuidados a se ter ao usar obejtos mock \u00e9 justamente na hora de implementar e interpretaros testes unit\u00e1rios, j\u00e1 que o mock geralmente \u00e9 montado na forma ideal dos dados e em quantidades que facilitem a leitura e o processamento de dados. Uma consequ\u00eancia direta \u00e9 a medi\u00e7\u00e3o do teste obter um resultado de desempenho falso, j\u00e1 que a quantidade de dados utilizados na vers\u00e3o mockada \u00e9 muito menor que a quantidade encontrada no banco real. A n\u00edvel de compara\u00e7\u00e3o das ferramentas, temos algumas mais completas como a Mockito do Java, por exemplo, que em compara\u00e7\u00e3o com a EasyMock e a jMock , possui mais funcionalidades como: inje\u00e7\u00e3o de mock; mocks declarativos para a classe de teste; um \u00fanico arquivo jar no class path ser suficiente para usar a API. Refer\u00eancias [1] Site: Wikipedia - Objeto Mock. Dispon\u00edvel em https://pt.wikipedia.org/wiki/Objeto_mock . Acesso 07/04/2021 [2] Freeman, Steve. Growing Object-Oriented Software, Guided By Tests. [3] Site: Devmedia - Mocks: Introdu\u00e7\u00e3o a Automatiza\u00e7\u00e3o de Testes com Mock Object. Dispon\u00edvel em https://www.devmedia.com.br/mocks-introducao-a-automatizacao-de-testes-com-mock-object/30641 . Acesso 08/04/2021. Versionamento Autor Data Descri\u00e7\u00e3o Vers\u00e3o Hugo Arag\u00e3o 08/04/2021 Cria\u00e7\u00e3o do documento e adi\u00e7\u00e3o de conceitos 0.1 Hugo Arag\u00e3o 08/04/2021 Adi\u00e7\u00e3o de limita\u00e7\u00f5es, compara\u00e7\u00f5es e refer\u00eancias 0.2","title":"Object-mock"},{"location":"Padroes_de_projeto/Padroes_emergentes/objeto_mock/#objeto-mock","text":"O Objeto Mock \u00e9 um padr\u00e3o utilizado para construir objetos prot\u00f3tipos que simulam o comportamento de objetos reais. Sua utiliza\u00e7\u00e3o mais popular \u00e9 na implementa\u00e7\u00e3o de teste unit\u00e1rio , onde o mock \u00e9 usado na execu\u00e7\u00e3o de uma parte do sistema afim de contribuir para que sejam gerados os resultados dos testes, podendo eles serem: a velocidade de resposta do banco de dados; o desempenho do c\u00f3digo no tratamento dos dados; a qualidade da entrega do resultado dos dados computados; Algumas linguagens possuem bibliotecas espec\u00edficas para auxiliar na cria\u00e7\u00e3o de mocks , principalmente as direcionadas ao desenvolvimento WEB, o que facilita a visualiza\u00e7\u00e3o dos dados no front-end . Dentre alguns exemplos temos: Java: Easy Mock, Mockito, Jmock; Ruby: Mocha, RSpec e Flexmock; PHP: SimpleTest, SnapTest e PHPUnit","title":"Objeto Mock"},{"location":"Padroes_de_projeto/Padroes_emergentes/objeto_mock/#implementacao","text":"No exemplo a seguir, supomos que um banco de dados de produ\u00e7\u00e3o ser\u00e1 testado, o mesmo j\u00e1 possui uma quantidade relevante de registros e como consequ\u00eancia a busca se torna um processo lento. No caso atual, a classe MockOrderRepositoryService faz o papel de simular os dados do banco. public class Order { public int Id { get ; set ; } public string Client { get ; set ; } public double Value { get ; set ; } } public interface IOrderRepositoryService { void Add ( Order order ); Order Find ( int id ); } /// <summary> /// classe que simula o SGBD /// </summary> public class MockOrderRepositoryService : IOrderRepositoryService { private List < Order > orders ; public MockOrderRepositoryService () { this . orders = new List < Order >(); // para os testes \u00e9 necess\u00e1rio que // exista algum dado no banco this . orders . Add ( new Order () { Id = 1 , Value = 140.50 , Client = \"Lucas\" }); this . orders . Add ( new Order () { Id = 2 , Value = 95.40 , Client = \"Caroline\" }); this . orders . Add ( new Order () { Id = 3 , Value = 39.99 , Client = \"Bruna\" }); } public void Add ( Order order ) { this . orders . Add ( order ); } public Order Find ( int id ) { if ( id == 1 ) { // simulando uma falha do SGBD ao pesquisar pelo pedido com ID = 1 return null ; } return this . orders . Where ( x => x . Id == id ) . FirstOrDefault (); } } public class OrderRepository { public IOrderRepositoryService Service { get ; set ; } public OrderRepository ( IOrderRepositoryService service ) { this . Service = service ; } public void AddOrder ( Order order ) { this . Service . Add ( order ); } public Order FindOrder ( int id ) { return this . Service . Find ( id ); } } // Exemplo do artigo [1]","title":"Implementa\u00e7\u00e3o"},{"location":"Padroes_de_projeto/Padroes_emergentes/objeto_mock/#limitacoes-e-comparacoes","text":"Um dos cuidados a se ter ao usar obejtos mock \u00e9 justamente na hora de implementar e interpretaros testes unit\u00e1rios, j\u00e1 que o mock geralmente \u00e9 montado na forma ideal dos dados e em quantidades que facilitem a leitura e o processamento de dados. Uma consequ\u00eancia direta \u00e9 a medi\u00e7\u00e3o do teste obter um resultado de desempenho falso, j\u00e1 que a quantidade de dados utilizados na vers\u00e3o mockada \u00e9 muito menor que a quantidade encontrada no banco real. A n\u00edvel de compara\u00e7\u00e3o das ferramentas, temos algumas mais completas como a Mockito do Java, por exemplo, que em compara\u00e7\u00e3o com a EasyMock e a jMock , possui mais funcionalidades como: inje\u00e7\u00e3o de mock; mocks declarativos para a classe de teste; um \u00fanico arquivo jar no class path ser suficiente para usar a API.","title":"Limita\u00e7\u00f5es e Compara\u00e7\u00f5es"},{"location":"Padroes_de_projeto/Padroes_emergentes/objeto_mock/#referencias","text":"[1] Site: Wikipedia - Objeto Mock. Dispon\u00edvel em https://pt.wikipedia.org/wiki/Objeto_mock . Acesso 07/04/2021 [2] Freeman, Steve. Growing Object-Oriented Software, Guided By Tests. [3] Site: Devmedia - Mocks: Introdu\u00e7\u00e3o a Automatiza\u00e7\u00e3o de Testes com Mock Object. Dispon\u00edvel em https://www.devmedia.com.br/mocks-introducao-a-automatizacao-de-testes-com-mock-object/30641 . Acesso 08/04/2021.","title":"Refer\u00eancias"},{"location":"Padroes_de_projeto/Padroes_emergentes/objeto_mock/#versionamento","text":"Autor Data Descri\u00e7\u00e3o Vers\u00e3o Hugo Arag\u00e3o 08/04/2021 Cria\u00e7\u00e3o do documento e adi\u00e7\u00e3o de conceitos 0.1 Hugo Arag\u00e3o 08/04/2021 Adi\u00e7\u00e3o de limita\u00e7\u00f5es, compara\u00e7\u00f5es e refer\u00eancias 0.2","title":"Versionamento"},{"location":"Padroes_de_projeto/Padroes_emergentes/serverless/","text":"Padr\u00f5es de projetos emergentes - Serverless N\u00e3o acredito que serverless seja um \"padr\u00e3o de arquitetura emergente\" no sentido que esta issue pede, mas \u00e9, com certeza, um padr\u00e3o emergente que poder\u00edamos usar para aprender e para diminuir qualquer poss\u00edvel custo de hospedagem. Poder\u00edamos usar um framework como o serverless para implementar diversas fun\u00e7\u00f5es lambdas sem fazer nenhuma manuten\u00e7\u00e3o de instancias. Aqui temos um v\u00eddeo comentando sobre alguns padr\u00f5es de arquitetura voltados ao serverless . O serverless funciona da seguinte forma: ao inv\u00e9s de levantar um servidor monolito, contendo toda as regras de neg\u00f3cios, sistemas, subssistemas e outros, \u00e9 poss\u00edvel usar um servi\u00e7o como os lambdas da amazon que funcionam dentro de um servidor coletivo. Quando algum usu\u00e1rio faz alguma request ao endpoint da fun\u00e7\u00e3o, o que \u00e9 rodado \u00e9 uma fun\u00e7\u00e3o em determinada linguagem para atender aquela request. Essa fun\u00e7\u00e3o poder\u00e1 chamar outros m\u00f3dulos e m\u00e9todos afim de gerar o resultado final para o usu\u00e1rio. A persist\u00eancia de dados vem de bases de dados como DynamoDB, GraphQL, PostgresQL, MongoDB entre outros, todos servi\u00e7os remotos, configur\u00e1veis e escal\u00e1veis. Sobre a vantagens, podemos citar: em quest\u00e3o de funcionalidade, lambdas s\u00e3o capazes de implementar exatamente o mesmo que alguma API monolito conseguiria em contextos tradicionais. Os custos de opera\u00e7\u00e3o s\u00e3o dr\u00e1sticamente reduzidos, bem como custos relacionados ao pre\u00e7o de processamento de dados (o que permite fazer mais features pesados mais r\u00e1pido). Al\u00e9m disso, por segregar em seu pr\u00f3prio ambiente todos os servi\u00e7os, voc\u00ea pode ter um endpoint GET rodando flask, o POST do mesmo recurso rodando node e o PUT rodando ruby sem que nenhuma atrapalhe o outro. A vantagem disso \u00e9 que separa os trabalho e os problemas, o que permite que cada time trabalhe separado como \u00e9 no caso dos microsservi\u00e7os. Sobre as desvantagens: o custo disso \u00e9 criar c\u00f3digo from scratch serverless representa um aumento de tempo de desenvolvimento; \u00e9 uma tecnologia nova que, sen\u00e3o utilizada com profissionalismo, pode gerar diversos problemas de custos ainda mais altos ou problemas com seguran\u00e7a devido ao mal uso; Gera uma depend\u00eancia em atores externos para levantar o servi\u00e7o, como a Amazon, Google ou Microsoft; requer um conhecimento elevado para ser usado de forma apropriada; n\u00e3o existem frameworks bons quanto os de servidores monolito para se trabalhar com serverless ainda. No geral, serverless est\u00e1 aqui para ficar bem como todos os servi\u00e7os de cloud. Esta nova forma de se fazer deploys est\u00e1 ficando cada vez mais popular e o futuro da \u00e1rea, possivelmente, ser\u00e1 como a eletricidade: voc\u00ea pluga a energia na tomada e, exceto em casos de falha geral no sistema, voc\u00ea tem sua eletricidade. A interface \u00e9 simples, r\u00e1pida e barata, e voc\u00ea paga pelo quanto voc\u00ea usou no final do m\u00eas. Embora o t\u00f3pico seja fora do escopo da mat\u00e9ria (ou do escopo de qualquer mat\u00e9ria que n\u00e3o seja focada nisso) \u00e9 uma arquitetura interessante e que est\u00e1 vindo a ser usada cada vez mais com o fim de cortar custos e facilitar implementa\u00e7\u00e3o de microsservi\u00e7os. Hist\u00f3rico de Vers\u00e3o Data Nome Detalhe Vers\u00e3o 24/03/2021 Renato Britto Araujo Cria arquivo serverless.md 1.0","title":"Serverless"},{"location":"Padroes_de_projeto/Padroes_emergentes/serverless/#padroes-de-projetos-emergentes-serverless","text":"N\u00e3o acredito que serverless seja um \"padr\u00e3o de arquitetura emergente\" no sentido que esta issue pede, mas \u00e9, com certeza, um padr\u00e3o emergente que poder\u00edamos usar para aprender e para diminuir qualquer poss\u00edvel custo de hospedagem. Poder\u00edamos usar um framework como o serverless para implementar diversas fun\u00e7\u00f5es lambdas sem fazer nenhuma manuten\u00e7\u00e3o de instancias. Aqui temos um v\u00eddeo comentando sobre alguns padr\u00f5es de arquitetura voltados ao serverless . O serverless funciona da seguinte forma: ao inv\u00e9s de levantar um servidor monolito, contendo toda as regras de neg\u00f3cios, sistemas, subssistemas e outros, \u00e9 poss\u00edvel usar um servi\u00e7o como os lambdas da amazon que funcionam dentro de um servidor coletivo. Quando algum usu\u00e1rio faz alguma request ao endpoint da fun\u00e7\u00e3o, o que \u00e9 rodado \u00e9 uma fun\u00e7\u00e3o em determinada linguagem para atender aquela request. Essa fun\u00e7\u00e3o poder\u00e1 chamar outros m\u00f3dulos e m\u00e9todos afim de gerar o resultado final para o usu\u00e1rio. A persist\u00eancia de dados vem de bases de dados como DynamoDB, GraphQL, PostgresQL, MongoDB entre outros, todos servi\u00e7os remotos, configur\u00e1veis e escal\u00e1veis. Sobre a vantagens, podemos citar: em quest\u00e3o de funcionalidade, lambdas s\u00e3o capazes de implementar exatamente o mesmo que alguma API monolito conseguiria em contextos tradicionais. Os custos de opera\u00e7\u00e3o s\u00e3o dr\u00e1sticamente reduzidos, bem como custos relacionados ao pre\u00e7o de processamento de dados (o que permite fazer mais features pesados mais r\u00e1pido). Al\u00e9m disso, por segregar em seu pr\u00f3prio ambiente todos os servi\u00e7os, voc\u00ea pode ter um endpoint GET rodando flask, o POST do mesmo recurso rodando node e o PUT rodando ruby sem que nenhuma atrapalhe o outro. A vantagem disso \u00e9 que separa os trabalho e os problemas, o que permite que cada time trabalhe separado como \u00e9 no caso dos microsservi\u00e7os. Sobre as desvantagens: o custo disso \u00e9 criar c\u00f3digo from scratch serverless representa um aumento de tempo de desenvolvimento; \u00e9 uma tecnologia nova que, sen\u00e3o utilizada com profissionalismo, pode gerar diversos problemas de custos ainda mais altos ou problemas com seguran\u00e7a devido ao mal uso; Gera uma depend\u00eancia em atores externos para levantar o servi\u00e7o, como a Amazon, Google ou Microsoft; requer um conhecimento elevado para ser usado de forma apropriada; n\u00e3o existem frameworks bons quanto os de servidores monolito para se trabalhar com serverless ainda. No geral, serverless est\u00e1 aqui para ficar bem como todos os servi\u00e7os de cloud. Esta nova forma de se fazer deploys est\u00e1 ficando cada vez mais popular e o futuro da \u00e1rea, possivelmente, ser\u00e1 como a eletricidade: voc\u00ea pluga a energia na tomada e, exceto em casos de falha geral no sistema, voc\u00ea tem sua eletricidade. A interface \u00e9 simples, r\u00e1pida e barata, e voc\u00ea paga pelo quanto voc\u00ea usou no final do m\u00eas. Embora o t\u00f3pico seja fora do escopo da mat\u00e9ria (ou do escopo de qualquer mat\u00e9ria que n\u00e3o seja focada nisso) \u00e9 uma arquitetura interessante e que est\u00e1 vindo a ser usada cada vez mais com o fim de cortar custos e facilitar implementa\u00e7\u00e3o de microsservi\u00e7os.","title":"Padr\u00f5es de projetos emergentes - Serverless"},{"location":"Padroes_de_projeto/Padroes_emergentes/serverless/#historico-de-versao","text":"Data Nome Detalhe Vers\u00e3o 24/03/2021 Renato Britto Araujo Cria arquivo serverless.md 1.0","title":"Hist\u00f3rico de Vers\u00e3o"},{"location":"Padroes_de_projeto/grasps/grasps/","text":"p { text-align: justify; } GRASPs Os padr\u00f5es GRASP fornecem uma abordagem sistem\u00e1tica para a atribui\u00e7\u00e3o de responsabilidades \u00e0s classes do projeto e englobam uma s\u00e9rie de princ\u00edpios baseados na Orienta\u00e7\u00e3o a Objetos. Seu termo vem do ingl\u00eas e significa General Responsibility Assignment Software Patterns . Dentre os tipos de GRASPs, temos : - Criador; - Especialista; - Alta Coes\u00e3o; - Baixo Acoplamento; - Controladora; - Polimorfismo; - Inven\u00e7\u00e3o pura; - Varia\u00e7\u00f5es protegidas. Criador Este princ\u00edpio determina qual classe deve ser respons\u00e1vel pela cria\u00e7\u00e3o certos objetos ou inst\u00e2ncias. Para definir criadores, \u00e9 importantes responder \u00e0 problem\u00e1tica de quem deve ser respons\u00e1vel por criar uma nova inst\u00e2ncia de uma determinada classe. Para responder isso, existem algumas indaga\u00e7\u00f5es a serem levandas em considera\u00e7\u00e3o, assim, deve-se atribir a uma classe B a responsabilidade de criar uma inst\u00e2ncia de A se pelo menos uma dessas condi\u00e7\u00f5es \u00e9 verdadeira : - B cont\u00e9m ou agrega A; - B registra a exist\u00eancia de A; - B usa A; - B tem os dados necess\u00e1rios para a inicializa\u00e7\u00e3o de A que ser\u00e3o passados ao construtor de A. Caso nenhuma dessas condi\u00e7\u00f5es seja atendida, a pr\u00f3pria classe \u00e9 respons\u00e1vel por \"se criar\" ou por criar uma nova inst\u00e2ncia dela mesma. Aplica\u00e7\u00e3o no projeto A vers\u00e3o 1 do diagrama de classes, mais especificamente a classe Estabilishment apresenta um baixo n\u00edvel de coes\u00e3o, com muitas responsabilidades de forma n\u00e3o especializada. Segue abaixo uma vers\u00e3o reduzida da mesma classe: OpeningTime Os atributos minTime e maxTime representam respectivamente o hor\u00e1rio de abertura e fechamento do estabelecimento. Estes atributos podem ser separados em outra classe, assim como seus respectivos m\u00e9todos ( getMinTime() , ou getMaxTime() por exemplo). Um exemplo conceitual dessa separa\u00e7\u00e3o pode ser visto abaixo: A palavra cont\u00e9m indica um forte relacionamento entre as classes. Uma vez que o hor\u00e1rio de funcionamento de um estabelecimento s\u00f3 faz sentido existir se o seu respectivo estabelecimento existe. Essa rela\u00e7\u00e3o \u00e9 uma composi\u00e7\u00e3o, criando as seguintes classes: Em suma, a classe Estabilishment \u00e9 a respons\u00e1vel por criar uma inst\u00e2ncia da classe OpeningTime. Essa separa\u00e7\u00e3o tamb\u00e9m aumenta a coes\u00e3o da classe. ContactData [escopo aumentado] No caso da classe ContactData os atributos que definem os dados de contato da classe Estabilishment foram separados de modo a dividir suas respectivas responsabilidades. As classes Phone e SocialNetwork s\u00e3o respons\u00e1veis por armazenar as informa\u00e7\u00f5es de telefone e redes sociais, respectivamente, com o objetivo de intermediar a coleta de dados, e atrinu\u00edndo \u00e0 classe ContactData a responsabilidade de armazenar e tratar os contatos dos estabelecimentos. Ao distribuir essa responsabilidade, a Estabilishment fica respons\u00e1vel apenas por armazenar os dados de contato compilados. Especialista Este princ\u00edpio determina quando devemos delegar a responsabilidade para um outro objeto que seja especialista naquele dom\u00ednio. A problem\u00e1tica envolvida est\u00e1 relacionada \u00e0 necessidade de um princ\u00edpio para a atribui\u00e7\u00e3o de responsabilidade a objetos, onde escolhas s\u00e3o necess\u00e1rias durante um projeto para a atribui\u00e7\u00e3o de responsabilidades a classes. Como solu\u00e7\u00e3o, atribui-se uma responsabilidade a uma classe que possui a informa\u00e7\u00e3o necess\u00e1ria para cumpri-la, devendo-se deixar bem claro qual \u00e9 essa responsabilidade. Aplica\u00e7\u00e3o no Projeto Ainda utilizando o exemplo das classes Estabilishment e OpeningTime (agora com alguns seus m\u00e9todos): A responsabilidade de guardar os dados dos hor\u00e1rios de abertura e fechamento, assim como de retornar eles est\u00e1 na classe OpeningTime. Essas responsabilidades s\u00e3o a especialidade da classe, o que aumenta a coes\u00e3o do sistema. V2 [escopo aumentado] No escopo aumentado, a responsabilidade da OpeningTime foi dividida com a nova OpeningDay de forma que os dias da semana podessem ser tratados de forma independente (considerando que o estabelecimento feche mais cedo em algum dia da semana, ou n\u00e3o abra em outro). Dessa forma cabe \u00e0 OpeningTime apenas compilar e tratar esses dados, onde ser\u00e3o armazenados na Estabilishment . Controlador Este princ\u00edpio atribui a responsabilidade por lidar com eventos do sistema a uma classe que n\u00e3o esteja relacionada a interface com o usu\u00e1rio. Ele surge da problem\u00e1tica de quem deve ser o respons\u00e1vel por lidar com um evento que ocorre na interface de usu\u00e1ro (UI). Para resolver isso, deve-se atribuir a responsabilidade de receber ou lidar com um evento do sistema a uma classe que representa todo o sistema, a um sub-sistema e a um cen\u00e1rio de caso de uso. \u00c9 interessante tamb\u00e9m seguir alguns princ\u00edpios para a elabora\u00e7\u00e3o desse modelo, como n\u00e3o conectar objetos da UI com objetos n\u00e3o pertecentes da UI e n\u00e3o aplicar m\u00e9todos l\u00f3gicos, como algum tipo de c\u00e1lculo, aos m\u00e9todos de um objeto da UI, a fim de modularizar o desenvolvimento das camadas de apresenta\u00e7\u00e3o e neg\u00f3cio e minimmizar, na camada de neg\u00f3cio, as altera\u00e7\u00f5es nos requisitos da UI. Aplica\u00e7\u00e3o no Projeto Para este exemplo, consideraremos a primeira hist\u00f3ria de usu\u00e1rio, que diz respeito a visualiza\u00e7\u00e3o do feed de estabelecimentos. Considerando uma controladora apenas para este caso de uso, a FeedController \u00e9 respons\u00e1vel por passar a requisi\u00e7\u00e3o do feed para outros m\u00f3dulos ou classes mais especializadas. O exemplo abaixo mostra um diagrama conceitual de quais componentes participariam do processamento da requisi\u00e7\u00e3o: Para melhor entendimento da ordem de execu\u00e7\u00e3o, segue um diagrama de sequ\u00eancia para este caso: Este \u00e9 um caso b\u00e1sico onde a classe FeedController apenas processa uma requisi\u00e7\u00e3o. Entretanto, caso sejam adicionadas mais requisi\u00e7\u00f5es relacionadas ao feed, esta controladora manteria a responsabilidade de direcionar o processamento \u00e0 classe correta. Polimorfismo No Polimorfismo as opera\u00e7\u00f5es polim\u00f3ficas devem ser utilizadas sobrepondo o conceito de decis\u00e3o. Nessa abordagem uma classe principal pode ser utilizada como base, definindo as caracter\u00edsticas b\u00e1sicas do que seus derivados devem ser, ou seja, uma classe Animal pode definir um m\u00e9todo emitirSom() e permitir que as classes derivadas: Gato , Cachorro e Galinha executem o mesmo comportamento e ao mesmo tempo possuam caracter\u00edsticas pr\u00f3prias. Exemplo: Aplica\u00e7\u00e3o no Projeto No caso da nossa aplica\u00e7\u00e3o, a tarefa de Registrar Entidades foi padronizada, de forma que a Register fosse respons\u00e1vel por definir um CRUD principal, onde as classes derivadas pudessem executar o registro de acordo com o tipo de necessidade espec\u00edfica, no caso UserRegister , EstabilishmentRegister e ServiceRegister . Essa aplica\u00e7\u00e3o faz com que as classes User , Estabilishment e Service n\u00e3o precisem se preocupar com criar um novo registro, apenas armazenar os mesmos. Alta Coes\u00e3o Alta coes\u00e3o \u00e9 um padr\u00e3o avaliativo que tenta manter os objetos adequadamente focados, gerenci\u00e1veis e compreens\u00edveis. Um elemento com alta coes\u00e3o tem suas responsabilidades fortemente relacionadas e altamente focadas. Alternativamente, um elemento com baixa coes\u00e3o tem muitas responsabilidades distintas, n\u00e3o relacionadas, logo pouco focados. Quanto maior a coes\u00e3o, maior a facilidade de entender, modificar, reutilizar e manter. Baixo Acoplamento Acoplamento \u00e9 uma medida de qu\u00e3o forte um elemento est\u00e1 conectado, tem conhecimento ou depende de outros elementos. O baixo acoplamento \u00e9 um padr\u00e3o de avalia\u00e7\u00e3o que determina como atribuir responsabilidades de suporte, como diminuir depend\u00eancia entre as classes, diminuir o impacto em outras classes ao fazer modifica\u00e7\u00f5es e aumentar o potencial de reutiliza\u00e7\u00e3o. Indire\u00e7\u00e3o O padr\u00e3o de indire\u00e7\u00e3o suporta baixo acoplamento entre dois elementos, atribuindo a um objeto intermedi\u00e1rio a responsabilidade de ser um mediador entre eles. Um componente controller no padr\u00e3o Model-View-Controller ou MVC, serve de exemplo neste caso, uma vez que a responsabilidade dele \u00e9 separar a camada de intera\u00e7\u00e3o com o usu\u00e1rio da camada que cuida da l\u00f3gica de neg\u00f3cios e dos dados. Versionamento Autor(es) Data Vers\u00e3o Descri\u00e7\u00e3o Wagner Martins 24/03/21 0.1 Cria\u00e7\u00e3o do documento Wagner Martins 24/03/21 0.2 Adi\u00e7\u00e3o de exemplos de aplica\u00e7\u00f5es no projeto para os GRASPs criador, especialista e controlador N\u00edcalo Ribeiro 26/03/21 0.3 Adi\u00e7\u00e3o da defini\u00e7\u00e3o de alguns conceitos N\u00edcalo Ribeiro 26/03/21 0.4 Adi\u00e7\u00e3o da defini\u00e7\u00e3o de controlador e complementa\u00e7\u00e3o de especialista Hugo Arag\u00e3o 07/04/21 0.5 Adi\u00e7\u00e3o da classe ContactData Hugo Arag\u00e3o 07/04/21 0.6 Adi\u00e7\u00e3o da classe OpeningTime do escopo aumentado Hugo, Wagner, N\u00edcalo 07/04/21 0.7 Adi\u00e7\u00e3o do conceito Polimorfismo Hugo, Wagner, N\u00edcalo 08/04/21 0.8 Adi\u00e7\u00e3o dos conceitos de Alta Coes\u00e3o, Baixo Acoplamento e Indire\u00e7\u00e3o Refer\u00eancias [1] Slides das aulas, dispon\u00edvel no moodle da disciplina. [2] Site: GRASP (padr\u00e3o orientado a objetos). Dispon\u00edvel em https://pt.wikipedia.org/wiki/GRASP_(padr%C3%A3o_orientado_a_objetos) . Acesso: 05/04/21 [3] Site: RDD \u2013 Responsibility Driven Design e GRASP \u2013 General Responsibility Assignment Software Principles. Dispon\u00edvel em http://nelsonbassetto.com/blog/tags/grasp/","title":"Grasps"},{"location":"Padroes_de_projeto/grasps/grasps/#grasps","text":"Os padr\u00f5es GRASP fornecem uma abordagem sistem\u00e1tica para a atribui\u00e7\u00e3o de responsabilidades \u00e0s classes do projeto e englobam uma s\u00e9rie de princ\u00edpios baseados na Orienta\u00e7\u00e3o a Objetos. Seu termo vem do ingl\u00eas e significa General Responsibility Assignment Software Patterns . Dentre os tipos de GRASPs, temos : - Criador; - Especialista; - Alta Coes\u00e3o; - Baixo Acoplamento; - Controladora; - Polimorfismo; - Inven\u00e7\u00e3o pura; - Varia\u00e7\u00f5es protegidas.","title":"GRASPs"},{"location":"Padroes_de_projeto/grasps/grasps/#criador","text":"Este princ\u00edpio determina qual classe deve ser respons\u00e1vel pela cria\u00e7\u00e3o certos objetos ou inst\u00e2ncias. Para definir criadores, \u00e9 importantes responder \u00e0 problem\u00e1tica de quem deve ser respons\u00e1vel por criar uma nova inst\u00e2ncia de uma determinada classe. Para responder isso, existem algumas indaga\u00e7\u00f5es a serem levandas em considera\u00e7\u00e3o, assim, deve-se atribir a uma classe B a responsabilidade de criar uma inst\u00e2ncia de A se pelo menos uma dessas condi\u00e7\u00f5es \u00e9 verdadeira : - B cont\u00e9m ou agrega A; - B registra a exist\u00eancia de A; - B usa A; - B tem os dados necess\u00e1rios para a inicializa\u00e7\u00e3o de A que ser\u00e3o passados ao construtor de A. Caso nenhuma dessas condi\u00e7\u00f5es seja atendida, a pr\u00f3pria classe \u00e9 respons\u00e1vel por \"se criar\" ou por criar uma nova inst\u00e2ncia dela mesma.","title":"Criador"},{"location":"Padroes_de_projeto/grasps/grasps/#aplicacao-no-projeto","text":"A vers\u00e3o 1 do diagrama de classes, mais especificamente a classe Estabilishment apresenta um baixo n\u00edvel de coes\u00e3o, com muitas responsabilidades de forma n\u00e3o especializada. Segue abaixo uma vers\u00e3o reduzida da mesma classe:","title":"Aplica\u00e7\u00e3o no projeto"},{"location":"Padroes_de_projeto/grasps/grasps/#openingtime","text":"Os atributos minTime e maxTime representam respectivamente o hor\u00e1rio de abertura e fechamento do estabelecimento. Estes atributos podem ser separados em outra classe, assim como seus respectivos m\u00e9todos ( getMinTime() , ou getMaxTime() por exemplo). Um exemplo conceitual dessa separa\u00e7\u00e3o pode ser visto abaixo: A palavra cont\u00e9m indica um forte relacionamento entre as classes. Uma vez que o hor\u00e1rio de funcionamento de um estabelecimento s\u00f3 faz sentido existir se o seu respectivo estabelecimento existe. Essa rela\u00e7\u00e3o \u00e9 uma composi\u00e7\u00e3o, criando as seguintes classes: Em suma, a classe Estabilishment \u00e9 a respons\u00e1vel por criar uma inst\u00e2ncia da classe OpeningTime. Essa separa\u00e7\u00e3o tamb\u00e9m aumenta a coes\u00e3o da classe.","title":"OpeningTime"},{"location":"Padroes_de_projeto/grasps/grasps/#contactdata-escopo-aumentado","text":"No caso da classe ContactData os atributos que definem os dados de contato da classe Estabilishment foram separados de modo a dividir suas respectivas responsabilidades. As classes Phone e SocialNetwork s\u00e3o respons\u00e1veis por armazenar as informa\u00e7\u00f5es de telefone e redes sociais, respectivamente, com o objetivo de intermediar a coleta de dados, e atrinu\u00edndo \u00e0 classe ContactData a responsabilidade de armazenar e tratar os contatos dos estabelecimentos. Ao distribuir essa responsabilidade, a Estabilishment fica respons\u00e1vel apenas por armazenar os dados de contato compilados.","title":"ContactData [escopo aumentado]"},{"location":"Padroes_de_projeto/grasps/grasps/#especialista","text":"Este princ\u00edpio determina quando devemos delegar a responsabilidade para um outro objeto que seja especialista naquele dom\u00ednio. A problem\u00e1tica envolvida est\u00e1 relacionada \u00e0 necessidade de um princ\u00edpio para a atribui\u00e7\u00e3o de responsabilidade a objetos, onde escolhas s\u00e3o necess\u00e1rias durante um projeto para a atribui\u00e7\u00e3o de responsabilidades a classes. Como solu\u00e7\u00e3o, atribui-se uma responsabilidade a uma classe que possui a informa\u00e7\u00e3o necess\u00e1ria para cumpri-la, devendo-se deixar bem claro qual \u00e9 essa responsabilidade.","title":"Especialista"},{"location":"Padroes_de_projeto/grasps/grasps/#aplicacao-no-projeto_1","text":"Ainda utilizando o exemplo das classes Estabilishment e OpeningTime (agora com alguns seus m\u00e9todos): A responsabilidade de guardar os dados dos hor\u00e1rios de abertura e fechamento, assim como de retornar eles est\u00e1 na classe OpeningTime. Essas responsabilidades s\u00e3o a especialidade da classe, o que aumenta a coes\u00e3o do sistema. V2 [escopo aumentado] No escopo aumentado, a responsabilidade da OpeningTime foi dividida com a nova OpeningDay de forma que os dias da semana podessem ser tratados de forma independente (considerando que o estabelecimento feche mais cedo em algum dia da semana, ou n\u00e3o abra em outro). Dessa forma cabe \u00e0 OpeningTime apenas compilar e tratar esses dados, onde ser\u00e3o armazenados na Estabilishment .","title":"Aplica\u00e7\u00e3o no Projeto"},{"location":"Padroes_de_projeto/grasps/grasps/#controlador","text":"Este princ\u00edpio atribui a responsabilidade por lidar com eventos do sistema a uma classe que n\u00e3o esteja relacionada a interface com o usu\u00e1rio. Ele surge da problem\u00e1tica de quem deve ser o respons\u00e1vel por lidar com um evento que ocorre na interface de usu\u00e1ro (UI). Para resolver isso, deve-se atribuir a responsabilidade de receber ou lidar com um evento do sistema a uma classe que representa todo o sistema, a um sub-sistema e a um cen\u00e1rio de caso de uso. \u00c9 interessante tamb\u00e9m seguir alguns princ\u00edpios para a elabora\u00e7\u00e3o desse modelo, como n\u00e3o conectar objetos da UI com objetos n\u00e3o pertecentes da UI e n\u00e3o aplicar m\u00e9todos l\u00f3gicos, como algum tipo de c\u00e1lculo, aos m\u00e9todos de um objeto da UI, a fim de modularizar o desenvolvimento das camadas de apresenta\u00e7\u00e3o e neg\u00f3cio e minimmizar, na camada de neg\u00f3cio, as altera\u00e7\u00f5es nos requisitos da UI.","title":"Controlador"},{"location":"Padroes_de_projeto/grasps/grasps/#aplicacao-no-projeto_2","text":"Para este exemplo, consideraremos a primeira hist\u00f3ria de usu\u00e1rio, que diz respeito a visualiza\u00e7\u00e3o do feed de estabelecimentos. Considerando uma controladora apenas para este caso de uso, a FeedController \u00e9 respons\u00e1vel por passar a requisi\u00e7\u00e3o do feed para outros m\u00f3dulos ou classes mais especializadas. O exemplo abaixo mostra um diagrama conceitual de quais componentes participariam do processamento da requisi\u00e7\u00e3o: Para melhor entendimento da ordem de execu\u00e7\u00e3o, segue um diagrama de sequ\u00eancia para este caso: Este \u00e9 um caso b\u00e1sico onde a classe FeedController apenas processa uma requisi\u00e7\u00e3o. Entretanto, caso sejam adicionadas mais requisi\u00e7\u00f5es relacionadas ao feed, esta controladora manteria a responsabilidade de direcionar o processamento \u00e0 classe correta.","title":"Aplica\u00e7\u00e3o no Projeto"},{"location":"Padroes_de_projeto/grasps/grasps/#polimorfismo","text":"No Polimorfismo as opera\u00e7\u00f5es polim\u00f3ficas devem ser utilizadas sobrepondo o conceito de decis\u00e3o. Nessa abordagem uma classe principal pode ser utilizada como base, definindo as caracter\u00edsticas b\u00e1sicas do que seus derivados devem ser, ou seja, uma classe Animal pode definir um m\u00e9todo emitirSom() e permitir que as classes derivadas: Gato , Cachorro e Galinha executem o mesmo comportamento e ao mesmo tempo possuam caracter\u00edsticas pr\u00f3prias. Exemplo:","title":"Polimorfismo"},{"location":"Padroes_de_projeto/grasps/grasps/#aplicacao-no-projeto_3","text":"No caso da nossa aplica\u00e7\u00e3o, a tarefa de Registrar Entidades foi padronizada, de forma que a Register fosse respons\u00e1vel por definir um CRUD principal, onde as classes derivadas pudessem executar o registro de acordo com o tipo de necessidade espec\u00edfica, no caso UserRegister , EstabilishmentRegister e ServiceRegister . Essa aplica\u00e7\u00e3o faz com que as classes User , Estabilishment e Service n\u00e3o precisem se preocupar com criar um novo registro, apenas armazenar os mesmos.","title":"Aplica\u00e7\u00e3o no Projeto"},{"location":"Padroes_de_projeto/grasps/grasps/#alta-coesao","text":"Alta coes\u00e3o \u00e9 um padr\u00e3o avaliativo que tenta manter os objetos adequadamente focados, gerenci\u00e1veis e compreens\u00edveis. Um elemento com alta coes\u00e3o tem suas responsabilidades fortemente relacionadas e altamente focadas. Alternativamente, um elemento com baixa coes\u00e3o tem muitas responsabilidades distintas, n\u00e3o relacionadas, logo pouco focados. Quanto maior a coes\u00e3o, maior a facilidade de entender, modificar, reutilizar e manter.","title":"Alta Coes\u00e3o"},{"location":"Padroes_de_projeto/grasps/grasps/#baixo-acoplamento","text":"Acoplamento \u00e9 uma medida de qu\u00e3o forte um elemento est\u00e1 conectado, tem conhecimento ou depende de outros elementos. O baixo acoplamento \u00e9 um padr\u00e3o de avalia\u00e7\u00e3o que determina como atribuir responsabilidades de suporte, como diminuir depend\u00eancia entre as classes, diminuir o impacto em outras classes ao fazer modifica\u00e7\u00f5es e aumentar o potencial de reutiliza\u00e7\u00e3o.","title":"Baixo Acoplamento"},{"location":"Padroes_de_projeto/grasps/grasps/#indirecao","text":"O padr\u00e3o de indire\u00e7\u00e3o suporta baixo acoplamento entre dois elementos, atribuindo a um objeto intermedi\u00e1rio a responsabilidade de ser um mediador entre eles. Um componente controller no padr\u00e3o Model-View-Controller ou MVC, serve de exemplo neste caso, uma vez que a responsabilidade dele \u00e9 separar a camada de intera\u00e7\u00e3o com o usu\u00e1rio da camada que cuida da l\u00f3gica de neg\u00f3cios e dos dados.","title":"Indire\u00e7\u00e3o"},{"location":"Padroes_de_projeto/grasps/grasps/#versionamento","text":"Autor(es) Data Vers\u00e3o Descri\u00e7\u00e3o Wagner Martins 24/03/21 0.1 Cria\u00e7\u00e3o do documento Wagner Martins 24/03/21 0.2 Adi\u00e7\u00e3o de exemplos de aplica\u00e7\u00f5es no projeto para os GRASPs criador, especialista e controlador N\u00edcalo Ribeiro 26/03/21 0.3 Adi\u00e7\u00e3o da defini\u00e7\u00e3o de alguns conceitos N\u00edcalo Ribeiro 26/03/21 0.4 Adi\u00e7\u00e3o da defini\u00e7\u00e3o de controlador e complementa\u00e7\u00e3o de especialista Hugo Arag\u00e3o 07/04/21 0.5 Adi\u00e7\u00e3o da classe ContactData Hugo Arag\u00e3o 07/04/21 0.6 Adi\u00e7\u00e3o da classe OpeningTime do escopo aumentado Hugo, Wagner, N\u00edcalo 07/04/21 0.7 Adi\u00e7\u00e3o do conceito Polimorfismo Hugo, Wagner, N\u00edcalo 08/04/21 0.8 Adi\u00e7\u00e3o dos conceitos de Alta Coes\u00e3o, Baixo Acoplamento e Indire\u00e7\u00e3o","title":"Versionamento"},{"location":"Padroes_de_projeto/grasps/grasps/#referencias","text":"[1] Slides das aulas, dispon\u00edvel no moodle da disciplina. [2] Site: GRASP (padr\u00e3o orientado a objetos). Dispon\u00edvel em https://pt.wikipedia.org/wiki/GRASP_(padr%C3%A3o_orientado_a_objetos) . Acesso: 05/04/21 [3] Site: RDD \u2013 Responsibility Driven Design e GRASP \u2013 General Responsibility Assignment Software Principles. Dispon\u00edvel em http://nelsonbassetto.com/blog/tags/grasp/","title":"Refer\u00eancias"},{"location":"Padroes_de_projeto/prototipos/prototipo_alta/","text":"Prot\u00f3tipos Introdu\u00e7\u00e3o Uma das t\u00e9cnicas mais usadas para garantir que o produto ser\u00e1 bem aceito ou que n\u00e3o causar\u00e1 problemas ao usu\u00e1rio \u00e9 a prototipa\u00e7\u00e3o. \u00c9 um m\u00e9todo que ajuda a desenvolver rapidamente uma vers\u00e3o \u201ctest\u00e1vel\u201d do seu projeto, seja ele um produto ou servi\u00e7o. Para essa prototipa\u00e7\u00e3o, ser\u00e1 utilizado a ferramenta Figma . Ser\u00e1 adotado um modelo evolucion\u00e1rio de prototipa\u00e7\u00e3o, que consiste em produzir um modelo inicial de prot\u00f3tipo e ir refinando-o ao longo das v\u00e1rias fases do desenvolvimento do projeto at\u00e9 atingir sua forma final. Prot\u00f3tipo de Alta Fidelidade Um prot\u00f3tipo de alta fidelidade (\u00e0s vezes chamado de high-fi ou hi-fi) \u00e9 uma representa\u00e7\u00e3o interativa do produto, baseada no computador ou em dispositivos m\u00f3veis. Esse prot\u00f3tipo j\u00e1 apresenta maior semelhan\u00e7a com o design final em termos de detalhes e funcionalidade. Prot\u00f3tipo de M\u00e9dia Fidelidade Um prot\u00f3tipo de m\u00e9dia fidelidade visa definir a estrutura de conte\u00fado da interface, definir o peso, relev\u00e2ncia e rela\u00e7\u00e3o entre os elementos e criar um layout b\u00e1sico (com conte\u00fados e imagens de marca\u00e7\u00e3o). Para chegar \u00e0 primeira vers\u00e3o do prot\u00f3tipo de alta fidelidade, os membros do grupo elaboraram alguns prot\u00f3tipos de m\u00e9dia fidelidade para conciliar ideias e construir um prot\u00f3tipo de alta fidelidade mais pr\u00f3ximo ao ideal. Prot\u00f3tipo 01 Autor: N\u00edcalo Ribeiro Autor: Hugo Autor: Gustavo Prot\u00f3tipo de Alta Fidelidade Wireframe Dessa vez a equipe decidiu produzir os prot\u00f3tipos passo-a-passo, de forma que as ideias tivessem mais espa\u00e7o para amadurecer e o front-end estivesse de acordo com os requisitos evoluidos ap\u00f3s a refatora\u00e7\u00e3o do escopo. Assim, antes de lan\u00e7armos a vers\u00e3o final, decidimos produzir um Wireframe . Wireframe pode ser definido como um esqueleto do produto final. Nele est\u00e1 contido o conjunto de estruturas do site e os principais elementos, organizados por formas geom\u00e9tricas que ajudam a visualizar um produto real. Home Na Home dispusemos os elementos de forma que simplificasse cada sess\u00e3o de servi\u00e7o para o usu\u00e1rio, dividindo em quatro os atributos: Menu Apresent\u00e7\u00e3o Mapa Feed de servi\u00e7os Homepage do site - Hugo Perfil do Estabelecimento A p\u00e1gina de Perfil conta com as principais informa\u00e7\u00f5es do Estabelecimento, descri\u00e7\u00e3o do mesmo (afim de engajar o cliente), e um menu onde o cliente pode visualizar por: Trabalhos realizados Posi\u00e7\u00e3o no Mapa Coment\u00e1rios de clientes daquele estabelecimento P\u00e1gina de perfil do Estabelecimento - Hugo Vers\u00e3o 1 Caso haja problema na visualiza\u00e7\u00e3o, Clicar aqui . Refer\u00eancias Prototipagem de alta fidelidade: o que \u00e9, quando, por que e como usar?. Medium. Dispon\u00edvel em: http://medium.com/somos-tera/prototipagem-de-alta-fidelidade-635d745b662b . Acesso em: 18 de mar\u00e7o de 2021. ALEX, Jefferson. Prot\u00f3tipos de baixa, m\u00e9dia e alta fidelidade. Dispon\u00edvel em: https://jeffersonalex.medium.com/prot%C3%B3tipos-de-baixa-m%C3%A9dia-e-alta-fidelidade-bf04870325a6 . Acesso em: 18 de mar\u00e7o de 2021. BECKER, Lauro. Wireframes, o que s\u00e3o e por que os utilizamos?. Org\u00e2nica Natural Marketing. Dispon\u00edvel em: https://www.organicadigital.com/blog/o-que-sao-wireframes-e-por-que-os-utilizamos/. Acesso em 25/03/2021 Versionamento Data Descri\u00e7\u00e3o Autor(es) Vers\u00e3o 18/03/2021 Cria\u00e7\u00e3o do documento N\u00edcalo, Gustavo, Hugo 0.1 18/03/2021 Estrutura\u00e7\u00e3o do documento N\u00edcalo, Gustavo, Hugo 0.2 18/03/2021 Adicao do prototipo de m\u00e9dia 01 N\u00edcalo 0.3 18/03/2021 Adi\u00e7\u00e3o da primeira vers\u00e3o do prot\u00f3tipo de alta fidelidade N\u00edcalo 0.4 18/03/2021 Adi\u00e7\u00e3o dos prot\u00f3tipos do Hugo e Do Gustavo Gustavo, Hugo, N\u00edcalo 0.5 19/03/2021 Adi\u00e7\u00e3o de alguns ajustes na p\u00e1gina Gustavo 0.6 25/03/2021 Adi\u00e7\u00e3o do Wireframe Home Hugo 0.7 25/03/2021 Adi\u00e7\u00e3o do Wireframe Perfil e Descri\u00e7\u00e3o das pages Hugo 0.8","title":"Prot\u00f3tipos"},{"location":"Padroes_de_projeto/prototipos/prototipo_alta/#prototipos","text":"","title":"Prot\u00f3tipos"},{"location":"Padroes_de_projeto/prototipos/prototipo_alta/#introducao","text":"Uma das t\u00e9cnicas mais usadas para garantir que o produto ser\u00e1 bem aceito ou que n\u00e3o causar\u00e1 problemas ao usu\u00e1rio \u00e9 a prototipa\u00e7\u00e3o. \u00c9 um m\u00e9todo que ajuda a desenvolver rapidamente uma vers\u00e3o \u201ctest\u00e1vel\u201d do seu projeto, seja ele um produto ou servi\u00e7o. Para essa prototipa\u00e7\u00e3o, ser\u00e1 utilizado a ferramenta Figma . Ser\u00e1 adotado um modelo evolucion\u00e1rio de prototipa\u00e7\u00e3o, que consiste em produzir um modelo inicial de prot\u00f3tipo e ir refinando-o ao longo das v\u00e1rias fases do desenvolvimento do projeto at\u00e9 atingir sua forma final.","title":"Introdu\u00e7\u00e3o"},{"location":"Padroes_de_projeto/prototipos/prototipo_alta/#prototipo-de-alta-fidelidade","text":"Um prot\u00f3tipo de alta fidelidade (\u00e0s vezes chamado de high-fi ou hi-fi) \u00e9 uma representa\u00e7\u00e3o interativa do produto, baseada no computador ou em dispositivos m\u00f3veis. Esse prot\u00f3tipo j\u00e1 apresenta maior semelhan\u00e7a com o design final em termos de detalhes e funcionalidade.","title":"Prot\u00f3tipo de Alta Fidelidade"},{"location":"Padroes_de_projeto/prototipos/prototipo_alta/#prototipo-de-media-fidelidade","text":"Um prot\u00f3tipo de m\u00e9dia fidelidade visa definir a estrutura de conte\u00fado da interface, definir o peso, relev\u00e2ncia e rela\u00e7\u00e3o entre os elementos e criar um layout b\u00e1sico (com conte\u00fados e imagens de marca\u00e7\u00e3o). Para chegar \u00e0 primeira vers\u00e3o do prot\u00f3tipo de alta fidelidade, os membros do grupo elaboraram alguns prot\u00f3tipos de m\u00e9dia fidelidade para conciliar ideias e construir um prot\u00f3tipo de alta fidelidade mais pr\u00f3ximo ao ideal.","title":"Prot\u00f3tipo de M\u00e9dia Fidelidade"},{"location":"Padroes_de_projeto/prototipos/prototipo_alta/#prototipo-01","text":"","title":"Prot\u00f3tipo 01"},{"location":"Padroes_de_projeto/prototipos/prototipo_alta/#autor-nicalo-ribeiro","text":"","title":"Autor: N\u00edcalo Ribeiro"},{"location":"Padroes_de_projeto/prototipos/prototipo_alta/#autor-hugo","text":"","title":"Autor: Hugo"},{"location":"Padroes_de_projeto/prototipos/prototipo_alta/#autor-gustavo","text":"","title":"Autor: Gustavo"},{"location":"Padroes_de_projeto/prototipos/prototipo_alta/#prototipo-de-alta-fidelidade_1","text":"","title":"Prot\u00f3tipo de Alta Fidelidade"},{"location":"Padroes_de_projeto/prototipos/prototipo_alta/#wireframe","text":"Dessa vez a equipe decidiu produzir os prot\u00f3tipos passo-a-passo, de forma que as ideias tivessem mais espa\u00e7o para amadurecer e o front-end estivesse de acordo com os requisitos evoluidos ap\u00f3s a refatora\u00e7\u00e3o do escopo. Assim, antes de lan\u00e7armos a vers\u00e3o final, decidimos produzir um Wireframe . Wireframe pode ser definido como um esqueleto do produto final. Nele est\u00e1 contido o conjunto de estruturas do site e os principais elementos, organizados por formas geom\u00e9tricas que ajudam a visualizar um produto real. Home Na Home dispusemos os elementos de forma que simplificasse cada sess\u00e3o de servi\u00e7o para o usu\u00e1rio, dividindo em quatro os atributos: Menu Apresent\u00e7\u00e3o Mapa Feed de servi\u00e7os Homepage do site - Hugo Perfil do Estabelecimento A p\u00e1gina de Perfil conta com as principais informa\u00e7\u00f5es do Estabelecimento, descri\u00e7\u00e3o do mesmo (afim de engajar o cliente), e um menu onde o cliente pode visualizar por: Trabalhos realizados Posi\u00e7\u00e3o no Mapa Coment\u00e1rios de clientes daquele estabelecimento P\u00e1gina de perfil do Estabelecimento - Hugo","title":"Wireframe"},{"location":"Padroes_de_projeto/prototipos/prototipo_alta/#versao-1","text":"Caso haja problema na visualiza\u00e7\u00e3o, Clicar aqui .","title":"Vers\u00e3o 1"},{"location":"Padroes_de_projeto/prototipos/prototipo_alta/#referencias","text":"Prototipagem de alta fidelidade: o que \u00e9, quando, por que e como usar?. Medium. Dispon\u00edvel em: http://medium.com/somos-tera/prototipagem-de-alta-fidelidade-635d745b662b . Acesso em: 18 de mar\u00e7o de 2021. ALEX, Jefferson. Prot\u00f3tipos de baixa, m\u00e9dia e alta fidelidade. Dispon\u00edvel em: https://jeffersonalex.medium.com/prot%C3%B3tipos-de-baixa-m%C3%A9dia-e-alta-fidelidade-bf04870325a6 . Acesso em: 18 de mar\u00e7o de 2021. BECKER, Lauro. Wireframes, o que s\u00e3o e por que os utilizamos?. Org\u00e2nica Natural Marketing. Dispon\u00edvel em: https://www.organicadigital.com/blog/o-que-sao-wireframes-e-por-que-os-utilizamos/. Acesso em 25/03/2021","title":"Refer\u00eancias"},{"location":"Padroes_de_projeto/prototipos/prototipo_alta/#versionamento","text":"Data Descri\u00e7\u00e3o Autor(es) Vers\u00e3o 18/03/2021 Cria\u00e7\u00e3o do documento N\u00edcalo, Gustavo, Hugo 0.1 18/03/2021 Estrutura\u00e7\u00e3o do documento N\u00edcalo, Gustavo, Hugo 0.2 18/03/2021 Adicao do prototipo de m\u00e9dia 01 N\u00edcalo 0.3 18/03/2021 Adi\u00e7\u00e3o da primeira vers\u00e3o do prot\u00f3tipo de alta fidelidade N\u00edcalo 0.4 18/03/2021 Adi\u00e7\u00e3o dos prot\u00f3tipos do Hugo e Do Gustavo Gustavo, Hugo, N\u00edcalo 0.5 19/03/2021 Adi\u00e7\u00e3o de alguns ajustes na p\u00e1gina Gustavo 0.6 25/03/2021 Adi\u00e7\u00e3o do Wireframe Home Hugo 0.7 25/03/2021 Adi\u00e7\u00e3o do Wireframe Perfil e Descri\u00e7\u00e3o das pages Hugo 0.8","title":"Versionamento"},{"location":"videos/base/","text":"Base V\u00eddeos Primeira Entrega M\u00f3dulo Projeto N\u00e3o Orientado a Abordagens Espec\u00edficas Link: https://youtu.be/OqCiTozAYR8 M\u00f3dulo Processos/Metodologias/Abordagens Link: https://youtu.be/UjFOLxKm9jY","title":"Base"},{"location":"videos/base/#base","text":"","title":"Base"},{"location":"videos/base/#videos-primeira-entrega","text":"","title":"V\u00eddeos Primeira Entrega"},{"location":"videos/base/#modulo-projeto-nao-orientado-a-abordagens-especificas","text":"Link: https://youtu.be/OqCiTozAYR8","title":"M\u00f3dulo Projeto N\u00e3o Orientado a Abordagens Espec\u00edficas"},{"location":"videos/base/#modulo-processosmetodologiasabordagens","text":"Link: https://youtu.be/UjFOLxKm9jY","title":"M\u00f3dulo Processos/Metodologias/Abordagens"},{"location":"videos/modelagem/","text":"Modelagem V\u00eddeos Segunda Entrega Modelagem Est\u00e1tica Link: https://youtu.be/LtufoTmp0eY Modelagem Din\u00e2mica Link: https://youtu.be/Jz1-VP2KhHM Modelagem \u00c1gil Link: https://youtu.be/-za40zMGV-0 Iniciativas Extras Link: https://youtu.be/JcWaGilgkzo","title":"Modelagem"},{"location":"videos/modelagem/#modelagem","text":"","title":"Modelagem"},{"location":"videos/modelagem/#videos-segunda-entrega","text":"","title":"V\u00eddeos Segunda Entrega"},{"location":"videos/modelagem/#modelagem-estatica","text":"Link: https://youtu.be/LtufoTmp0eY","title":"Modelagem Est\u00e1tica"},{"location":"videos/modelagem/#modelagem-dinamica","text":"Link: https://youtu.be/Jz1-VP2KhHM","title":"Modelagem Din\u00e2mica"},{"location":"videos/modelagem/#modelagem-agil","text":"Link: https://youtu.be/-za40zMGV-0","title":"Modelagem \u00c1gil"},{"location":"videos/modelagem/#iniciativas-extras","text":"Link: https://youtu.be/JcWaGilgkzo","title":"Iniciativas Extras"},{"location":"videos/padroes/","text":"Padr\u00f5es de Projeto V\u00eddeos Terceira Entrega GRASPs Link: https://youtu.be/8Oc10Y0dfGk GOFs Link: https://youtu.be/oNzh8aOc1qU Padr\u00f5es Emergentes Link: https://youtu.be/Eo-qLv7fTFk Iniciativas Extras Link: https://youtu.be/TiEyO3wagP0","title":"Padr\u00f5es de Projeto"},{"location":"videos/padroes/#padroes-de-projeto","text":"","title":"Padr\u00f5es de Projeto"},{"location":"videos/padroes/#videos-terceira-entrega","text":"","title":"V\u00eddeos Terceira Entrega"},{"location":"videos/padroes/#grasps","text":"Link: https://youtu.be/8Oc10Y0dfGk","title":"GRASPs"},{"location":"videos/padroes/#gofs","text":"Link: https://youtu.be/oNzh8aOc1qU","title":"GOFs"},{"location":"videos/padroes/#padroes-emergentes","text":"Link: https://youtu.be/Eo-qLv7fTFk","title":"Padr\u00f5es Emergentes"},{"location":"videos/padroes/#iniciativas-extras","text":"Link: https://youtu.be/TiEyO3wagP0","title":"Iniciativas Extras"}]}